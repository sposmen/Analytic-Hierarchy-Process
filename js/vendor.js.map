{"version":3,"file":"_public/js/vendor.js.map","sources":["bower_components/angular/angular.js","bower_components/console-polyfill/index.js","bower_components/jquery/jquery.js","bower_components/angular-bootstrap/ui-bootstrap-tpls.js","bower_components/angular-sanitize/angular-sanitize.js","bower_components/angular-resource/angular-resource.js","bower_components/angular-cookies/angular-cookies.js","vendor/scripts/jquery.base64.js","vendor/scripts/ng-google-chart.js"],"names":["window","document","undefined","noConflict","a","angular","_angular","isArrayLike","obj","length","hasOwnProperty","constructor","JQLite","jQuery","toString","call","callee","forEach","iterator","context","key","isFunction","sortedKeys","keys","push","sort","forEachSorted","i","reverseParams","iteratorFn","value","nextUid","digit","index","uid","charCodeAt","join","String","fromCharCode","unshift","setHashKey","h","$$hashKey","extend","dst","arguments","int","str","parseInt","inherit","parent","extra","prototype","noop","identity","$","valueFn","isUndefined","isDefined","isObject","isString","isNumber","isDate","apply","isArray","isWindow","location","alert","setInterval","isScope","$evalAsync","$watch","isFile","trim","replace","isElement","node","nodeName","bind","find","map","results","list","includes","array","indexOf","arrayRemove","splice","copy","source","destination","Error","Date","getTime","shallowCopy","src","substr","equals","o1","o2","keySet","t1","t2","charAt","concat","array1","array2","slice","sliceArgs","args","startIndex","self","fn","curryArgs","RegExp","toJsonReplacer","val","test","toJson","pretty","JSON","stringify","fromJson","json","parse","toBoolean","v","lowercase","startingTag","element","jqLite","clone","html","e","TEXT_NODE","elemHtml","append","nodeType","match","parseKeyValue","keyValue","key_value","split","decodeURIComponent","toKeyValue","parts","encodeUriQuery","encodeUriSegment","pctEncodeSpaces","encodeURIComponent","angularInit","bootstrap","elements","appElement","module","names","NG_APP_CLASS_REGEXP","name","getElementById","querySelectorAll","className","exec","attributes","attr","modules","resumeBootstrapInternal","$provide","injector","createInjector","invoke","scope","compile","animator","$apply","data","enabled","NG_DEFER_BOOTSTRAP","resumeBootstrap","extraModules","snake_case","separator","SNAKE_CASE_REGEXP","letter","pos","toLowerCase","bindJQuery","JQLitePrototype","controller","inheritedData","JQLitePatchJQueryRemove","assertArg","arg","reason","assertArgFn","acceptArrayAnnotation","setupModuleLoader","ensure","factory","Object","requires","configFn","invokeLater","provider","method","insertMethod","invokeQueue","moduleInstance","runBlocks","config","_invokeQueue","_runBlocks","service","constant","animation","filter","directive","run","block","this","publishExternalAPI","version","uppercase","callbacks","counter","angularModule","$LocaleProvider","$CompileProvider","htmlAnchorDirective","input","inputDirective","textarea","form","formDirective","script","scriptDirective","select","selectDirective","style","styleDirective","option","optionDirective","ngBind","ngBindDirective","ngBindHtmlUnsafe","ngBindHtmlUnsafeDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCsp","ngCspDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngIf","ngIfDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngSubmit","ngSubmitDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngView","ngViewDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","required","requiredDirective","ngRequired","ngValue","ngValueDirective","ngAttributeAliasDirectives","ngEventDirectives","$anchorScroll","$AnchorScrollProvider","$animation","$AnimationProvider","$animator","$AnimatorProvider","$browser","$BrowserProvider","$cacheFactory","$CacheFactoryProvider","$controller","$ControllerProvider","$document","$DocumentProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$interpolate","$InterpolateProvider","$http","$HttpProvider","$httpBackend","$HttpBackendProvider","$location","$LocationProvider","$log","$LogProvider","$parse","$ParseProvider","$route","$RouteProvider","$routeParams","$RouteParamsProvider","$rootScope","$RootScopeProvider","$q","$QProvider","$sniffer","$SnifferProvider","$templateCache","$TemplateCacheProvider","$timeout","$TimeoutProvider","$window","$WindowProvider","jqNextId","jqId","camelCase","SPECIAL_CHARS_REGEXP","_","offset","toUpperCase","MOZ_HACK_REGEXP","dispatchThis","removePatch","set","setIndex","setLength","childIndex","childLength","children","fireEvent","shift","triggerHandler","originalJqFn","$original","div","createElement","innerHTML","removeChild","firstChild","JQLiteAddNodes","childNodes","remove","JQLiteClone","cloneNode","JQLiteDealoc","JQLiteRemoveData","JQLiteUnbind","type","events","JQLiteExpandoStore","handle","eventHandler","removeEventListenerFn","expandoId","jqName","expandoStore","jqCache","$destroy","JQLiteData","isSetter","keyDefined","isSimpleGetter","JQLiteHasClass","selector","JQLiteRemoveClass","cssClasses","cssClass","JQLiteAddClass","root","JQLiteController","JQLiteInheritedData","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","createEventHandler","event","preventDefault","returnValue","stopPropagation","cancelBubble","target","srcElement","defaultPrevented","prevent","isDefaultPrevented","msie","elem","hashKey","objType","HashMap","put","annotate","$inject","fnText","argDecl","last","STRIP_COMMENTS","FN_ARGS","FN_ARG_SPLIT","FN_ARG","all","underscore","modulesToLoad","supportObject","delegate","provider_","providerInjector","instantiate","$get","providerCache","providerSuffix","factoryFn","$injector","instanceCache","decorator","serviceName","decorFn","origProvider","get","orig$get","origInstance","instanceInjector","$delegate","loadModules","loadedModules","moduleFn","ii","invokeArgs","message","createInternalInjector","cache","getService","INSTANTIATING","path","locals","Type","instance","returnedValue","Constructor","has","servicename","autoScrollingEnabled","disableAutoScrolling","getFirstAnchor","result","scroll","elm","hash","scrollIntoView","getElementsByName","scrollTo","suffix","register","animationName","Browser","completeOutstandingRequest","outstandingRequestCount","outstandingRequestCallbacks","pop","error","startPoller","interval","setTimeout","check","pollFns","pollFn","pollTimeout","fireUrlChange","lastBrowserUrl","url","urlChangeListeners","listener","rawDocument","history","clearTimeout","pendingDeferIds","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","callback","addPollFn","href","baseElement","replaceState","pushState","urlChangeInit","onUrlChange","hashchange","baseHref","lastCookies","lastCookieString","cookiePath","cookies","cookieLength","cookieArray","cookie","unescape","substring","escape","warn","defer","delay","timeoutId","cancel","deferId","cacheFactory","cacheId","options","refresh","entry","freshEnd","staleEnd","n","link","p","nextEntry","prevEntry","caches","size","stats","id","capacity","Number","MAX_VALUE","lruHash","lruEntry","removeAll","destroy","info","hasDirectives","Suffix","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","MULTI_ROOT_TEMPLATE_ERROR","urlSanitizationWhitelist","registerDirective","directiveFactory","directives","priority","require","restrict","regexp","$compileNodes","transcludeFn","maxPriority","nodeValue","wrap","compositeLinkFn","compileNodes","cloneConnectFn","$linkNode","eq","safeAddClass","$element","addClass","nodeList","$rootElement","boundTranscludeFn","nodeLinkFn","childLinkFn","childScope","childTranscludeFn","stableNodeList","linkFns","$new","transclude","cloneFn","transcludeScope","$$transcluded","attrs","linkFnFound","Attributes","collectDirectives","applyDirectivesToNode","terminal","attrsMap","$attr","addDirective","directiveNormalize","nodeName_","nName","ngAttrName","nAttrs","j","jj","specified","NG_ATTR_BINDING","getAttribute","addAttrInterpolateDirective","addTextInterpolateDirective","byPriority","compileNode","templateAttrs","jqCollection","addLinkFns","pre","post","preLinkFns","postLinkFns","getControllers","retrievalMethod","optional","linkNode","linkFn","$$element","newIsolateScopeDirective","LOCAL_REGEXP","parentScope","$parent","definiton","scopeName","lastValue","parentGet","parentSet","attrName","mode","$$isolateBindings","$observe","$$observers","$$scope","assign","NON_ASSIGNABLE_MODEL_EXPRESSION","parentValue","controllerDirectives","$scope","$attrs","$transclude","directiveName","$template","transcludeDirective","directiveValue","terminalPriority","newScopeDirective","templateDirective","$compileNode","assertNoDuplicate","createComment","replaceWith","contents","template","denormalizeTemplate","newTemplateAttrs","mergeTemplateAttributes","templateUrl","compileTemplateUrl","Math","max","tDirectives","srcAttr","dstAttr","$set","beforeTemplateNodeLinkFn","tAttrs","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","linkQueue","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","success","content","tempTemplateAttrs","beforeTemplateLinkNode","linkRootElement","response","code","headers","ignoreChildLinkFn","rootElement","b","what","previousDirective","text","interpolateFn","bindings","$$inter","newNode","oldNode","parentNode","replaceChild","expando","$normalize","writeAttr","normalizedVal","booleanKey","prop","urlSanitizationNode","setAttribute","removeAttr","listeners","startSymbol","endSymbol","PREFIX_REGEXP","controllers","CNTRL_REG","expression","identifier","getter","mustHaveExpression","endIndex","exp","hasInterpolation","startSymbolLength","endSymbolLength","part","err","newErr","encodePath","segments","matchUrl","SERVER_MATCH","$$protocol","$$host","$$port","DEFAULT_PORTS","matchAppUrl","PATH_MATCH","$$path","$$search","$$hash","beginsWith","begin","whole","otherwise","stripHash","stripFile","lastIndexOf","serverBase","LocationHtml5Url","appBase","basePrefix","appBaseNoFile","$$parse","parsed","pathUrl","$$compose","search","$$url","$$absUrl","$$rewrite","appUrl","prevAppUrl","LocationHashbangUrl","hashPrefix","withoutBaseUrl","withoutHashUrl","LocationHashbangInHtml5Url","locationGetter","property","locationGetterSetter","preprocess","html5Mode","prefix","afterLocationChange","oldUrl","$broadcast","absUrl","LocationMode","initialUrl","ctrlKey","metaKey","which","absHref","rewrittenUrl","newUrl","$$phase","$digest","changeCounter","currentReplace","$$replace","debug","debugEnabled","flag","formatError","stack","sourceURL","line","consoleLog","console","logFn","log","arg1","arg2","lex","csp","is","chars","ch","was","lastCh","peek","num","isWhitespace","isIdent","isExpOperator","throwError","start","end","readNumber","number","peekCh","tokens","readIdent","lastDot","peekIndex","methodName","ident","token","OPERATORS","getterFn","setter","readString","quote","string","rawString","hex","rep","ESCAPE","ch2","ch3","fn2","fn3","parser","msg","peekToken","e1","e2","e3","e4","t","expect","consume","unaryFn","right","ternaryFn","left","middle","binaryFn","statements","filterChain","statement","_filterChain","argsFn","fnInvoke","assignment","_assignment","ternary","logicalOR","logicalAND","equality","relational","additive","multiplicative","unary","primary","ZERO","arrayDeclaration","object","literal","next","functionCall","objectIndex","fieldAccess","_fieldAccess","field","_objectIndex","indexFn","o","then","$$v","_functionCall","contextGetter","fnPtr","elementFns","allConstant","elementFn","keyValues","setValue","propertyObj","bindFnToScope","lastInstance","len","cspSafeGetterFn","key0","key1","key2","key3","key4","promise","pathVal","getterFnCache","pathKeys","pathKeysLength","Function","qFactory","nextTick","exceptionHandler","defaultCallback","defaultErrback","reject","promises","deferred","ref","resolve","pending","errback","wrappedCallback","wrappedErrback","always","makePromise","resolved","handleCallback","isResolved","callbackOutput","when","done","routes","route","reloadOnSearch","caseInsensitiveMatch","redirectPath","redirectTo","params","switchRouteMatcher","on","whenProperties","paramMatch","regex","re","lastMatchedIndex","lastIndex","updateRoute","parseRoute","current","$$route","pathParams","forceReload","interpolate","loadedTemplateUrl","segment","segmentMatch","reload","$on","TTL","digestTtl","Scope","$id","$$watchers","$$nextSibling","$$prevSibling","$$childHead","$$childTail","$root","$$destroyed","$$asyncQueue","$$listeners","beginPhase","phase","clearPhase","compileToFn","initWatchVal","isolate","Child","child","watchExp","objectEquality","watcher","listenFn","newVal","oldVal","originalFn","$watchCollection","$watchCollectionWatch","newValue","objGetter","newLength","oldValue","internalArray","oldLength","changeDetected","internalObject","$watchCollectionAction","watch","watchers","dirty","logIdx","logMsg","asyncQueue","ttl","watchLog","$eval","isNaN","expr","namedListeners","$emit","empty","targetScope","listenerArgs","currentScope","vendorPrefix","eventSupport","android","navigator","userAgent","vendorRegex","bodyStyle","body","transitions","animations","documentMode","hasEvent","divElm","securityPolicy","isActive","parseHeaders","isSameDomain","requestUrl","locationUrl","IS_SAME_DOMAIN_URL_MATCH","domain1","protocol","host","port","relativeProtocol","domain2","headersGetter","headersObj","transformData","fns","isSuccess","status","JSON_START","JSON_END","PROTECTION_PREFIX","CONTENT_TYPE_APPLICATION_JSON","Content-Type","defaults","transformResponse","transformRequest","d","common","Accept","patch","xsrfCookieName","xsrfHeaderName","interceptorFactories","interceptors","responseInterceptorFactories","responseInterceptors","requestConfig","resp","xsrfValue","serverRequest","reqData","withCredentials","sendReq","chain","reversedInterceptors","interceptor","request","requestError","responseError","thenFn","rejectFn","createShortMethods","createShortMethodsWithData","reqHeaders","headersString","resolvePromise","removePendingReq","idx","pendingRequests","cachedResp","buildUrl","defaultCache","timeout","responseType","interceptorFactory","responseFn","createHttpBackend","XHR","$browserDefer","locationProtocol","jsonpReq","doneWrapper","onreadystatechange","readyState","onload","onerror","appendChild","timeoutRequest","jsonpDone","xhr","abort","completeRequest","callbackId","open","setRequestHeader","responseHeaders","getAllResponseHeaders","simpleHeaders","header","getResponseHeader","responseText","send","NUMBER_FORMATS","DECIMAL_SEP","GROUP_SEP","PATTERNS","minInt","minFrac","maxFrac","posPre","posSuf","negPre","negSuf","gSize","lgSize","CURRENCY_SYM","DATETIME_FORMATS","MONTH","SHORTMONTH","DAY","SHORTDAY","AMPMS","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","pluralCat","invokeApply","cleanup","skipApply","deferreds","$$timeoutId","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","comperator","predicates","objKey","filtered","$locale","formats","amount","currencySymbol","formatNumber","fractionSize","pattern","groupSep","decimalSep","isFinite","isNegative","abs","numStr","formatedText","hasExponent","fractionLen","min","pow","round","fraction","lgroup","group","padNumber","digits","neg","dateGetter","date","dateStrGetter","shortForm","timeZoneGetter","zone","getTimezoneOffset","paddedZone","ampmGetter","getHours","jsonStringToDate","R_ISO8601_STR","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","m","s","ms","parseFloat","format","NUMBER_STRING","DATE_FORMATS_SPLIT","DATE_FORMATS","limit","out","sortPredicate","reverseOrder","comparator","comp","reverseComparator","descending","compare","v1","v2","predicate","arrayCopy","ngDirective","FormController","toggleValidCss","isValid","validationErrorKey","removeClass","INVALID_CLASS","VALID_CLASS","parentForm","nullFormCtrl","invalidCount","errors","$error","controls","$name","$dirty","$pristine","$valid","$invalid","$addControl","PRISTINE_CLASS","control","$removeControl","queue","validationToken","$setValidity","$setDirty","DIRTY_CLASS","$setPristine","isEmpty","textInputType","ctrl","ngTrim","$viewValue","$setViewValue","deferListener","keyCode","$render","patternValidator","ngPattern","validate","patternObj","$formatters","$parsers","ngMinlength","minlength","minLengthValidator","ngMaxlength","maxlength","maxLengthValidator","numberInputType","NUMBER_REGEXP","minValidator","maxValidator","urlInputType","urlValidator","URL_REGEXP","emailInputType","emailValidator","EMAIL_REGEXP","radioInputType","checked","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","classDirective","ngClassWatchAction","$index","classVal","k","old$index","mod","manualLowercase","manualUppercase","full","major","minor","dot","codeName","addEventListenerFn","addEventListener","attachEvent","removeEventListener","detachEvent","ready","trigger","fired","removeAttribute","hasClass","css","currentStyle","lowercasedName","getNamedItem","ret","innerText","textContent","$dv","removeData","dealoc","bindFn","eventFns","contains","compareDocumentPosition","adown","documentElement","bup","eventmap","mouseleave","mouseenter","related","relatedTarget","unbind","replaceNode","insertBefore","nextSibling","prepend","wrapNode","after","newElement","toggleClass","condition","nextElementSibling","getElementsByTagName","eventName","NG_ANIMATE_CONTROLLER","rootAnimateController","running","AnimatorService","animateActionFactory","beforeFn","afterFn","parseMaxTime","total","values","beginAnimation","activeClassName","polyfillStart","memento","getComputedStyle","w3cAnimationProp","w3cTransitionProp","vendorAnimationProp","vendorTransitionProp","durationKey","delayKey","animationIterationCountKey","duration","ELEMENT_NODE","w3cProp","vendorProp","iterations","elementStyles","parsedDelay","parsedDuration","ngAnimateValue","ngAnimate","animationPolyfill","polyfillSetup","setup","polyfillCancel","animationData","show","hide","insert","move","enter","leave","animate","http","https","ftp","paramValue","null","true","false","+","-","*","/","%","^","=","===","!==","==","!=","<",">","<=",">=","&&","||","&","|","!","f","r","'","\"","XMLHttpRequest","ActiveXObject","yyyy","yy","y","MMMM","MMM","MM","M","dd","HH","H","hh","mm","ss","sss","EEEE","EEE","Z","propName","normalized","formDirectiveFactory","isNgForm","formElement","action","preventDefaultListener","parentFormCtrl","alias","inputType","email","radio","checkbox","hidden","button","submit","reset","NgModelController","NaN","$modelValue","$viewChangeListeners","ngModelGet","ngModelSet","formatters","ctrls","modelCtrl","formCtrl","validator","viewValue","CONSTANT_VALUE_REGEXP","tpl","tplAttr","$event","childElement","$compile","srcExp","onloadExp","autoScrollExp","autoscroll","clearContent","thisChangeId","BRACE","numberExp","count","whenExp","whens","whensExpFns","NG_REMOVED","linker","trackByExp","trackByExpGetter","trackByIdFn","lhs","rhs","valueIdentifier","keyIdentifier","hashFnLocals","lastBlockMap","collection","nextCursor","arrayLength","trackById","collectionKeys","cursor","nextBlockMap","nextBlockOrder","$first","$last","$middle","newStyles","oldStyles","cases","ngSwitchController","selectedTranscludes","selectedElements","watchExpr","selectedScopes","change","selectedTransclude","selectedScope","caseElement","anchor","destroyLastScope","lastScope","update","enterElements","controllerAs","NG_OPTIONS_REGEXP","nullModelCtrl","nullOption","unknownOption","optionsMap","ngModelCtrl","databound","init","ngModelCtrl_","nullOption_","unknownOption_","addOption","removeOption","hasOption","renderUnknownOption","unknownVal","Single","selectElement","selectCtrl","emptyOption","Multiple","lastView","items","selected","Options","render","optionGroupName","optionGroup","existingParent","existingOptions","existingOption","groupLength","groupIndex","lastElement","label","optionGroups","optionGroupNames","modelValue","valuesFn","keyName","selectedSet","multiple","trackFn","trackIndex","valueName","groupByFn","modelCast","displayFn","optionGroupsCache","optGroupTemplate","optionTemplate","optionsExp","track","optionElement","requiredValidator","nullSelectCtrl","selectCtrlName","con","dummy","properties","methods","isArraylike","createOptions","optionsCache","each","core_rnotwhite","Data","defineProperty","random","dataAttr","rmultiDash","rbrace","data_user","returnTrue","returnFalse","safeActiveElement","activeElement","sibling","cur","dir","winnow","qualifier","not","grep","isSimple","core_indexOf","manipulationTarget","ownerDocument","disableScript","restoreScript","rscriptTypeMasked","setGlobalEval","elems","refElements","l","data_priv","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","hasData","access","add","getAll","tag","merge","fixInput","manipulation_rcheckableType","defaultValue","vendorPropName","capName","origName","cssPrefixes","isHidden","el","getStyles","showHide","display","css_defaultDisplay","setPositiveNumber","subtract","matches","rnumsplit","augmentWidthOrHeight","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","support","boxSizing","curCSS","rnumnonpx","boxSizingReliable","doc","elemdisplay","actualDisplay","iframe","appendTo","contentWindow","contentDocument","write","close","detach","buildParams","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","inspectPrefiltersOrTransports","originalOptions","jqXHR","inspect","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","mimeType","converters","ajaxConvert","conv2","conv","tmp","prev","responseFields","dataFilter","state","createFxNow","fxNow","now","createTween","tween","tweeners","Animation","stopped","animationPrefilters","Deferred","tick","currentTime","remaining","startTime","temp","percent","tweens","notifyWith","resolveWith","props","opts","specialEasing","originalProperties","Tween","easing","stop","gotoEnd","rejectWith","propFilter","fx","timer","anim","progress","complete","fail","hooks","cssHooks","expand","defaultPrefilter","toggle","oldfire","orig","dataShow","_queueHooks","unqueued","fire","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","genFx","includeWidth","height","opacity","width","getWindow","defaultView","rootjQuery","readyList","core_strundefined","docElem","_jQuery","_$","class2type","core_deletedIds","core_version","core_concat","core_push","core_slice","core_toString","core_hasOwn","core_trim","core_pnum","rquickExpr","rsingleTag","rmsPrefix","rdashAlpha","fcamelCase","completed","jquery","parseHTML","isPlainObject","makeArray","toArray","pushStack","prevObject","first","copyIsArray","isReady","readyWait","holdReady","hold","wait","off","Array","isNumeric","keepScripts","scripts","buildFragment","parseJSON","parseXML","xml","DOMParser","parseFromString","globalEval","indirect","eval","head","arr","inArray","second","inv","retVal","guid","proxy","chainable","emptyGet","raw","bulk","swap","old","Sizzle","seed","groups","nid","newContext","newSelector","preferredDoc","setDocument","documentIsHTML","getElementsByClassName","qsa","rbuggyQSA","tokenize","rescape","toSelector","rsibling","qsaError","rtrim","createCache","Expr","cacheLength","markFunction","assert","addHandle","handler","attrHandle","siblingCheck","diff","sourceIndex","MAX_NEGATIVE","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","parseOnly","matched","soFar","preFilters","cached","tokenCache","preFilter","rcomma","rcombinators","matchExpr","addCombinator","matcher","combinator","base","checkNonElements","doneName","outerCache","dirkey","dirruns","cachedruns","elementMatcher","matchers","condense","unmatched","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","preMap","postMap","preexisting","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","matcherCachedRuns","bySet","byElement","superMatcher","expandContext","setMatched","matchedCount","outermost","contextBackup","dirrunsUnique","uniqueSort","contexts","getById","runescape","funescape","getText","isXML","sortInput","rbuggyMatches","classCache","compilerCache","hasDuplicate","sortOrder","strundefined","hasOwn","push_native","booleans","whitespace","characterEncoding","pseudos","rattributeQuotes","rpseudo","ridentifier","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rnative","rinputs","rheader","escaped","escapedWhitespace","high","els","top","attrId","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","sortDetached","aup","ap","bp","duplicates","detectDuplicates","sortStable","selectors","createPseudo"," ","~","excess","unquoted","nodeNameSelector","operator","simple","forward","ofType","nodeIndex","useCache","lastChild","pseudo","lang","elemLang","focus","hasFocus","tabIndex","disabled","selectedIndex","even","odd","lt","gt","file","password","image","filters","div1","unique","isXMLDoc","Callbacks","memory","firing","firingStart","firingLength","firingIndex","once","stopOnFalse","disable","lock","locked","fireWith","tuples","newDefer","tuple","returned","notify","pipe","stateString","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","fragment","createDocumentFragment","opt","checkOn","optSelected","reliableMarginRight","pixelPosition","noCloneChecked","optDisabled","radioValue","checkClone","focusinBubbles","backgroundClip","clearCloneStyle","container","marginDiv","divReset","cssText","zoom","marginRight","accepts","owner","descriptor","unlock","defineProperties","stored","camel","discard","acceptData","_data","_removeData","camelKey","dequeue","startLength","time","speeds","clearQueue","nodeHook","boolHook","rclass","rreturn","rfocusable","removeProp","propFix","classes","clazz","proceed","stateVal","classNames","valHooks","one","optionSet","nType","attrHooks","attrNames","for","class","notxml","propHooks","hasAttribute","rkeyEvent","rmouseEvent","rfocusMorph","rtypenamespace","global","types","handleObjIn","eventHandle","handleObj","special","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","mappedTypes","origCount","teardown","removeEvent","onlyHandlers","bubbleType","ontype","eventPath","Event","isTrigger","namespace_re","noBubble","parentWindow","isPropagationStopped","_default","fix","handlerQueue","delegateTarget","preDispatch","currentTarget","isImmediatePropagationStopped","postDispatch","sel","fixHooks","keyHooks","original","charCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","load","blur","click","beforeunload","simulate","bubble","isSimulated","getPreventDefault","timeStamp","stopImmediatePropagation","attaches","origFn","rparentsprev","rneedsContext","guaranteedUnique","targets","closest","prevAll","addBack","parents","parentsUntil","until","nextAll","nextUntil","prevUntil","siblings","reverse","truncate","rxhtmlTag","rtagName","rhtml","rnoInnerhtml","rchecked","rscriptType","rcleanScript","wrapMap","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","createTextNode","domManip","before","keepData","cleanData","dataAndEvents","deepDataAndEvents","allowIntersection","hasScripts","iNoClone","_evalUrl","prependTo","insertAfter","replaceAll","srcElements","destElements","inPage","selection","nodes","ajax","async","throws","wrapAll","firstElementChild","wrapInner","unwrap","rdisplayswap","rmargin","rrelNum","BODY","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","computed","cssNumber","columnCount","fillOpacity","lineHeight","order","orphans","widows","zIndex","cssProps","float","_computed","minWidth","maxWidth","getPropertyValue","visible","margin","padding","border","expanded","r20","rCRLF","rsubmitterTypes","rsubmittable","serialize","param","serializeArray","hover","fnOver","fnOut","undelegate","ajaxLocParts","ajaxLocation","ajax_nonce","ajax_rquery","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","rurl","_load","prefilters","allTypes","active","lastModified","etag","isLocal","processData","contentType","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","nativeStatusText","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","requestHeaders","requestHeadersNames","strAbort","lname","overrideMimeType","finalText","crossDomain","hasContent","beforeSend","getJSON","getScript","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","xhrSupported","xhrSuccessStatus",1223,"xhrId","xhrCallbacks","cors","username","xhrFields","timerId","rfxnum","rrun","unit","scale","maxIterations","tweener","prefilter","eased","step","cssFn","speed","fadeTo","to","optall","doAnimation","finish","stopQueue","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","linear","swing","cos","PI","clearInterval","slow","fast","animated","setOffset","win","box","getBoundingClientRect","pageYOffset","pageXOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","offsetParent","parentOffset","Height","Width","defaultExtra","funcName","andSelf","exports","define","amd","findEndEventName","endEventNames","transElement","$transition","endEventName","transitionEndHandler","transitionEndEventNames","WebkitTransition","MozTransition","OTransition","transition","animationEndEventNames","transitionEndEventName","animationEndEventName","fixUpHeight","isCollapsed","initialAnimSkip","scrollHeight","collapse","currentTransition","doTransition","closeOthers","accordionConfig","openGroup","isOpen","addGroup","groupScope","that","removeGroup","heading","setHeading","accordionCtrl","getIsOpen","setIsOpen","accordionGroupCtrl","accordionTransclude","iElement","iAttrs","closeable","activeClass","toggleEvent","buttonConfig","btnRadio","btnCheckboxTrue","btnCheckboxFalse","restartTimer","go","isPlaying","pause","currentTimeout","slides","currentIndex","currentSlide","nextSlide","direction","goNext","noTransition","slide","entering","leaving","$currentTransition","transitionDone","nextIndex","indexOfSlide","newIndex","play","noPause","addSlide","removeSlide","carouselCtrl","getActive","setActive","parentActive","dayFormat","monthFormat","yearFormat","dayHeaderFormat","dayTitleFormat","monthTitleFormat","showWeeks","startingDay","yearRange","datepickerConfig","model","dateDisabled","updateCalendar","rows","labels","title","updateShowWeekNumbers","showWeekNumbers","date1","date2","getFullYear","getMonth","getDate","isDisabled","minDate","maxDate","day","month","year","dayHeader","dayTitle","monthTitle","refill","arrays","getDaysInMonth","fill","addDays","dt","isCurrentMonth","days","isCurrent","isSelected","setDate","lastDate","difference","getDay","numDisplayedFromPreviousMonth","months","years","olddt","setMonth","toggleMode","getWeekNumber","row","ceil","dialogModule","dialog","buttons","res","backdrop","dialogClass","backdropClass","transitionClass","triggerClass","backdropFade","dialogFade","keyboard","backdropClick","globalOptions","activeBackdrops","Dialog","_open","backdropEl","modalEl","handledEscapeKey","handleBackDropClick","handleLocationChange","_loadResolves","_addElementsToDom","_bindEvents","removeTriggerClass","onCloseComplete","_onCloseComplete","fadingElements","_getFadingElements","_unbindEvents","_removeElementsFromDom","templatePromise","messageBox","openElement","closeMenu","elementWasOpen","$dialog","setClosed","uiOptions","bsOptions","shownExpr","modal","isShown","noPrevious","currentPage","noNext","numPages","page","selectPage","onSelectPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","maxSize","makePage","pages","startPage","endPage","isMaxSized","floor","previousPageSet","nextPageSet","previousPage","nextPage","firstPage","lastPage","align","isPrevious","isNext","previous","getStyle","cssprop","isStaticPositioned","mouseX","mouseY","parentOffsetEl","docDomEl","elBCR","offsetParentBCR","offsetParentEl","boundingClientRect","mouse","x","defaultOptions","placement","popupDelay","triggerMap","setTriggers","triggers","$position","defaultTriggerShow","startSym","endSym","toggleTooltipBind","tt_isOpen","hideTooltipBind","showTooltipBind","tt_popupDelay","popupTimeout","ttWidth","ttHeight","ttPosition","tt_content","transitionTimeout","tooltip","appendToBody","$body","tt_placement","mousePos","tt_animation","tt_title","$tooltip","autoType","stackedTypes","progressConfig","getStackedType","makeBar","newBar","oldBar","from","addBar","bar","bars","totalPercent","clearBars","onFull","onEmpty","ratingConfig","maxRange","range","rate","readonly","tabs","tab","addTab","removeTab","newActiveIndex","vertical","onSelect","tabsetCtrl","tagName","headingElement","contentElement","tabContentTransclude","hourStep","minuteStep","showMeridian","meridians","readonlyInput","mousewheel","padFilter","timepickerConfig","getScopeHours","hours","valid","meridian","refreshTemplate","keyboardChange","validHours","minutes","getMinutes","validMinutes","addMinutes","setTime","inputs","hoursInputEl","minutesInputEl","isScrollingUp","detail","wheelDelta","incrementHours","decrementHours","incrementMinutes","decrementMinutes","updateHours","updateMinutes","setMinutes","timestamp","toggleMeridian","TYPEAHEAD_REGEXP","itemName","viewMapper","modelMapper","typeaheadParser","HOT_KEYS","originalScope","minSearch","typeaheadMinLength","waitTime","typeaheadWaitMs","parserResult","typeahead","isEditable","typeaheadEditable","isLoadingSetter","typeaheadLoading","onSelectCallback","typeaheadOnSelect","popUpEl","query","resetMatches","activeIdx","getMatchesAsync","inputValue","item","$item","$model","$label","matchIdx","selectActive","selectMatch","escapeRegexp","queryToEscape","matchItem","makeMap","htmlParser","parseStartTag","rest","blockElements","inlineElements","parseEndTag","optionalEndTagElements","voidElements","ATTR_REGEXP","doubleQuotedValue","singleQoutedValue","unqoutedValue","decodeEntities","specialElements","COMMENT_REGEXP","CDATA_REGEXP","comment","BEGING_END_TAGE_REGEXP","END_TAG_REGEXP","BEGIN_TAG_REGEXP","START_TAG_REGEXP","hiddenPre","encodeEntities","NON_ALPHANUMERIC_REGEXP","htmlSanitizeWriter","buf","ignore","validElements","lkey","validAttrs","uriAttrs","URI_REGEXP","$sanitize","optionalEndTagBlockElements","optionalEndTagInlineElements","ngBindHtml","LINKY_URL_REGEXP","MAILTO_REGEXP","writer","Route","urlParams","ResourceFactory","paramDefaults","actions","extractParams","actionParams","ids","Resource","DEFAULT_ACTIONS","hasBody","a1","a2","a3","a4","markResolved","$resolved","httpConfig","setUrlParams","$then","resource","additionalParamDefaults","save","delete","actionUrl","encodedVal","urlParam","leadingSlashes","tail","browserCookies","updated","lastBrowserCookies","runEval","currentCookies","$cookies","alpha","beta","w1","w2","buffer","bitsInBuffer","c","b64","a256","r64","r256","UTF8","encode","strUni","strUtf","cc","decode","Plugin","base64","btoa","plain","utf8encode","atob","coded","utf8decode","chart","$elm","draw","dataTable","google","visualization","DataTable","chartWrapperArgs","chartType","view","containerId","chartWrapper","ChartWrapper","addListener","displayed","setChartType","setDataTable","setView","setOptions"],"mappings":"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","sourcesContent":["/**\n * @license AngularJS v1.1.5\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, document, undefined) {\n'use strict';\n\n////////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.lowercase\n * @function\n *\n * @description Converts the specified string to lowercase.\n * @param {string} string String to be converted to lowercase.\n * @returns {string} Lowercased string.\n */\nvar lowercase = function(string){return isString(string) ? string.toLowerCase() : string;};\n\n\n/**\n * @ngdoc function\n * @name angular.uppercase\n * @function\n *\n * @description Converts the specified string to uppercase.\n * @param {string} string String to be converted to uppercase.\n * @returns {string} Uppercased string.\n */\nvar uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};\n\n\nvar manualLowercase = function(s) {\n  return isString(s)\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n      : s;\n};\nvar manualUppercase = function(s) {\n  return isString(s)\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n      : s;\n};\n\n\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n// with correct but slower alternatives.\nif ('i' !== 'I'.toLowerCase()) {\n  lowercase = manualLowercase;\n  uppercase = manualUppercase;\n}\n\n\nvar /** holds major version number for IE or NaN for real browsers */\n    msie              = int((/msie (\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]),\n    jqLite,           // delay binding since jQuery could be loaded after us.\n    jQuery,           // delay binding\n    slice             = [].slice,\n    push              = [].push,\n    toString          = Object.prototype.toString,\n\n\n    _angular          = window.angular,\n    /** @name angular */\n    angular           = window.angular || (window.angular = {}),\n    angularModule,\n    nodeName_,\n    uid               = ['0', '0', '0'];\n\n/**\n * @ngdoc function\n * @name angular.noConflict\n * @function\n *\n * @description\n * Restores the previous global value of angular and returns the current instance. Other libraries may already use the\n * angular namespace. Or a previous version of angular is already loaded on the page. In these cases you may want to\n * restore the previous namespace and keep a reference to angular.\n *\n * @return {Object} The current angular namespace\n */\nfunction noConflict() {\n  var a = window.angular;\n  window.angular = _angular;\n  return a;\n}\n\n/**\n * @private\n * @param {*} obj\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments, ...)\n */\nfunction isArrayLike(obj) {\n  if (!obj || (typeof obj.length !== 'number')) return false;\n\n  // We have on object which has length property. Should we treat it as array?\n  if (typeof obj.hasOwnProperty != 'function' &&\n      typeof obj.constructor != 'function') {\n    // This is here for IE8: it is a bogus object treat it as array;\n    return true;\n  } else  {\n    return obj instanceof JQLite ||                      // JQLite\n           (jQuery && obj instanceof jQuery) ||          // jQuery\n           toString.call(obj) !== '[object Object]' ||   // some browser native object\n           typeof obj.callee === 'function';              // arguments (on IE8 looks like regular obj)\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.forEach\n * @function\n *\n * @description\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`\n * is the value of an object property or an array element and `key` is the object property key or\n * array element index. Specifying a `context` for the function is optional.\n *\n * Note: this function was previously known as `angular.foreach`.\n *\n   <pre>\n     var values = {name: 'misko', gender: 'male'};\n     var log = [];\n     angular.forEach(values, function(value, key){\n       this.push(key + ': ' + value);\n     }, log);\n     expect(log).toEqual(['name: misko', 'gender:male']);\n   </pre>\n *\n * @param {Object|Array} obj Object to iterate over.\n * @param {Function} iterator Iterator function.\n * @param {Object=} context Object to become context (`this`) for the iterator function.\n * @returns {Object|Array} Reference to `obj`.\n */\nfunction forEach(obj, iterator, context) {\n  var key;\n  if (obj) {\n    if (isFunction(obj)){\n      for (key in obj) {\n        if (key != 'prototype' && key != 'length' && key != 'name' && obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    } else if (obj.forEach && obj.forEach !== forEach) {\n      obj.forEach(iterator, context);\n    } else if (isArrayLike(obj)) {\n      for (key = 0; key < obj.length; key++)\n        iterator.call(context, obj[key], key);\n    } else {\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction sortedKeys(obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n  return keys.sort();\n}\n\nfunction forEachSorted(obj, iterator, context) {\n  var keys = sortedKeys(obj);\n  for ( var i = 0; i < keys.length; i++) {\n    iterator.call(context, obj[keys[i]], keys[i]);\n  }\n  return keys;\n}\n\n\n/**\n * when using forEach the params are value, key, but it is often useful to have key, value.\n * @param {function(string, *)} iteratorFn\n * @returns {function(*, string)}\n */\nfunction reverseParams(iteratorFn) {\n  return function(value, key) { iteratorFn(key, value) };\n}\n\n/**\n * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric\n * characters such as '012ABC'. The reason why we are not using simply a number counter is that\n * the number string gets longer over time, and it can also overflow, where as the nextId\n * will grow much slower, it is a string, and it will never overflow.\n *\n * @returns an unique alpha-numeric string\n */\nfunction nextUid() {\n  var index = uid.length;\n  var digit;\n\n  while(index) {\n    index--;\n    digit = uid[index].charCodeAt(0);\n    if (digit == 57 /*'9'*/) {\n      uid[index] = 'A';\n      return uid.join('');\n    }\n    if (digit == 90  /*'Z'*/) {\n      uid[index] = '0';\n    } else {\n      uid[index] = String.fromCharCode(digit + 1);\n      return uid.join('');\n    }\n  }\n  uid.unshift('0');\n  return uid.join('');\n}\n\n\n/**\n * Set or clear the hashkey for an object.\n * @param obj object \n * @param h the hashkey (!truthy to delete the hashkey)\n */\nfunction setHashKey(obj, h) {\n  if (h) {\n    obj.$$hashKey = h;\n  }\n  else {\n    delete obj.$$hashKey;\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.extend\n * @function\n *\n * @description\n * Extends the destination object `dst` by copying all of the properties from the `src` object(s)\n * to `dst`. You can specify multiple `src` objects.\n *\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nfunction extend(dst) {\n  var h = dst.$$hashKey;\n  forEach(arguments, function(obj){\n    if (obj !== dst) {\n      forEach(obj, function(value, key){\n        dst[key] = value;\n      });\n    }\n  });\n\n  setHashKey(dst,h);\n  return dst;\n}\n\nfunction int(str) {\n  return parseInt(str, 10);\n}\n\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, {prototype:parent}))(), extra);\n}\n\nvar START_SPACE = /^\\s*/;\nvar END_SPACE = /\\s*$/;\nfunction stripWhitespace(str) {\n  return isString(str) ? str.replace(START_SPACE, '').replace(END_SPACE, '') : str;\n}\n\n/**\n * @ngdoc function\n * @name angular.noop\n * @function\n *\n * @description\n * A function that performs no operations. This function can be useful when writing code in the\n * functional style.\n   <pre>\n     function foo(callback) {\n       var result = calculateResult();\n       (callback || angular.noop)(result);\n     }\n   </pre>\n */\nfunction noop() {}\nnoop.$inject = [];\n\n\n/**\n * @ngdoc function\n * @name angular.identity\n * @function\n *\n * @description\n * A function that returns its first argument. This function is useful when writing code in the\n * functional style.\n *\n   <pre>\n     function transformer(transformationFn, value) {\n       return (transformationFn || identity)(value);\n     };\n   </pre>\n */\nfunction identity($) {return $;}\nidentity.$inject = [];\n\n\nfunction valueFn(value) {return function() {return value;};}\n\n/**\n * @ngdoc function\n * @name angular.isUndefined\n * @function\n *\n * @description\n * Determines if a reference is undefined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value){return typeof value == 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDefined\n * @function\n *\n * @description\n * Determines if a reference is defined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value){return typeof value != 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isObject\n * @function\n *\n * @description\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value){return value != null && typeof value == 'object';}\n\n\n/**\n * @ngdoc function\n * @name angular.isString\n * @function\n *\n * @description\n * Determines if a reference is a `String`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value){return typeof value == 'string';}\n\n\n/**\n * @ngdoc function\n * @name angular.isNumber\n * @function\n *\n * @description\n * Determines if a reference is a `Number`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value){return typeof value == 'number';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDate\n * @function\n *\n * @description\n * Determines if a value is a date.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value){\n  return toString.apply(value) == '[object Date]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isArray\n * @function\n *\n * @description\n * Determines if a reference is an `Array`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nfunction isArray(value) {\n  return toString.apply(value) == '[object Array]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isFunction\n * @function\n *\n * @description\n * Determines if a reference is a `Function`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value){return typeof value == 'function';}\n\n\n/**\n * Checks if `obj` is a window object.\n *\n * @private\n * @param {*} obj Object to check\n * @returns {boolean} True if `obj` is a window obj.\n */\nfunction isWindow(obj) {\n  return obj && obj.document && obj.location && obj.alert && obj.setInterval;\n}\n\n\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n\nfunction isFile(obj) {\n  return toString.apply(obj) === '[object File]';\n}\n\n\nfunction isBoolean(value) {\n  return typeof value == 'boolean';\n}\n\n\nfunction trim(value) {\n  return isString(value) ? value.replace(/^\\s*/, '').replace(/\\s*$/, '') : value;\n}\n\n/**\n * @ngdoc function\n * @name angular.isElement\n * @function\n *\n * @description\n * Determines if a reference is a DOM element (or wrapped jQuery element).\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n */\nfunction isElement(node) {\n  return node &&\n    (node.nodeName  // we are a direct element\n    || (node.bind && node.find));  // we have a bind and find method part of jQuery API\n}\n\n/**\n * @param str 'key1,key2,...'\n * @returns {object} in the form of {key1:true, key2:true, ...}\n */\nfunction makeMap(str){\n  var obj = {}, items = str.split(\",\"), i;\n  for ( i = 0; i < items.length; i++ )\n    obj[ items[i] ] = true;\n  return obj;\n}\n\n\nif (msie < 9) {\n  nodeName_ = function(element) {\n    element = element.nodeName ? element : element[0];\n    return (element.scopeName && element.scopeName != 'HTML')\n      ? uppercase(element.scopeName + ':' + element.nodeName) : element.nodeName;\n  };\n} else {\n  nodeName_ = function(element) {\n    return element.nodeName ? element.nodeName : element[0].nodeName;\n  };\n}\n\n\nfunction map(obj, iterator, context) {\n  var results = [];\n  forEach(obj, function(value, index, list) {\n    results.push(iterator.call(context, value, index, list));\n  });\n  return results;\n}\n\n\n/**\n * @description\n * Determines the number of elements in an array, the number of properties an object has, or\n * the length of a string.\n *\n * Note: This function is used to augment the Object type in Angular expressions. See\n * {@link angular.Object} for more information about Angular arrays.\n *\n * @param {Object|Array|string} obj Object, array, or string to inspect.\n * @param {boolean} [ownPropsOnly=false] Count only \"own\" properties in an object\n * @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.\n */\nfunction size(obj, ownPropsOnly) {\n  var size = 0, key;\n\n  if (isArray(obj) || isString(obj)) {\n    return obj.length;\n  } else if (isObject(obj)){\n    for (key in obj)\n      if (!ownPropsOnly || obj.hasOwnProperty(key))\n        size++;\n  }\n\n  return size;\n}\n\n\nfunction includes(array, obj) {\n  return indexOf(array, obj) != -1;\n}\n\nfunction indexOf(array, obj) {\n  if (array.indexOf) return array.indexOf(obj);\n\n  for ( var i = 0; i < array.length; i++) {\n    if (obj === array[i]) return i;\n  }\n  return -1;\n}\n\nfunction arrayRemove(array, value) {\n  var index = indexOf(array, value);\n  if (index >=0)\n    array.splice(index, 1);\n  return value;\n}\n\nfunction isLeafNode (node) {\n  if (node) {\n    switch (node.nodeName) {\n    case \"OPTION\":\n    case \"PRE\":\n    case \"TITLE\":\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @ngdoc function\n * @name angular.copy\n * @function\n *\n * @description\n * Creates a deep copy of `source`, which should be an object or an array.\n *\n * * If no destination is supplied, a copy of the object or array is created.\n * * If a destination is provided, all of its elements (for array) or properties (for objects)\n *   are deleted and then all elements/properties from the source are copied to it.\n * * If  `source` is not an object or array, `source` is returned.\n *\n * Note: this function is used to augment the Object type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {*} source The source that will be used to make a copy.\n *                   Can be any type, including primitives, `null`, and `undefined`.\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\n *     provided, must be of the same type as `source`.\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\n */\nfunction copy(source, destination){\n  if (isWindow(source) || isScope(source)) throw Error(\"Can't copy Window or Scope\");\n  if (!destination) {\n    destination = source;\n    if (source) {\n      if (isArray(source)) {\n        destination = copy(source, []);\n      } else if (isDate(source)) {\n        destination = new Date(source.getTime());\n      } else if (isObject(source)) {\n        destination = copy(source, {});\n      }\n    }\n  } else {\n    if (source === destination) throw Error(\"Can't copy equivalent objects or arrays\");\n    if (isArray(source)) {\n      destination.length = 0;\n      for ( var i = 0; i < source.length; i++) {\n        destination.push(copy(source[i]));\n      }\n    } else {\n      var h = destination.$$hashKey;\n      forEach(destination, function(value, key){\n        delete destination[key];\n      });\n      for ( var key in source) {\n        destination[key] = copy(source[key]);\n      }\n      setHashKey(destination,h);\n    }\n  }\n  return destination;\n}\n\n/**\n * Create a shallow copy of an object\n */\nfunction shallowCopy(src, dst) {\n  dst = dst || {};\n\n  for(var key in src) {\n    if (src.hasOwnProperty(key) && key.substr(0, 2) !== '$$') {\n      dst[key] = src[key];\n    }\n  }\n\n  return dst;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.equals\n * @function\n *\n * @description\n * Determines if two objects or two values are equivalent. Supports value types, arrays and\n * objects.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties pass `===` comparison.\n * * Both values are NaN. (In JavasScript, NaN == NaN => false. But we consider two NaN as equal)\n *\n * During a property comparison, properties of `function` type and properties with names\n * that begin with `$` are ignored.\n *\n * Scope and DOMWindow objects are being compared only by identify (`===`).\n *\n * @param {*} o1 Object or value to compare.\n * @param {*} o2 Object or value to compare.\n * @returns {boolean} True if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n  if (t1 == t2) {\n    if (t1 == 'object') {\n      if (isArray(o1)) {\n        if ((length = o1.length) == o2.length) {\n          for(key=0; key<length; key++) {\n            if (!equals(o1[key], o2[key])) return false;\n          }\n          return true;\n        }\n      } else if (isDate(o1)) {\n        return isDate(o2) && o1.getTime() == o2.getTime();\n      } else {\n        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2)) return false;\n        keySet = {};\n        for(key in o1) {\n          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n          if (!equals(o1[key], o2[key])) return false;\n          keySet[key] = true;\n        }\n        for(key in o2) {\n          if (!keySet[key] &&\n              key.charAt(0) !== '$' &&\n              o2[key] !== undefined &&\n              !isFunction(o2[key])) return false;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n\nfunction concat(array1, array2, index) {\n  return array1.concat(slice.call(array2, index));\n}\n\nfunction sliceArgs(args, startIndex) {\n  return slice.call(args, startIndex || 0);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.bind\n * @function\n *\n * @description\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n * known as [function currying](http://en.wikipedia.org/wiki/Currying).\n *\n * @param {Object} self Context which `fn` should be evaluated in.\n * @param {function()} fn Function to be bound.\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n */\nfunction bind(self, fn) {\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\n    return curryArgs.length\n      ? function() {\n          return arguments.length\n            ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0)))\n            : fn.apply(self, curryArgs);\n        }\n      : function() {\n          return arguments.length\n            ? fn.apply(self, arguments)\n            : fn.call(self);\n        };\n  } else {\n    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\n    return fn;\n  }\n}\n\n\nfunction toJsonReplacer(key, value) {\n  var val = value;\n\n  if (/^\\$+/.test(key)) {\n    val = undefined;\n  } else if (isWindow(value)) {\n    val = '$WINDOW';\n  } else if (value &&  document === value) {\n    val = '$DOCUMENT';\n  } else if (isScope(value)) {\n    val = '$SCOPE';\n  }\n\n  return val;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.toJson\n * @function\n *\n * @description\n * Serializes input into a JSON-formatted string.\n *\n * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\n * @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.\n * @returns {string} Jsonified string representing `obj`.\n */\nfunction toJson(obj, pretty) {\n  return JSON.stringify(obj, toJsonReplacer, pretty ? '  ' : null);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.fromJson\n * @function\n *\n * @description\n * Deserializes a JSON string.\n *\n * @param {string} json JSON string to deserialize.\n * @returns {Object|Array|Date|string|number} Deserialized thingy.\n */\nfunction fromJson(json) {\n  return isString(json)\n      ? JSON.parse(json)\n      : json;\n}\n\n\nfunction toBoolean(value) {\n  if (value && value.length !== 0) {\n    var v = lowercase(\"\" + value);\n    value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');\n  } else {\n    value = false;\n  }\n  return value;\n}\n\n/**\n * @returns {string} Returns the string representation of the element.\n */\nfunction startingTag(element) {\n  element = jqLite(element).clone();\n  try {\n    // turns out IE does not let you set .html() on elements which\n    // are not allowed to have children. So we just ignore it.\n    element.html('');\n  } catch(e) {}\n  // As Per DOM Standards\n  var TEXT_NODE = 3;\n  var elemHtml = jqLite('<div>').append(element).html();\n  try {\n    return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) :\n        elemHtml.\n          match(/^(<[^>]+>)/)[1].\n          replace(/^<([\\w\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\n  } catch(e) {\n    return lowercase(elemHtml);\n  }\n\n}\n\n\n/////////////////////////////////////////////////\n\n/**\n * Parses an escaped url query string into key-value pairs.\n * @returns Object.<(string|boolean)>\n */\nfunction parseKeyValue(/**string*/keyValue) {\n  var obj = {}, key_value, key;\n  forEach((keyValue || \"\").split('&'), function(keyValue){\n    if (keyValue) {\n      key_value = keyValue.split('=');\n      key = decodeURIComponent(key_value[0]);\n      obj[key] = isDefined(key_value[1]) ? decodeURIComponent(key_value[1]) : true;\n    }\n  });\n  return obj;\n}\n\nfunction toKeyValue(obj) {\n  var parts = [];\n  forEach(obj, function(value, key) {\n    parts.push(encodeUriQuery(key, true) + (value === true ? '' : '=' + encodeUriQuery(value, true)));\n  });\n  return parts.length ? parts.join('&') : '';\n}\n\n\n/**\n * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n * segments:\n *    segment       = *pchar\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriSegment(val) {\n  return encodeUriQuery(val, true).\n             replace(/%26/gi, '&').\n             replace(/%3D/gi, '=').\n             replace(/%2B/gi, '+');\n}\n\n\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query       = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriQuery(val, pctEncodeSpaces) {\n  return encodeURIComponent(val).\n             replace(/%40/gi, '@').\n             replace(/%3A/gi, ':').\n             replace(/%24/g, '$').\n             replace(/%2C/gi, ',').\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngApp\n *\n * @element ANY\n * @param {angular.Module} ngApp an optional application\n *   {@link angular.module module} name to load.\n *\n * @description\n *\n * Use this directive to auto-bootstrap an application. Only\n * one directive can be used per HTML document. The directive\n * designates the root of the application and is typically placed\n * at the root of the page.\n *\n * In the example below if the `ngApp` directive would not be placed\n * on the `html` element then the document would not be compiled\n * and the `{{ 1+2 }}` would not be resolved to `3`.\n *\n * `ngApp` is the easiest way to bootstrap an application.\n *\n <doc:example>\n   <doc:source>\n    I can add: 1 + 2 =  {{ 1+2 }}\n   </doc:source>\n </doc:example>\n *\n */\nfunction angularInit(element, bootstrap) {\n  var elements = [element],\n      appElement,\n      module,\n      names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n      NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/;\n\n  function append(element) {\n    element && elements.push(element);\n  }\n\n  forEach(names, function(name) {\n    names[name] = true;\n    append(document.getElementById(name));\n    name = name.replace(':', '\\\\:');\n    if (element.querySelectorAll) {\n      forEach(element.querySelectorAll('.' + name), append);\n      forEach(element.querySelectorAll('.' + name + '\\\\:'), append);\n      forEach(element.querySelectorAll('[' + name + ']'), append);\n    }\n  });\n\n  forEach(elements, function(element) {\n    if (!appElement) {\n      var className = ' ' + element.className + ' ';\n      var match = NG_APP_CLASS_REGEXP.exec(className);\n      if (match) {\n        appElement = element;\n        module = (match[2] || '').replace(/\\s+/g, ',');\n      } else {\n        forEach(element.attributes, function(attr) {\n          if (!appElement && names[attr.name]) {\n            appElement = element;\n            module = attr.value;\n          }\n        });\n      }\n    }\n  });\n  if (appElement) {\n    bootstrap(appElement, module ? [module] : []);\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.bootstrap\n * @description\n * Use this function to manually start up angular application.\n *\n * See: {@link guide/bootstrap Bootstrap}\n *\n * @param {Element} element DOM element which is the root of angular application.\n * @param {Array<String|Function>=} modules an array of module declarations. See: {@link angular.module modules}\n * @returns {AUTO.$injector} Returns the newly created injector for this app.\n */\nfunction bootstrap(element, modules) {\n  var resumeBootstrapInternal = function() {\n    element = jqLite(element);\n    modules = modules || [];\n    modules.unshift(['$provide', function($provide) {\n      $provide.value('$rootElement', element);\n    }]);\n    modules.unshift('ng');\n    var injector = createInjector(modules);\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector', '$animator',\n       function(scope, element, compile, injector, animator) {\n        scope.$apply(function() {\n          element.data('$injector', injector);\n          compile(element)(scope);\n        });\n        animator.enabled(true);\n      }]\n    );\n    return injector;\n  };\n\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n    return resumeBootstrapInternal();\n  }\n\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n  angular.resumeBootstrap = function(extraModules) {\n    forEach(extraModules, function(module) {\n      modules.push(module);\n    });\n    resumeBootstrapInternal();\n  };\n}\n\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\nfunction snake_case(name, separator){\n  separator = separator || '_';\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n    return (pos ? separator : '') + letter.toLowerCase();\n  });\n}\n\nfunction bindJQuery() {\n  // bind to jQuery if present;\n  jQuery = window.jQuery;\n  // reset to jQuery or default to us.\n  if (jQuery) {\n    jqLite = jQuery;\n    extend(jQuery.fn, {\n      scope: JQLitePrototype.scope,\n      controller: JQLitePrototype.controller,\n      injector: JQLitePrototype.injector,\n      inheritedData: JQLitePrototype.inheritedData\n    });\n    JQLitePatchJQueryRemove('remove', true);\n    JQLitePatchJQueryRemove('empty');\n    JQLitePatchJQueryRemove('html');\n  } else {\n    jqLite = JQLite;\n  }\n  angular.element = jqLite;\n}\n\n/**\n * throw error if the argument is falsy.\n */\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw new Error(\"Argument '\" + (name || '?') + \"' is \" + (reason || \"required\"));\n  }\n  return arg;\n}\n\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n  if (acceptArrayAnnotation && isArray(arg)) {\n      arg = arg[arg.length - 1];\n  }\n\n  assertArg(isFunction(arg), name, 'not a function, got ' +\n      (arg && typeof arg == 'object' ? arg.constructor.name || 'Object' : typeof arg));\n  return arg;\n}\n\n/**\n * @ngdoc interface\n * @name angular.Module\n * @description\n *\n * Interface for configuring angular {@link angular.module modules}.\n */\n\nfunction setupModuleLoader(window) {\n\n  function ensure(obj, name, factory) {\n    return obj[name] || (obj[name] = factory());\n  }\n\n  return ensure(ensure(window, 'angular', Object), 'module', function() {\n    /** @type {Object.<string, angular.Module>} */\n    var modules = {};\n\n    /**\n     * @ngdoc function\n     * @name angular.module\n     * @description\n     *\n     * The `angular.module` is a global place for creating and registering Angular modules. All\n     * modules (angular core or 3rd party) that should be available to an application must be\n     * registered using this mechanism.\n     *\n     *\n     * # Module\n     *\n     * A module is a collocation of services, directives, filters, and configuration information. Module\n     * is used to configure the {@link AUTO.$injector $injector}.\n     *\n     * <pre>\n     * // Create a new module\n     * var myModule = angular.module('myModule', []);\n     *\n     * // register a new service\n     * myModule.value('appName', 'MyCoolApp');\n     *\n     * // configure existing services inside initialization blocks.\n     * myModule.config(function($locationProvider) {\n     *   // Configure existing providers\n     *   $locationProvider.hashPrefix('!');\n     * });\n     * </pre>\n     *\n     * Then you can create an injector and load your modules like this:\n     *\n     * <pre>\n     * var injector = angular.injector(['ng', 'MyModule'])\n     * </pre>\n     *\n     * However it's more likely that you'll just use\n     * {@link ng.directive:ngApp ngApp} or\n     * {@link angular.bootstrap} to simplify this process for you.\n     *\n     * @param {!string} name The name of the module to create or retrieve.\n     * @param {Array.<string>=} requires If specified then new module is being created. If unspecified then the\n     *        the module is being retrieved for further configuration.\n     * @param {Function} configFn Optional configuration function for the module. Same as\n     *        {@link angular.Module#config Module#config()}.\n     * @returns {module} new module with the {@link angular.Module} api.\n     */\n    return function module(name, requires, configFn) {\n      if (requires && modules.hasOwnProperty(name)) {\n        modules[name] = null;\n      }\n      return ensure(modules, name, function() {\n        if (!requires) {\n          throw Error('No module: ' + name);\n        }\n\n        /** @type {!Array.<Array.<*>>} */\n        var invokeQueue = [];\n\n        /** @type {!Array.<Function>} */\n        var runBlocks = [];\n\n        var config = invokeLater('$injector', 'invoke');\n\n        /** @type {angular.Module} */\n        var moduleInstance = {\n          // Private state\n          _invokeQueue: invokeQueue,\n          _runBlocks: runBlocks,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#requires\n           * @propertyOf angular.Module\n           * @returns {Array.<string>} List of module names which must be loaded before this module.\n           * @description\n           * Holds the list of modules which the injector will load before the current module is loaded.\n           */\n          requires: requires,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#name\n           * @propertyOf angular.Module\n           * @returns {string} Name of the module.\n           * @description\n           */\n          name: name,\n\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#provider\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} providerType Construction function for creating new instance of the service.\n           * @description\n           * See {@link AUTO.$provide#provider $provide.provider()}.\n           */\n          provider: invokeLater('$provide', 'provider'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#factory\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} providerFunction Function for creating new instance of the service.\n           * @description\n           * See {@link AUTO.$provide#factory $provide.factory()}.\n           */\n          factory: invokeLater('$provide', 'factory'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#service\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} constructor A constructor function that will be instantiated.\n           * @description\n           * See {@link AUTO.$provide#service $provide.service()}.\n           */\n          service: invokeLater('$provide', 'service'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#value\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {*} object Service instance object.\n           * @description\n           * See {@link AUTO.$provide#value $provide.value()}.\n           */\n          value: invokeLater('$provide', 'value'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#constant\n           * @methodOf angular.Module\n           * @param {string} name constant name\n           * @param {*} object Constant value.\n           * @description\n           * Because the constant are fixed, they get applied before other provide methods.\n           * See {@link AUTO.$provide#constant $provide.constant()}.\n           */\n          constant: invokeLater('$provide', 'constant', 'unshift'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#animation\n           * @methodOf angular.Module\n           * @param {string} name animation name\n           * @param {Function} animationFactory Factory function for creating new instance of an animation.\n           * @description\n           *\n           * Defines an animation hook that can be later used with {@link ng.directive:ngAnimate ngAnimate}\n           * alongside {@link ng.directive:ngAnimate#Description common ng directives} as well as custom directives.\n           * <pre>\n           * module.animation('animation-name', function($inject1, $inject2) {\n           *   return {\n           *     //this gets called in preparation to setup an animation\n           *     setup : function(element) { ... },\n           *\n           *     //this gets called once the animation is run\n           *     start : function(element, done, memo) { ... }\n           *   }\n           * })\n           * </pre>\n           *\n           * See {@link ng.$animationProvider#register $animationProvider.register()} and\n           * {@link ng.directive:ngAnimate ngAnimate} for more information.\n           */\n          animation: invokeLater('$animationProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#filter\n           * @methodOf angular.Module\n           * @param {string} name Filter name.\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\n           * @description\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n           */\n          filter: invokeLater('$filterProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#controller\n           * @methodOf angular.Module\n           * @param {string} name Controller name.\n           * @param {Function} constructor Controller constructor function.\n           * @description\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n           */\n          controller: invokeLater('$controllerProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#directive\n           * @methodOf angular.Module\n           * @param {string} name directive name\n           * @param {Function} directiveFactory Factory function for creating new instance of\n           * directives.\n           * @description\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n           */\n          directive: invokeLater('$compileProvider', 'directive'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#config\n           * @methodOf angular.Module\n           * @param {Function} configFn Execute this function on module load. Useful for service\n           *    configuration.\n           * @description\n           * Use this method to register work which needs to be performed on module loading.\n           */\n          config: config,\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#run\n           * @methodOf angular.Module\n           * @param {Function} initializationFn Execute this function after injector creation.\n           *    Useful for application initialization.\n           * @description\n           * Use this method to register work which should be performed when the injector is done\n           * loading all modules.\n           */\n          run: function(block) {\n            runBlocks.push(block);\n            return this;\n          }\n        };\n\n        if (configFn) {\n          config(configFn);\n        }\n\n        return  moduleInstance;\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @param {String=} insertMethod\n         * @returns {angular.Module}\n         */\n        function invokeLater(provider, method, insertMethod) {\n          return function() {\n            invokeQueue[insertMethod || 'push']([provider, method, arguments]);\n            return moduleInstance;\n          }\n        }\n      });\n    };\n  });\n\n}\n\n/**\n * @ngdoc property\n * @name angular.version\n * @description\n * An object that contains information about the current AngularJS version. This object has the\n * following properties:\n *\n * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n * - `major` – `{number}` – Major version number, such as \"0\".\n * - `minor` – `{number}` – Minor version number, such as \"9\".\n * - `dot` – `{number}` – Dot version number, such as \"18\".\n * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n */\nvar version = {\n  full: '1.1.5',    // all of these placeholder strings will be replaced by grunt's\n  major: 1,    // package task\n  minor: 1,\n  dot: 5,\n  codeName: 'triangle-squarification'\n};\n\n\nfunction publishExternalAPI(angular){\n  extend(angular, {\n    'bootstrap': bootstrap,\n    'copy': copy,\n    'extend': extend,\n    'equals': equals,\n    'element': jqLite,\n    'forEach': forEach,\n    'injector': createInjector,\n    'noop':noop,\n    'bind':bind,\n    'toJson': toJson,\n    'fromJson': fromJson,\n    'identity':identity,\n    'isUndefined': isUndefined,\n    'isDefined': isDefined,\n    'isString': isString,\n    'isFunction': isFunction,\n    'isObject': isObject,\n    'isNumber': isNumber,\n    'isElement': isElement,\n    'isArray': isArray,\n    'version': version,\n    'isDate': isDate,\n    'lowercase': lowercase,\n    'uppercase': uppercase,\n    'callbacks': {counter: 0},\n    'noConflict': noConflict\n  });\n\n  angularModule = setupModuleLoader(window);\n  try {\n    angularModule('ngLocale');\n  } catch (e) {\n    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\n  }\n\n  angularModule('ng', ['ngLocale'], ['$provide',\n    function ngModule($provide) {\n      $provide.provider('$compile', $CompileProvider).\n        directive({\n            a: htmlAnchorDirective,\n            input: inputDirective,\n            textarea: inputDirective,\n            form: formDirective,\n            script: scriptDirective,\n            select: selectDirective,\n            style: styleDirective,\n            option: optionDirective,\n            ngBind: ngBindDirective,\n            ngBindHtmlUnsafe: ngBindHtmlUnsafeDirective,\n            ngBindTemplate: ngBindTemplateDirective,\n            ngClass: ngClassDirective,\n            ngClassEven: ngClassEvenDirective,\n            ngClassOdd: ngClassOddDirective,\n            ngCsp: ngCspDirective,\n            ngCloak: ngCloakDirective,\n            ngController: ngControllerDirective,\n            ngForm: ngFormDirective,\n            ngHide: ngHideDirective,\n            ngIf: ngIfDirective,\n            ngInclude: ngIncludeDirective,\n            ngInit: ngInitDirective,\n            ngNonBindable: ngNonBindableDirective,\n            ngPluralize: ngPluralizeDirective,\n            ngRepeat: ngRepeatDirective,\n            ngShow: ngShowDirective,\n            ngSubmit: ngSubmitDirective,\n            ngStyle: ngStyleDirective,\n            ngSwitch: ngSwitchDirective,\n            ngSwitchWhen: ngSwitchWhenDirective,\n            ngSwitchDefault: ngSwitchDefaultDirective,\n            ngOptions: ngOptionsDirective,\n            ngView: ngViewDirective,\n            ngTransclude: ngTranscludeDirective,\n            ngModel: ngModelDirective,\n            ngList: ngListDirective,\n            ngChange: ngChangeDirective,\n            required: requiredDirective,\n            ngRequired: requiredDirective,\n            ngValue: ngValueDirective\n        }).\n        directive(ngAttributeAliasDirectives).\n        directive(ngEventDirectives);\n      $provide.provider({\n        $anchorScroll: $AnchorScrollProvider,\n        $animation: $AnimationProvider,\n        $animator: $AnimatorProvider,\n        $browser: $BrowserProvider,\n        $cacheFactory: $CacheFactoryProvider,\n        $controller: $ControllerProvider,\n        $document: $DocumentProvider,\n        $exceptionHandler: $ExceptionHandlerProvider,\n        $filter: $FilterProvider,\n        $interpolate: $InterpolateProvider,\n        $http: $HttpProvider,\n        $httpBackend: $HttpBackendProvider,\n        $location: $LocationProvider,\n        $log: $LogProvider,\n        $parse: $ParseProvider,\n        $route: $RouteProvider,\n        $routeParams: $RouteParamsProvider,\n        $rootScope: $RootScopeProvider,\n        $q: $QProvider,\n        $sniffer: $SnifferProvider,\n        $templateCache: $TemplateCacheProvider,\n        $timeout: $TimeoutProvider,\n        $window: $WindowProvider\n      });\n    }\n  ]);\n}\n\n//////////////////////////////////\n//JQLite\n//////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.element\n * @function\n *\n * @description\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n * `angular.element` can be either an alias for [jQuery](http://api.jquery.com/jQuery/) function, if\n * jQuery is available, or a function that wraps the element or string in Angular's jQuery lite\n * implementation (commonly referred to as jqLite).\n *\n * Real jQuery always takes precedence over jqLite, provided it was loaded before `DOMContentLoaded`\n * event fired.\n *\n * jqLite is a tiny, API-compatible subset of jQuery that allows\n * Angular to manipulate the DOM. jqLite implements only the most commonly needed functionality\n * within a very small footprint, so only a subset of the jQuery API - methods, arguments and\n * invocation styles - are supported.\n *\n * Note: All element references in Angular are always wrapped with jQuery or jqLite; they are never\n * raw DOM references.\n *\n * ## Angular's jQuery lite provides the following methods:\n *\n * - [addClass()](http://api.jquery.com/addClass/)\n * - [after()](http://api.jquery.com/after/)\n * - [append()](http://api.jquery.com/append/)\n * - [attr()](http://api.jquery.com/attr/)\n * - [bind()](http://api.jquery.com/bind/) - Does not support namespaces\n * - [children()](http://api.jquery.com/children/) - Does not support selectors\n * - [clone()](http://api.jquery.com/clone/)\n * - [contents()](http://api.jquery.com/contents/)\n * - [css()](http://api.jquery.com/css/)\n * - [data()](http://api.jquery.com/data/)\n * - [eq()](http://api.jquery.com/eq/)\n * - [find()](http://api.jquery.com/find/) - Limited to lookups by tag name\n * - [hasClass()](http://api.jquery.com/hasClass/)\n * - [html()](http://api.jquery.com/html/)\n * - [next()](http://api.jquery.com/next/) - Does not support selectors\n * - [parent()](http://api.jquery.com/parent/) - Does not support selectors\n * - [prepend()](http://api.jquery.com/prepend/)\n * - [prop()](http://api.jquery.com/prop/)\n * - [ready()](http://api.jquery.com/ready/)\n * - [remove()](http://api.jquery.com/remove/)\n * - [removeAttr()](http://api.jquery.com/removeAttr/)\n * - [removeClass()](http://api.jquery.com/removeClass/)\n * - [removeData()](http://api.jquery.com/removeData/)\n * - [replaceWith()](http://api.jquery.com/replaceWith/)\n * - [text()](http://api.jquery.com/text/)\n * - [toggleClass()](http://api.jquery.com/toggleClass/)\n * - [triggerHandler()](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers.\n * - [unbind()](http://api.jquery.com/unbind/) - Does not support namespaces\n * - [val()](http://api.jquery.com/val/)\n * - [wrap()](http://api.jquery.com/wrap/)\n *\n * ## In addition to the above, Angular provides additional methods to both jQuery and jQuery lite:\n *\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n *   `'ngModel'`).\n * - `injector()` - retrieves the injector of the current element or its parent.\n * - `scope()` - retrieves the {@link api/ng.$rootScope.Scope scope} of the current\n *   element or its parent.\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n *   parent element is reached.\n *\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n * @returns {Object} jQuery object.\n */\n\nvar jqCache = JQLite.cache = {},\n    jqName = JQLite.expando = 'ng-' + new Date().getTime(),\n    jqId = 1,\n    addEventListenerFn = (window.document.addEventListener\n      ? function(element, type, fn) {element.addEventListener(type, fn, false);}\n      : function(element, type, fn) {element.attachEvent('on' + type, fn);}),\n    removeEventListenerFn = (window.document.removeEventListener\n      ? function(element, type, fn) {element.removeEventListener(type, fn, false); }\n      : function(element, type, fn) {element.detachEvent('on' + type, fn); });\n\nfunction jqNextId() { return ++jqId; }\n\n\nvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\nvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n/**\n * Converts snake_case to camelCase.\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction camelCase(name) {\n  return name.\n    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n      return offset ? letter.toUpperCase() : letter;\n    }).\n    replace(MOZ_HACK_REGEXP, 'Moz$1');\n}\n\n/////////////////////////////////////////////\n// jQuery mutation patch\n//\n//  In conjunction with bindJQuery intercepts all jQuery's DOM destruction apis and fires a\n// $destroy event on all DOM nodes being removed.\n//\n/////////////////////////////////////////////\n\nfunction JQLitePatchJQueryRemove(name, dispatchThis) {\n  var originalJqFn = jQuery.fn[name];\n  originalJqFn = originalJqFn.$original || originalJqFn;\n  removePatch.$original = originalJqFn;\n  jQuery.fn[name] = removePatch;\n\n  function removePatch() {\n    var list = [this],\n        fireEvent = dispatchThis,\n        set, setIndex, setLength,\n        element, childIndex, childLength, children,\n        fns, events;\n\n    while(list.length) {\n      set = list.shift();\n      for(setIndex = 0, setLength = set.length; setIndex < setLength; setIndex++) {\n        element = jqLite(set[setIndex]);\n        if (fireEvent) {\n          element.triggerHandler('$destroy');\n        } else {\n          fireEvent = !fireEvent;\n        }\n        for(childIndex = 0, childLength = (children = element.children()).length;\n            childIndex < childLength;\n            childIndex++) {\n          list.push(jQuery(children[childIndex]));\n        }\n      }\n    }\n    return originalJqFn.apply(this, arguments);\n  }\n}\n\n/////////////////////////////////////////////\nfunction JQLite(element) {\n  if (element instanceof JQLite) {\n    return element;\n  }\n  if (!(this instanceof JQLite)) {\n    if (isString(element) && element.charAt(0) != '<') {\n      throw Error('selectors not implemented');\n    }\n    return new JQLite(element);\n  }\n\n  if (isString(element)) {\n    var div = document.createElement('div');\n    // Read about the NoScope elements here:\n    // http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    div.innerHTML = '<div>&#160;</div>' + element; // IE insanity to make NoScope elements work!\n    div.removeChild(div.firstChild); // remove the superfluous div\n    JQLiteAddNodes(this, div.childNodes);\n    this.remove(); // detach the elements from the temporary DOM div.\n  } else {\n    JQLiteAddNodes(this, element);\n  }\n}\n\nfunction JQLiteClone(element) {\n  return element.cloneNode(true);\n}\n\nfunction JQLiteDealoc(element){\n  JQLiteRemoveData(element);\n  for ( var i = 0, children = element.childNodes || []; i < children.length; i++) {\n    JQLiteDealoc(children[i]);\n  }\n}\n\nfunction JQLiteUnbind(element, type, fn) {\n  var events = JQLiteExpandoStore(element, 'events'),\n      handle = JQLiteExpandoStore(element, 'handle');\n\n  if (!handle) return; //no listeners registered\n\n  if (isUndefined(type)) {\n    forEach(events, function(eventHandler, type) {\n      removeEventListenerFn(element, type, eventHandler);\n      delete events[type];\n    });\n  } else {\n    if (isUndefined(fn)) {\n      removeEventListenerFn(element, type, events[type]);\n      delete events[type];\n    } else {\n      arrayRemove(events[type], fn);\n    }\n  }\n}\n\nfunction JQLiteRemoveData(element) {\n  var expandoId = element[jqName],\n      expandoStore = jqCache[expandoId];\n\n  if (expandoStore) {\n    if (expandoStore.handle) {\n      expandoStore.events.$destroy && expandoStore.handle({}, '$destroy');\n      JQLiteUnbind(element);\n    }\n    delete jqCache[expandoId];\n    element[jqName] = undefined; // ie does not allow deletion of attributes on elements.\n  }\n}\n\nfunction JQLiteExpandoStore(element, key, value) {\n  var expandoId = element[jqName],\n      expandoStore = jqCache[expandoId || -1];\n\n  if (isDefined(value)) {\n    if (!expandoStore) {\n      element[jqName] = expandoId = jqNextId();\n      expandoStore = jqCache[expandoId] = {};\n    }\n    expandoStore[key] = value;\n  } else {\n    return expandoStore && expandoStore[key];\n  }\n}\n\nfunction JQLiteData(element, key, value) {\n  var data = JQLiteExpandoStore(element, 'data'),\n      isSetter = isDefined(value),\n      keyDefined = !isSetter && isDefined(key),\n      isSimpleGetter = keyDefined && !isObject(key);\n\n  if (!data && !isSimpleGetter) {\n    JQLiteExpandoStore(element, 'data', data = {});\n  }\n\n  if (isSetter) {\n    data[key] = value;\n  } else {\n    if (keyDefined) {\n      if (isSimpleGetter) {\n        // don't create data in this case.\n        return data && data[key];\n      } else {\n        extend(data, key);\n      }\n    } else {\n      return data;\n    }\n  }\n}\n\nfunction JQLiteHasClass(element, selector) {\n  return ((\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").\n      indexOf( \" \" + selector + \" \" ) > -1);\n}\n\nfunction JQLiteRemoveClass(element, cssClasses) {\n  if (cssClasses) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      element.className = trim(\n          (\" \" + element.className + \" \")\n          .replace(/[\\n\\t]/g, \" \")\n          .replace(\" \" + trim(cssClass) + \" \", \" \")\n      );\n    });\n  }\n}\n\nfunction JQLiteAddClass(element, cssClasses) {\n  if (cssClasses) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      if (!JQLiteHasClass(element, cssClass)) {\n        element.className = trim(element.className + ' ' + trim(cssClass));\n      }\n    });\n  }\n}\n\nfunction JQLiteAddNodes(root, elements) {\n  if (elements) {\n    elements = (!elements.nodeName && isDefined(elements.length) && !isWindow(elements))\n      ? elements\n      : [ elements ];\n    for(var i=0; i < elements.length; i++) {\n      root.push(elements[i]);\n    }\n  }\n}\n\nfunction JQLiteController(element, name) {\n  return JQLiteInheritedData(element, '$' + (name || 'ngController' ) + 'Controller');\n}\n\nfunction JQLiteInheritedData(element, name, value) {\n  element = jqLite(element);\n\n  // if element is the document object work with the html element instead\n  // this makes $(document).scope() possible\n  if(element[0].nodeType == 9) {\n    element = element.find('html');\n  }\n\n  while (element.length) {\n    if (value = element.data(name)) return value;\n    element = element.parent();\n  }\n}\n\n//////////////////////////////////////////\n// Functions which are declared directly.\n//////////////////////////////////////////\nvar JQLitePrototype = JQLite.prototype = {\n  ready: function(fn) {\n    var fired = false;\n\n    function trigger() {\n      if (fired) return;\n      fired = true;\n      fn();\n    }\n\n    // check if document already is loaded\n    if (document.readyState === 'complete'){\n      setTimeout(trigger);\n    } else {\n      this.bind('DOMContentLoaded', trigger); // works for modern browsers and IE9\n      // we can not use jqLite since we are not done loading and jQuery could be loaded later.\n      JQLite(window).bind('load', trigger); // fallback to window.onload for others\n    }\n  },\n  toString: function() {\n    var value = [];\n    forEach(this, function(e){ value.push('' + e);});\n    return '[' + value.join(', ') + ']';\n  },\n\n  eq: function(index) {\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n  },\n\n  length: 0,\n  push: push,\n  sort: [].sort,\n  splice: [].splice\n};\n\n//////////////////////////////////////////\n// Functions iterating getter/setters.\n// these functions return self on setter and\n// value on get.\n//////////////////////////////////////////\nvar BOOLEAN_ATTR = {};\nforEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {\n  BOOLEAN_ATTR[lowercase(value)] = value;\n});\nvar BOOLEAN_ELEMENTS = {};\nforEach('input,select,option,textarea,button,form,details'.split(','), function(value) {\n  BOOLEAN_ELEMENTS[uppercase(value)] = true;\n});\n\nfunction getBooleanAttrName(element, name) {\n  // check dom last since we will most likely fail on name\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\n  // booleanAttr is here twice to minimize DOM access\n  return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr;\n}\n\nforEach({\n  data: JQLiteData,\n  inheritedData: JQLiteInheritedData,\n\n  scope: function(element) {\n    return JQLiteInheritedData(element, '$scope');\n  },\n\n  controller: JQLiteController ,\n\n  injector: function(element) {\n    return JQLiteInheritedData(element, '$injector');\n  },\n\n  removeAttr: function(element,name) {\n    element.removeAttribute(name);\n  },\n\n  hasClass: JQLiteHasClass,\n\n  css: function(element, name, value) {\n    name = camelCase(name);\n\n    if (isDefined(value)) {\n      element.style[name] = value;\n    } else {\n      var val;\n\n      if (msie <= 8) {\n        // this is some IE specific weirdness that jQuery 1.6.4 does not sure why\n        val = element.currentStyle && element.currentStyle[name];\n        if (val === '') val = 'auto';\n      }\n\n      val = val || element.style[name];\n\n      if (msie <= 8) {\n        // jquery weirdness :-/\n        val = (val === '') ? undefined : val;\n      }\n\n      return  val;\n    }\n  },\n\n  attr: function(element, name, value){\n    var lowercasedName = lowercase(name);\n    if (BOOLEAN_ATTR[lowercasedName]) {\n      if (isDefined(value)) {\n        if (!!value) {\n          element[name] = true;\n          element.setAttribute(name, lowercasedName);\n        } else {\n          element[name] = false;\n          element.removeAttribute(lowercasedName);\n        }\n      } else {\n        return (element[name] ||\n                 (element.attributes.getNamedItem(name)|| noop).specified)\n               ? lowercasedName\n               : undefined;\n      }\n    } else if (isDefined(value)) {\n      element.setAttribute(name, value);\n    } else if (element.getAttribute) {\n      // the extra argument \"2\" is to get the right thing for a.href in IE, see jQuery code\n      // some elements (e.g. Document) don't have get attribute, so return undefined\n      var ret = element.getAttribute(name, 2);\n      // normalize non-existing attributes to undefined (as jQuery)\n      return ret === null ? undefined : ret;\n    }\n  },\n\n  prop: function(element, name, value) {\n    if (isDefined(value)) {\n      element[name] = value;\n    } else {\n      return element[name];\n    }\n  },\n\n  text: extend((msie < 9)\n      ? function(element, value) {\n        if (element.nodeType == 1 /** Element */) {\n          if (isUndefined(value))\n            return element.innerText;\n          element.innerText = value;\n        } else {\n          if (isUndefined(value))\n            return element.nodeValue;\n          element.nodeValue = value;\n        }\n      }\n      : function(element, value) {\n        if (isUndefined(value)) {\n          return element.textContent;\n        }\n        element.textContent = value;\n      }, {$dv:''}),\n\n  val: function(element, value) {\n    if (isUndefined(value)) {\n      return element.value;\n    }\n    element.value = value;\n  },\n\n  html: function(element, value) {\n    if (isUndefined(value)) {\n      return element.innerHTML;\n    }\n    for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n      JQLiteDealoc(childNodes[i]);\n    }\n    element.innerHTML = value;\n  }\n}, function(fn, name){\n  /**\n   * Properties: writes return selection, reads return first value\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var i, key;\n\n    // JQLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n    // in a way that survives minification.\n    if (((fn.length == 2 && (fn !== JQLiteHasClass && fn !== JQLiteController)) ? arg1 : arg2) === undefined) {\n      if (isObject(arg1)) {\n\n        // we are a write, but the object properties are the key/values\n        for(i=0; i < this.length; i++) {\n          if (fn === JQLiteData) {\n            // data() takes the whole object in jQuery\n            fn(this[i], arg1);\n          } else {\n            for (key in arg1) {\n              fn(this[i], key, arg1[key]);\n            }\n          }\n        }\n        // return self for chaining\n        return this;\n      } else {\n        // we are a read, so read the first child.\n        if (this.length)\n          return fn(this[0], arg1, arg2);\n      }\n    } else {\n      // we are a write, so apply to all children\n      for(i=0; i < this.length; i++) {\n        fn(this[i], arg1, arg2);\n      }\n      // return self for chaining\n      return this;\n    }\n    return fn.$dv;\n  };\n});\n\nfunction createEventHandler(element, events) {\n  var eventHandler = function (event, type) {\n    if (!event.preventDefault) {\n      event.preventDefault = function() {\n        event.returnValue = false; //ie\n      };\n    }\n\n    if (!event.stopPropagation) {\n      event.stopPropagation = function() {\n        event.cancelBubble = true; //ie\n      };\n    }\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    if (isUndefined(event.defaultPrevented)) {\n      var prevent = event.preventDefault;\n      event.preventDefault = function() {\n        event.defaultPrevented = true;\n        prevent.call(event);\n      };\n      event.defaultPrevented = false;\n    }\n\n    event.isDefaultPrevented = function() {\n      return event.defaultPrevented || event.returnValue == false;\n    };\n\n    forEach(events[type || event.type], function(fn) {\n      fn.call(element, event);\n    });\n\n    // Remove monkey-patched methods (IE),\n    // as they would cause memory leaks in IE8.\n    if (msie <= 8) {\n      // IE7/8 does not allow to delete property on native object\n      event.preventDefault = null;\n      event.stopPropagation = null;\n      event.isDefaultPrevented = null;\n    } else {\n      // It shouldn't affect normal browsers (native methods are defined on prototype).\n      delete event.preventDefault;\n      delete event.stopPropagation;\n      delete event.isDefaultPrevented;\n    }\n  };\n  eventHandler.elem = element;\n  return eventHandler;\n}\n\n//////////////////////////////////////////\n// Functions iterating traversal.\n// These functions chain results into a single\n// selector.\n//////////////////////////////////////////\nforEach({\n  removeData: JQLiteRemoveData,\n\n  dealoc: JQLiteDealoc,\n\n  bind: function bindFn(element, type, fn){\n    var events = JQLiteExpandoStore(element, 'events'),\n        handle = JQLiteExpandoStore(element, 'handle');\n\n    if (!events) JQLiteExpandoStore(element, 'events', events = {});\n    if (!handle) JQLiteExpandoStore(element, 'handle', handle = createEventHandler(element, events));\n\n    forEach(type.split(' '), function(type){\n      var eventFns = events[type];\n\n      if (!eventFns) {\n        if (type == 'mouseenter' || type == 'mouseleave') {\n          var contains = document.body.contains || document.body.compareDocumentPosition ?\n          function( a, b ) {\n            var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a === bup || !!( bup && bup.nodeType === 1 && (\n              adown.contains ?\n              adown.contains( bup ) :\n              a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n              ));\n            } :\n            function( a, b ) {\n              if ( b ) {\n                while ( (b = b.parentNode) ) {\n                  if ( b === a ) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            };\t\n\n          events[type] = [];\n\t\t\n\t\t  // Refer to jQuery's implementation of mouseenter & mouseleave\n          // Read about mouseenter and mouseleave:\n          // http://www.quirksmode.org/js/events_mouse.html#link8\n          var eventmap = { mouseleave : \"mouseout\", mouseenter : \"mouseover\"}          \n          bindFn(element, eventmap[type], function(event) {\n            var ret, target = this, related = event.relatedTarget;\n            // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n            if ( !related || (related !== target && !contains(target, related)) ){\n              handle(event, type);\n            }\t\n\n          });\n\n        } else {\n          addEventListenerFn(element, type, handle);\n          events[type] = [];\n        }\n        eventFns = events[type]\n      }\n      eventFns.push(fn);\n    });\n  },\n\n  unbind: JQLiteUnbind,\n\n  replaceWith: function(element, replaceNode) {\n    var index, parent = element.parentNode;\n    JQLiteDealoc(element);\n    forEach(new JQLite(replaceNode), function(node){\n      if (index) {\n        parent.insertBefore(node, index.nextSibling);\n      } else {\n        parent.replaceChild(node, element);\n      }\n      index = node;\n    });\n  },\n\n  children: function(element) {\n    var children = [];\n    forEach(element.childNodes, function(element){\n      if (element.nodeType === 1)\n        children.push(element);\n    });\n    return children;\n  },\n\n  contents: function(element) {\n    return element.childNodes || [];\n  },\n\n  append: function(element, node) {\n    forEach(new JQLite(node), function(child){\n      if (element.nodeType === 1 || element.nodeType === 11) {\n        element.appendChild(child);\n      }\n    });\n  },\n\n  prepend: function(element, node) {\n    if (element.nodeType === 1) {\n      var index = element.firstChild;\n      forEach(new JQLite(node), function(child){\n        if (index) {\n          element.insertBefore(child, index);\n        } else {\n          element.appendChild(child);\n          index = child;\n        }\n      });\n    }\n  },\n\n  wrap: function(element, wrapNode) {\n    wrapNode = jqLite(wrapNode)[0];\n    var parent = element.parentNode;\n    if (parent) {\n      parent.replaceChild(wrapNode, element);\n    }\n    wrapNode.appendChild(element);\n  },\n\n  remove: function(element) {\n    JQLiteDealoc(element);\n    var parent = element.parentNode;\n    if (parent) parent.removeChild(element);\n  },\n\n  after: function(element, newElement) {\n    var index = element, parent = element.parentNode;\n    forEach(new JQLite(newElement), function(node){\n      parent.insertBefore(node, index.nextSibling);\n      index = node;\n    });\n  },\n\n  addClass: JQLiteAddClass,\n  removeClass: JQLiteRemoveClass,\n\n  toggleClass: function(element, selector, condition) {\n    if (isUndefined(condition)) {\n      condition = !JQLiteHasClass(element, selector);\n    }\n    (condition ? JQLiteAddClass : JQLiteRemoveClass)(element, selector);\n  },\n\n  parent: function(element) {\n    var parent = element.parentNode;\n    return parent && parent.nodeType !== 11 ? parent : null;\n  },\n\n  next: function(element) {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    }\n\n    // IE8 doesn't have nextElementSibling\n    var elm = element.nextSibling;\n    while (elm != null && elm.nodeType !== 1) {\n      elm = elm.nextSibling;\n    }\n    return elm;\n  },\n\n  find: function(element, selector) {\n    return element.getElementsByTagName(selector);\n  },\n\n  clone: JQLiteClone,\n\n  triggerHandler: function(element, eventName) {\n    var eventFns = (JQLiteExpandoStore(element, 'events') || {})[eventName];\n    var event;\n\n    forEach(eventFns, function(fn) {\n      fn.call(element, {preventDefault: noop});\n    });\n  }\n}, function(fn, name){\n  /**\n   * chaining functions\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var value;\n    for(var i=0; i < this.length; i++) {\n      if (value == undefined) {\n        value = fn(this[i], arg1, arg2);\n        if (value !== undefined) {\n          // any function which returns a value needs to be wrapped\n          value = jqLite(value);\n        }\n      } else {\n        JQLiteAddNodes(value, fn(this[i], arg1, arg2));\n      }\n    }\n    return value == undefined ? this : value;\n  };\n});\n\n/**\n * Computes a hash of an 'obj'.\n * Hash of a:\n *  string is string\n *  number is number as string\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n *         that is also assigned to the $$hashKey property of the object.\n *\n * @param obj\n * @returns {string} hash string such that the same input will have the same hash string.\n *         The resulting string key is in 'type:hashKey' format.\n */\nfunction hashKey(obj) {\n  var objType = typeof obj,\n      key;\n\n  if (objType == 'object' && obj !== null) {\n    if (typeof (key = obj.$$hashKey) == 'function') {\n      // must invoke on object to keep the right this\n      key = obj.$$hashKey();\n    } else if (key === undefined) {\n      key = obj.$$hashKey = nextUid();\n    }\n  } else {\n    key = obj;\n  }\n\n  return objType + ':' + key;\n}\n\n/**\n * HashMap which can use objects as keys\n */\nfunction HashMap(array){\n  forEach(array, this.put, this);\n}\nHashMap.prototype = {\n  /**\n   * Store key value pair\n   * @param key key to store can be any type\n   * @param value value to store can be any type\n   */\n  put: function(key, value) {\n    this[hashKey(key)] = value;\n  },\n\n  /**\n   * @param key\n   * @returns the value for the key\n   */\n  get: function(key) {\n    return this[hashKey(key)];\n  },\n\n  /**\n   * Remove the key/value pair\n   * @param key\n   */\n  remove: function(key) {\n    var value = this[key = hashKey(key)];\n    delete this[key];\n    return value;\n  }\n};\n\n/**\n * @ngdoc function\n * @name angular.injector\n * @function\n *\n * @description\n * Creates an injector function that can be used for retrieving services as well as for\n * dependency injection (see {@link guide/di dependency injection}).\n *\n\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n *        {@link angular.module}. The `ng` module must be explicitly added.\n * @returns {function()} Injector function. See {@link AUTO.$injector $injector}.\n *\n * @example\n * Typical usage\n * <pre>\n *   // create an injector\n *   var $injector = angular.injector(['ng']);\n *\n *   // use the injector to kick off your application\n *   // use the type inference to auto inject arguments, or use implicit injection\n *   $injector.invoke(function($rootScope, $compile, $document){\n *     $compile($document)($rootScope);\n *     $rootScope.$digest();\n *   });\n * </pre>\n */\n\n\n/**\n * @ngdoc overview\n * @name AUTO\n * @description\n *\n * Implicit module which gets automatically added to each {@link AUTO.$injector $injector}.\n */\n\nvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nfunction annotate(fn) {\n  var $inject,\n      fnText,\n      argDecl,\n      last;\n\n  if (typeof fn == 'function') {\n    if (!($inject = fn.$inject)) {\n      $inject = [];\n      fnText = fn.toString().replace(STRIP_COMMENTS, '');\n      argDecl = fnText.match(FN_ARGS);\n      forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg){\n        arg.replace(FN_ARG, function(all, underscore, name){\n          $inject.push(name);\n        });\n      });\n      fn.$inject = $inject;\n    }\n  } else if (isArray(fn)) {\n    last = fn.length - 1;\n    assertArgFn(fn[last], 'fn');\n    $inject = fn.slice(0, last);\n  } else {\n    assertArgFn(fn, 'fn', true);\n  }\n  return $inject;\n}\n\n///////////////////////////////////////\n\n/**\n * @ngdoc object\n * @name AUTO.$injector\n * @function\n *\n * @description\n *\n * `$injector` is used to retrieve object instances as defined by\n * {@link AUTO.$provide provider}, instantiate types, invoke methods,\n * and load modules.\n *\n * The following always holds true:\n *\n * <pre>\n *   var $injector = angular.injector();\n *   expect($injector.get('$injector')).toBe($injector);\n *   expect($injector.invoke(function($injector){\n *     return $injector;\n *   }).toBe($injector);\n * </pre>\n *\n * # Injection Function Annotation\n *\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n * following are all valid ways of annotating function with injection arguments and are equivalent.\n *\n * <pre>\n *   // inferred (only works if code not minified/obfuscated)\n *   $injector.invoke(function(serviceA){});\n *\n *   // annotated\n *   function explicit(serviceA) {};\n *   explicit.$inject = ['serviceA'];\n *   $injector.invoke(explicit);\n *\n *   // inline\n *   $injector.invoke(['serviceA', function(serviceA){}]);\n * </pre>\n *\n * ## Inference\n *\n * In JavaScript calling `toString()` on a function returns the function definition. The definition can then be\n * parsed and the function arguments can be extracted. *NOTE:* This does not work with minification, and obfuscation\n * tools since these tools change the argument names.\n *\n * ## `$inject` Annotation\n * By adding a `$inject` property onto a function the injection parameters can be specified.\n *\n * ## Inline\n * As an array of injection names, where the last item in the array is the function to call.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#get\n * @methodOf AUTO.$injector\n *\n * @description\n * Return an instance of the service.\n *\n * @param {string} name The name of the instance to retrieve.\n * @return {*} The instance.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#invoke\n * @methodOf AUTO.$injector\n *\n * @description\n * Invoke the method and supply the method arguments from the `$injector`.\n *\n * @param {!function} fn The function to invoke. The function arguments come form the function annotation.\n * @param {Object=} self The `this` for the invoked method.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\n *   the `$injector` is consulted.\n * @returns {*} the value returned by the invoked `fn` function.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#has\n * @methodOf AUTO.$injector\n *\n * @description\n * Allows the user to query if the particular service exist.\n *\n * @param {string} Name of the service to query.\n * @returns {boolean} returns true if injector has given service.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#instantiate\n * @methodOf AUTO.$injector\n * @description\n * Create a new instance of JS type. The method takes a constructor function invokes the new operator and supplies\n * all of the arguments to the constructor function as specified by the constructor annotation.\n *\n * @param {function} Type Annotated constructor function.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\n *   the `$injector` is consulted.\n * @returns {Object} new instance of `Type`.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#annotate\n * @methodOf AUTO.$injector\n *\n * @description\n * Returns an array of service names which the function is requesting for injection. This API is used by the injector\n * to determine which services need to be injected into the function when the function is invoked. There are three\n * ways in which the function can be annotated with the needed dependencies.\n *\n * # Argument names\n *\n * The simplest form is to extract the dependencies from the arguments of the function. This is done by converting\n * the function into a string using `toString()` method and extracting the argument names.\n * <pre>\n *   // Given\n *   function MyController($scope, $route) {\n *     // ...\n *   }\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * </pre>\n *\n * This method does not work with code minfication / obfuscation. For this reason the following annotation strategies\n * are supported.\n *\n * # The `$inject` property\n *\n * If a function has an `$inject` property and its value is an array of strings, then the strings represent names of\n * services to be injected into the function.\n * <pre>\n *   // Given\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n *     // ...\n *   }\n *   // Define function dependencies\n *   MyController.$inject = ['$scope', '$route'];\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * </pre>\n *\n * # The array notation\n *\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property is very\n * inconvenient. In these situations using the array notation to specify the dependencies in a way that survives\n * minification is a better choice:\n *\n * <pre>\n *   // We wish to write this (not minification / obfuscation safe)\n *   injector.invoke(function($compile, $rootScope) {\n *     // ...\n *   });\n *\n *   // We are forced to write break inlining\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n *     // ...\n *   };\n *   tmpFn.$inject = ['$compile', '$rootScope'];\n *   injector.invoke(tmpFn);\n *\n *   // To better support inline function the inline annotation is supported\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n *     // ...\n *   }]);\n *\n *   // Therefore\n *   expect(injector.annotate(\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n *    ).toEqual(['$compile', '$rootScope']);\n * </pre>\n *\n * @param {function|Array.<string|Function>} fn Function for which dependent service names need to be retrieved as described\n *   above.\n *\n * @returns {Array.<string>} The names of the services which the function requires.\n */\n\n\n\n\n/**\n * @ngdoc object\n * @name AUTO.$provide\n *\n * @description\n *\n * Use `$provide` to register new providers with the `$injector`. The providers are the factories for the instance.\n * The providers share the same name as the instance they create with `Provider` suffixed to them.\n *\n * A provider is an object with a `$get()` method. The injector calls the `$get` method to create a new instance of\n * a service. The Provider can have additional methods which would allow for configuration of the provider.\n *\n * <pre>\n *   function GreetProvider() {\n *     var salutation = 'Hello';\n *\n *     this.salutation = function(text) {\n *       salutation = text;\n *     };\n *\n *     this.$get = function() {\n *       return function (name) {\n *         return salutation + ' ' + name + '!';\n *       };\n *     };\n *   }\n *\n *   describe('Greeter', function(){\n *\n *     beforeEach(module(function($provide) {\n *       $provide.provider('greet', GreetProvider);\n *     }));\n *\n *     it('should greet', inject(function(greet) {\n *       expect(greet('angular')).toEqual('Hello angular!');\n *     }));\n *\n *     it('should allow configuration of salutation', function() {\n *       module(function(greetProvider) {\n *         greetProvider.salutation('Ahoj');\n *       });\n *       inject(function(greet) {\n *         expect(greet('angular')).toEqual('Ahoj angular!');\n *       });\n *     });\n * </pre>\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#provider\n * @methodOf AUTO.$provide\n * @description\n *\n * Register a provider for a service. The providers can be retrieved and can have additional configuration methods.\n *\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name + 'Provider'` key.\n * @param {(Object|function())} provider If the provider is:\n *\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n *               {@link AUTO.$injector#invoke $injector.invoke()} when an instance needs to be created.\n *   - `Constructor`: a new instance of the provider will be created using\n *               {@link AUTO.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n *\n * @returns {Object} registered provider instance\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#factory\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for configuring services if only `$get` method is required.\n *\n * @param {string} name The name of the instance.\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand for\n * `$provide.provider(name, {$get: $getFn})`.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#service\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for registering service of given class.\n *\n * @param {string} name The name of the instance.\n * @param {Function} constructor A class (constructor function) that will be instantiated.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#value\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for configuring services if the `$get` method is a constant.\n *\n * @param {string} name The name of the instance.\n * @param {*} value The value.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#constant\n * @methodOf AUTO.$provide\n * @description\n *\n * A constant value, but unlike {@link AUTO.$provide#value value} it can be injected\n * into configuration function (other modules) and it is not interceptable by\n * {@link AUTO.$provide#decorator decorator}.\n *\n * @param {string} name The name of the constant.\n * @param {*} value The constant value.\n * @returns {Object} registered instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#decorator\n * @methodOf AUTO.$provide\n * @description\n *\n * Decoration of service, allows the decorator to intercept the service instance creation. The\n * returned instance may be the original instance, or a new instance which delegates to the\n * original instance.\n *\n * @param {string} name The name of the service to decorate.\n * @param {function()} decorator This function will be invoked when the service needs to be\n *    instantiated. The function is called using the {@link AUTO.$injector#invoke\n *    injector.invoke} method and is therefore fully injectable. Local injection arguments:\n *\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\n *      decorated or delegated to.\n */\n\n\nfunction createInjector(modulesToLoad) {\n  var INSTANTIATING = {},\n      providerSuffix = 'Provider',\n      path = [],\n      loadedModules = new HashMap(),\n      providerCache = {\n        $provide: {\n            provider: supportObject(provider),\n            factory: supportObject(factory),\n            service: supportObject(service),\n            value: supportObject(value),\n            constant: supportObject(constant),\n            decorator: decorator\n          }\n      },\n      providerInjector = (providerCache.$injector =\n          createInternalInjector(providerCache, function() {\n            throw Error(\"Unknown provider: \" + path.join(' <- '));\n          })),\n      instanceCache = {},\n      instanceInjector = (instanceCache.$injector =\n          createInternalInjector(instanceCache, function(servicename) {\n            var provider = providerInjector.get(servicename + providerSuffix);\n            return instanceInjector.invoke(provider.$get, provider);\n          }));\n\n\n  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\n\n  return instanceInjector;\n\n  ////////////////////////////////////\n  // $provider\n  ////////////////////////////////////\n\n  function supportObject(delegate) {\n    return function(key, value) {\n      if (isObject(key)) {\n        forEach(key, reverseParams(delegate));\n      } else {\n        return delegate(key, value);\n      }\n    }\n  }\n\n  function provider(name, provider_) {\n    if (isFunction(provider_) || isArray(provider_)) {\n      provider_ = providerInjector.instantiate(provider_);\n    }\n    if (!provider_.$get) {\n      throw Error('Provider ' + name + ' must define $get factory method.');\n    }\n    return providerCache[name + providerSuffix] = provider_;\n  }\n\n  function factory(name, factoryFn) { return provider(name, { $get: factoryFn }); }\n\n  function service(name, constructor) {\n    return factory(name, ['$injector', function($injector) {\n      return $injector.instantiate(constructor);\n    }]);\n  }\n\n  function value(name, value) { return factory(name, valueFn(value)); }\n\n  function constant(name, value) {\n    providerCache[name] = value;\n    instanceCache[name] = value;\n  }\n\n  function decorator(serviceName, decorFn) {\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\n        orig$get = origProvider.$get;\n\n    origProvider.$get = function() {\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n    };\n  }\n\n  ////////////////////////////////////\n  // Module Loading\n  ////////////////////////////////////\n  function loadModules(modulesToLoad){\n    var runBlocks = [];\n    forEach(modulesToLoad, function(module) {\n      if (loadedModules.get(module)) return;\n      loadedModules.put(module, true);\n      if (isString(module)) {\n        var moduleFn = angularModule(module);\n        runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n\n        try {\n          for(var invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i < ii; i++) {\n            var invokeArgs = invokeQueue[i],\n                provider = providerInjector.get(invokeArgs[0]);\n\n            provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n          }\n        } catch (e) {\n          if (e.message) e.message += ' from ' + module;\n          throw e;\n        }\n      } else if (isFunction(module)) {\n        try {\n          runBlocks.push(providerInjector.invoke(module));\n        } catch (e) {\n          if (e.message) e.message += ' from ' + module;\n          throw e;\n        }\n      } else if (isArray(module)) {\n        try {\n          runBlocks.push(providerInjector.invoke(module));\n        } catch (e) {\n          if (e.message) e.message += ' from ' + String(module[module.length - 1]);\n          throw e;\n        }\n      } else {\n        assertArgFn(module, 'module');\n      }\n    });\n    return runBlocks;\n  }\n\n  ////////////////////////////////////\n  // internal Injector\n  ////////////////////////////////////\n\n  function createInternalInjector(cache, factory) {\n\n    function getService(serviceName) {\n      if (typeof serviceName !== 'string') {\n        throw Error('Service name expected');\n      }\n      if (cache.hasOwnProperty(serviceName)) {\n        if (cache[serviceName] === INSTANTIATING) {\n          throw Error('Circular dependency: ' + path.join(' <- '));\n        }\n        return cache[serviceName];\n      } else {\n        try {\n          path.unshift(serviceName);\n          cache[serviceName] = INSTANTIATING;\n          return cache[serviceName] = factory(serviceName);\n        } finally {\n          path.shift();\n        }\n      }\n    }\n\n    function invoke(fn, self, locals){\n      var args = [],\n          $inject = annotate(fn),\n          length, i,\n          key;\n\n      for(i = 0, length = $inject.length; i < length; i++) {\n        key = $inject[i];\n        args.push(\n          locals && locals.hasOwnProperty(key)\n          ? locals[key]\n          : getService(key)\n        );\n      }\n      if (!fn.$inject) {\n        // this means that we must be an array.\n        fn = fn[length];\n      }\n\n\n      // Performance optimization: http://jsperf.com/apply-vs-call-vs-invoke\n      switch (self ? -1 : args.length) {\n        case  0: return fn();\n        case  1: return fn(args[0]);\n        case  2: return fn(args[0], args[1]);\n        case  3: return fn(args[0], args[1], args[2]);\n        case  4: return fn(args[0], args[1], args[2], args[3]);\n        case  5: return fn(args[0], args[1], args[2], args[3], args[4]);\n        case  6: return fn(args[0], args[1], args[2], args[3], args[4], args[5]);\n        case  7: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        case  8: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\n        case  9: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\n        case 10: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\n        default: return fn.apply(self, args);\n      }\n    }\n\n    function instantiate(Type, locals) {\n      var Constructor = function() {},\n          instance, returnedValue;\n\n      // Check if Type is annotated and use just the given function at n-1 as parameter\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n      Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;\n      instance = new Constructor();\n      returnedValue = invoke(Type, instance, locals);\n\n      return isObject(returnedValue) ? returnedValue : instance;\n    }\n\n    return {\n      invoke: invoke,\n      instantiate: instantiate,\n      get: getService,\n      annotate: annotate,\n      has: function(name) {\n        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\n      }\n    };\n  }\n}\n\n/**\n * @ngdoc function\n * @name ng.$anchorScroll\n * @requires $window\n * @requires $location\n * @requires $rootScope\n *\n * @description\n * When called, it checks current value of `$location.hash()` and scroll to related element,\n * according to rules specified in\n * {@link http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document Html5 spec}.\n *\n * It also watches the `$location.hash()` and scroll whenever it changes to match any anchor.\n * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.\n */\nfunction $AnchorScrollProvider() {\n\n  var autoScrollingEnabled = true;\n\n  this.disableAutoScrolling = function() {\n    autoScrollingEnabled = false;\n  };\n\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n    var document = $window.document;\n\n    // helper function to get first anchor from a NodeList\n    // can't use filter.filter, as it accepts only instances of Array\n    // and IE can't convert NodeList to an array using [].slice\n    // TODO(vojta): use filter if we change it to accept lists as well\n    function getFirstAnchor(list) {\n      var result = null;\n      forEach(list, function(element) {\n        if (!result && lowercase(element.nodeName) === 'a') result = element;\n      });\n      return result;\n    }\n\n    function scroll() {\n      var hash = $location.hash(), elm;\n\n      // empty hash, scroll to the top of the page\n      if (!hash) $window.scrollTo(0, 0);\n\n      // element with given id\n      else if ((elm = document.getElementById(hash))) elm.scrollIntoView();\n\n      // first anchor with given name :-D\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) elm.scrollIntoView();\n\n      // no element and hash == 'top', scroll to the top of the page\n      else if (hash === 'top') $window.scrollTo(0, 0);\n    }\n\n    // does not scroll when user clicks on anchor link that is currently on\n    // (no url change, no $location.hash() change), browser native does scroll\n    if (autoScrollingEnabled) {\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n        function autoScrollWatchAction() {\n          $rootScope.$evalAsync(scroll);\n        });\n    }\n\n    return scroll;\n  }];\n}\n\n\n/**\n * @ngdoc object\n * @name ng.$animationProvider\n * @description\n *\n * The $AnimationProvider provider allows developers to register and access custom JavaScript animations directly inside\n * of a module.\n *\n */\n$AnimationProvider.$inject = ['$provide'];\nfunction $AnimationProvider($provide) {\n  var suffix = 'Animation';\n\n  /**\n   * @ngdoc function\n   * @name ng.$animation#register\n   * @methodOf ng.$animationProvider\n   *\n   * @description\n   * Registers a new injectable animation factory function. The factory function produces the animation object which\n   * has these two properties:\n   *\n   *   * `setup`: `function(Element):*` A function which receives the starting state of the element. The purpose\n   *   of this function is to get the element ready for animation. Optionally the function returns an memento which\n   *   is passed to the `start` function.\n   *   * `start`: `function(Element, doneFunction, *)` The element to animate, the `doneFunction` to be called on\n   *   element animation completion, and an optional memento from the `setup` function.\n   *\n   * @param {string} name The name of the animation.\n   * @param {function} factory The factory function that will be executed to return the animation object.\n   * \n   */\n  this.register = function(name, factory) {\n    $provide.factory(camelCase(name) + suffix, factory);\n  };\n\n  this.$get = ['$injector', function($injector) {\n    /**\n     * @ngdoc function\n     * @name ng.$animation\n     * @function\n     *\n     * @description\n     * The $animation service is used to retrieve any defined animation functions. When executed, the $animation service\n     * will return a object that contains the setup and start functions that were defined for the animation.\n     *\n     * @param {String} name Name of the animation function to retrieve. Animation functions are registered and stored\n     *        inside of the AngularJS DI so a call to $animate('custom') is the same as injecting `customAnimation`\n     *        via dependency injection.\n     * @return {Object} the animation object which contains the `setup` and `start` functions that perform the animation.\n     */\n    return function $animation(name) {\n      if (name) {\n        var animationName = camelCase(name) + suffix;\n        if ($injector.has(animationName)) {\n          return $injector.get(animationName);\n        }\n      }\n    };\n  }];\n}\n\n// NOTE: this is a pseudo directive.\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngAnimate\n *\n * @description\n * The `ngAnimate` directive works as an attribute that is attached alongside pre-existing directives.\n * It effects how the directive will perform DOM manipulation. This allows for complex animations to take place\n * without burdening the directive which uses the animation with animation details. The built in directives\n * `ngRepeat`, `ngInclude`, `ngSwitch`, `ngShow`, `ngHide` and `ngView` already accept `ngAnimate` directive.\n * Custom directives can take advantage of animation through {@link ng.$animator $animator service}.\n *\n * Below is a more detailed breakdown of the supported callback events provided by pre-exisitng ng directives:\n *\n * | Directive                                                 | Supported Animations                               |\n * |========================================================== |====================================================|\n * | {@link ng.directive:ngRepeat#animations ngRepeat}         | enter, leave and move                              |\n * | {@link ng.directive:ngView#animations ngView}             | enter and leave                                    |\n * | {@link ng.directive:ngInclude#animations ngInclude}       | enter and leave                                    |\n * | {@link ng.directive:ngSwitch#animations ngSwitch}         | enter and leave                                    |\n * | {@link ng.directive:ngIf#animations ngIf}                 | enter and leave                                    |\n * | {@link ng.directive:ngShow#animations ngShow & ngHide}    | show and hide                                      |\n *\n * You can find out more information about animations upon visiting each directive page.\n *\n * Below is an example of a directive that makes use of the ngAnimate attribute:\n *\n * <pre>\n * <!-- you can also use data-ng-animate, ng:animate or x-ng-animate as well -->\n * <ANY ng-directive ng-animate=\"{event1: 'animation-name', event2: 'animation-name-2'}\"></ANY>\n *\n * <!-- you can also use a short hand -->\n * <ANY ng-directive ng-animate=\" 'animation' \"></ANY>\n * <!-- which expands to -->\n * <ANY ng-directive ng-animate=\"{ enter: 'animation-enter', leave: 'animation-leave', ...}\"></ANY>\n *\n * <!-- keep in mind that ng-animate can take expressions -->\n * <ANY ng-directive ng-animate=\" computeCurrentAnimation() \"></ANY>\n * </pre>\n *\n * The `event1` and `event2` attributes refer to the animation events specific to the directive that has been assigned.\n *\n * Keep in mind that if an animation is running, no child element of such animation can also be animated.\n *\n * <h2>CSS-defined Animations</h2>\n * By default, ngAnimate attaches two CSS classes per animation event to the DOM element to achieve the animation.\n * It is up to you, the developer, to ensure that the animations take place using cross-browser CSS3 transitions as\n * well as CSS animations.\n *\n * The following code below demonstrates how to perform animations using **CSS transitions** with ngAnimate:\n *\n * <pre>\n * <style type=\"text/css\">\n * /&#42;\n *  The animate-enter CSS class is the event name that you\n *  have provided within the ngAnimate attribute.\n * &#42;/\n * .animate-enter {\n *  -webkit-transition: 1s linear all; /&#42; Safari/Chrome &#42;/\n *  -moz-transition: 1s linear all; /&#42; Firefox &#42;/\n *  -o-transition: 1s linear all; /&#42; Opera &#42;/\n *  transition: 1s linear all; /&#42; IE10+ and Future Browsers &#42;/\n *\n *  /&#42; The animation preparation code &#42;/\n *  opacity: 0;\n * }\n *\n * /&#42;\n *  Keep in mind that you want to combine both CSS\n *  classes together to avoid any CSS-specificity\n *  conflicts\n * &#42;/\n * .animate-enter.animate-enter-active {\n *  /&#42; The animation code itself &#42;/\n *  opacity: 1;\n * }\n * </style>\n *\n * <div ng-directive ng-animate=\"{enter: 'animate-enter'}\"></div>\n * </pre>\n *\n * The following code below demonstrates how to perform animations using **CSS animations** with ngAnimate:\n *\n * <pre>\n * <style type=\"text/css\">\n * .animate-enter {\n *   -webkit-animation: enter_sequence 1s linear; /&#42; Safari/Chrome &#42;/\n *   -moz-animation: enter_sequence 1s linear; /&#42; Firefox &#42;/\n *   -o-animation: enter_sequence 1s linear; /&#42; Opera &#42;/\n *   animation: enter_sequence 1s linear; /&#42; IE10+ and Future Browsers &#42;/\n * }\n * &#64-webkit-keyframes enter_sequence {\n *   from { opacity:0; }\n *   to { opacity:1; }\n * }\n * &#64-moz-keyframes enter_sequence {\n *   from { opacity:0; }\n *   to { opacity:1; }\n * }\n * &#64-o-keyframes enter_sequence {\n *   from { opacity:0; }\n *   to { opacity:1; }\n * }\n * &#64keyframes enter_sequence {\n *   from { opacity:0; }\n *   to { opacity:1; }\n * }\n * </style>\n *\n * <div ng-directive ng-animate=\"{enter: 'animate-enter'}\"></div>\n * </pre>\n *\n * ngAnimate will first examine any CSS animation code and then fallback to using CSS transitions.\n *\n * Upon DOM mutation, the event class is added first, then the browser is allowed to reflow the content and then,\n * the active class is added to trigger the animation. The ngAnimate directive will automatically extract the duration\n * of the animation to determine when the animation ends. Once the animation is over then both CSS classes will be\n * removed from the DOM. If a browser does not support CSS transitions or CSS animations then the animation will start and end\n * immediately resulting in a DOM element that is at it's final state. This final state is when the DOM element\n * has no CSS transition/animation classes surrounding it.\n *\n * <h2>JavaScript-defined Animations</h2>\n * In the event that you do not want to use CSS3 transitions or CSS3 animations or if you wish to offer animations to browsers that do not\n * yet support them, then you can make use of JavaScript animations defined inside of your AngularJS module.\n *\n * <pre>\n * var ngModule = angular.module('YourApp', []);\n * ngModule.animation('animate-enter', function() {\n *   return {\n *     setup : function(element) {\n *       //prepare the element for animation\n *       element.css({ 'opacity': 0 });\n *       var memo = \"...\"; //this value is passed to the start function\n *       return memo;\n *     },\n *     start : function(element, done, memo) {\n *       //start the animation\n *       element.animate({\n *         'opacity' : 1\n *       }, function() {\n *         //call when the animation is complete\n *         done()\n *       });\n *     }\n *   }\n * });\n * </pre>\n *\n * As you can see, the JavaScript code follows a similar template to the CSS3 animations. Once defined, the animation\n * can be used in the same way with the ngAnimate attribute. Keep in mind that, when using JavaScript-enabled\n * animations, ngAnimate will also add in the same CSS classes that CSS-enabled animations do (even if you're not using\n * CSS animations) to animated the element, but it will not attempt to find any CSS3 transition or animation duration/delay values.\n * It will instead close off the animation once the provided done function is executed. So it's important that you\n * make sure your animations remember to fire off the done function once the animations are complete.\n *\n * @param {expression} ngAnimate Used to configure the DOM manipulation animations.\n *\n */\n\nvar $AnimatorProvider = function() {\n  var NG_ANIMATE_CONTROLLER = '$ngAnimateController';\n  var rootAnimateController = {running:true};\n\n  this.$get = ['$animation', '$window', '$sniffer', '$rootElement', '$rootScope',\n      function($animation, $window, $sniffer, $rootElement, $rootScope) {\n    $rootElement.data(NG_ANIMATE_CONTROLLER, rootAnimateController);\n\n    /**\n     * @ngdoc function\n     * @name ng.$animator\n     * @function\n     *\n     * @description\n     * The $animator.create service provides the DOM manipulation API which is decorated with animations.\n     *\n     * @param {Scope} scope the scope for the ng-animate.\n     * @param {Attributes} attr the attributes object which contains the ngAnimate key / value pair. (The attributes are\n     *        passed into the linking function of the directive using the `$animator`.)\n     * @return {object} the animator object which contains the enter, leave, move, show, hide and animate methods.\n     */\n     var AnimatorService = function(scope, attrs) {\n        var animator = {};\n  \n        /**\n         * @ngdoc function\n         * @name ng.animator#enter\n         * @methodOf ng.$animator\n         * @function\n         *\n         * @description\n         * Injects the element object into the DOM (inside of the parent element) and then runs the enter animation.\n         *\n         * @param {jQuery/jqLite element} element the element that will be the focus of the enter animation\n         * @param {jQuery/jqLite element} parent the parent element of the element that will be the focus of the enter animation\n         * @param {jQuery/jqLite element} after the sibling element (which is the previous element) of the element that will be the focus of the enter animation\n        */\n        animator.enter = animateActionFactory('enter', insert, noop);\n  \n        /**\n         * @ngdoc function\n         * @name ng.animator#leave\n         * @methodOf ng.$animator\n         * @function\n         *\n         * @description\n         * Runs the leave animation operation and, upon completion, removes the element from the DOM.\n         *\n         * @param {jQuery/jqLite element} element the element that will be the focus of the leave animation\n         * @param {jQuery/jqLite element} parent the parent element of the element that will be the focus of the leave animation\n        */\n        animator.leave = animateActionFactory('leave', noop, remove);\n  \n        /**\n         * @ngdoc function\n         * @name ng.animator#move\n         * @methodOf ng.$animator\n         * @function\n         *\n         * @description\n         * Fires the move DOM operation. Just before the animation starts, the animator will either append it into the parent container or\n         * add the element directly after the after element if present. Then the move animation will be run.\n         *\n         * @param {jQuery/jqLite element} element the element that will be the focus of the move animation\n         * @param {jQuery/jqLite element} parent the parent element of the element that will be the focus of the move animation\n         * @param {jQuery/jqLite element} after the sibling element (which is the previous element) of the element that will be the focus of the move animation\n        */\n        animator.move = animateActionFactory('move', move, noop);\n  \n        /**\n         * @ngdoc function\n         * @name ng.animator#show\n         * @methodOf ng.$animator\n         * @function\n         *\n         * @description\n         * Reveals the element by setting the CSS property `display` to `block` and then starts the show animation directly after.\n         *\n         * @param {jQuery/jqLite element} element the element that will be rendered visible or hidden\n        */\n        animator.show = animateActionFactory('show', show, noop);\n  \n        /**\n         * @ngdoc function\n         * @name ng.animator#hide\n         * @methodOf ng.$animator\n         *\n         * @description\n         * Starts the hide animation first and sets the CSS `display` property to `none` upon completion.\n         *\n         * @param {jQuery/jqLite element} element the element that will be rendered visible or hidden\n        */\n        animator.hide = animateActionFactory('hide', noop, hide);\n\n        /**\n         * @ngdoc function\n         * @name ng.animator#animate\n         * @methodOf ng.$animator\n         *\n         * @description\n         * Triggers a custom animation event to be executed on the given element\n         *\n         * @param {jQuery/jqLite element} element that will be animated\n        */\n        animator.animate = function(event, element) {\n          animateActionFactory(event, noop, noop)(element);\n        }\n        return animator;\n  \n        function animateActionFactory(type, beforeFn, afterFn) {\n          return function(element, parent, after) {\n            var ngAnimateValue = scope.$eval(attrs.ngAnimate);\n            var className = ngAnimateValue\n                ? isObject(ngAnimateValue) ? ngAnimateValue[type] : ngAnimateValue + '-' + type\n                : '';\n            var animationPolyfill = $animation(className);\n            var polyfillSetup = animationPolyfill && animationPolyfill.setup;\n            var polyfillStart = animationPolyfill && animationPolyfill.start;\n            var polyfillCancel = animationPolyfill && animationPolyfill.cancel;\n\n            if (!className) {\n              beforeFn(element, parent, after);\n              afterFn(element, parent, after);\n            } else {\n              var activeClassName = className + '-active';\n\n              if (!parent) {\n                parent = after ? after.parent() : element.parent();\n              }\n              if ((!$sniffer.transitions && !polyfillSetup && !polyfillStart) ||\n                  (parent.inheritedData(NG_ANIMATE_CONTROLLER) || noop).running) {\n                beforeFn(element, parent, after);\n                afterFn(element, parent, after);\n                return;\n              }\n\n              var animationData = element.data(NG_ANIMATE_CONTROLLER) || {};\n              if(animationData.running) {\n                (polyfillCancel || noop)(element);\n                animationData.done();\n              }\n\n              element.data(NG_ANIMATE_CONTROLLER, {running:true, done:done});\n              element.addClass(className);\n              beforeFn(element, parent, after);\n              if (element.length == 0) return done();\n\n              var memento = (polyfillSetup || noop)(element);\n\n              // $window.setTimeout(beginAnimation, 0); this was causing the element not to animate\n              // keep at 1 for animation dom rerender\n              $window.setTimeout(beginAnimation, 1);\n            }\n\n            function parseMaxTime(str) {\n              var total = 0, values = isString(str) ? str.split(/\\s*,\\s*/) : [];\n              forEach(values, function(value) {\n                total = Math.max(parseFloat(value) || 0, total);\n              });\n              return total;\n            }\n\n            function beginAnimation() {\n              element.addClass(activeClassName);\n              if (polyfillStart) {\n                polyfillStart(element, done, memento);\n              } else if (isFunction($window.getComputedStyle)) {\n                //one day all browsers will have these properties\n                var w3cAnimationProp = 'animation'; \n                var w3cTransitionProp = 'transition';\n\n                //but some still use vendor-prefixed styles \n                var vendorAnimationProp = $sniffer.vendorPrefix + 'Animation';\n                var vendorTransitionProp = $sniffer.vendorPrefix + 'Transition';\n\n                var durationKey = 'Duration',\n                    delayKey = 'Delay',\n                    animationIterationCountKey = 'IterationCount',\n                    duration = 0;\n                \n                //we want all the styles defined before and after\n                var ELEMENT_NODE = 1;\n                forEach(element, function(element) {\n                  if (element.nodeType == ELEMENT_NODE) {\n                    var w3cProp = w3cTransitionProp,\n                        vendorProp = vendorTransitionProp,\n                        iterations = 1,\n                        elementStyles = $window.getComputedStyle(element) || {};\n\n                    //use CSS Animations over CSS Transitions\n                    if(parseFloat(elementStyles[w3cAnimationProp + durationKey]) > 0 ||\n                       parseFloat(elementStyles[vendorAnimationProp + durationKey]) > 0) {\n                      w3cProp = w3cAnimationProp;\n                      vendorProp = vendorAnimationProp;\n                      iterations = Math.max(parseInt(elementStyles[w3cProp    + animationIterationCountKey]) || 0,\n                                            parseInt(elementStyles[vendorProp + animationIterationCountKey]) || 0,\n                                            iterations);\n                    }\n\n                    var parsedDelay     = Math.max(parseMaxTime(elementStyles[w3cProp     + delayKey]),\n                                                   parseMaxTime(elementStyles[vendorProp  + delayKey]));\n\n                    var parsedDuration  = Math.max(parseMaxTime(elementStyles[w3cProp     + durationKey]),\n                                                   parseMaxTime(elementStyles[vendorProp  + durationKey]));\n\n                    duration = Math.max(parsedDelay + (iterations * parsedDuration), duration);\n                  }\n                });\n                $window.setTimeout(done, duration * 1000);\n              } else {\n                done();\n              }\n            }\n\n            function done() {\n              if(!done.run) {\n                done.run = true;\n                afterFn(element, parent, after);\n                element.removeClass(className);\n                element.removeClass(activeClassName);\n                element.removeData(NG_ANIMATE_CONTROLLER);\n              }\n            }\n          };\n        }\n  \n        function show(element) {\n          element.css('display', '');\n        }\n  \n        function hide(element) {\n          element.css('display', 'none');\n        }\n  \n        function insert(element, parent, after) {\n          if (after) {\n            after.after(element);\n          } else {\n            parent.append(element);\n          }\n        }\n  \n        function remove(element) {\n          element.remove();\n        }\n  \n        function move(element, parent, after) {\n          // Do not remove element before insert. Removing will cause data associated with the\n          // element to be dropped. Insert will implicitly do the remove.\n          insert(element, parent, after);\n        }\n      };\n\n    /**\n     * @ngdoc function\n     * @name ng.animator#enabled\n     * @methodOf ng.$animator\n     * @function\n     *\n     * @param {Boolean=} If provided then set the animation on or off.\n     * @return {Boolean} Current animation state.\n     *\n     * @description\n     * Globally enables/disables animations.\n     *\n    */\n    AnimatorService.enabled = function(value) {\n      if (arguments.length) {\n        rootAnimateController.running = !value;\n      }\n      return !rootAnimateController.running;\n    };\n\n    return AnimatorService;\n  }];\n};\n\n/**\n * ! This is a private undocumented service !\n *\n * @name ng.$browser\n * @requires $log\n * @description\n * This object has two goals:\n *\n * - hide all the global state in the browser caused by the window object\n * - abstract away all the browser specific features and inconsistencies\n *\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n * service, which can be used for convenient testing of the application without the interaction with\n * the real browser apis.\n */\n/**\n * @param {object} window The global window object.\n * @param {object} document jQuery wrapped document.\n * @param {function()} XHR XMLHttpRequest constructor.\n * @param {object} $log console.log or an object with the same interface.\n * @param {object} $sniffer $sniffer service\n */\nfunction Browser(window, document, $log, $sniffer) {\n  var self = this,\n      rawDocument = document[0],\n      location = window.location,\n      history = window.history,\n      setTimeout = window.setTimeout,\n      clearTimeout = window.clearTimeout,\n      pendingDeferIds = {};\n\n  self.isMock = false;\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n\n  // TODO(vojta): remove this temporary api\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\n  /**\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n   */\n  function completeOutstandingRequest(fn) {\n    try {\n      fn.apply(null, sliceArgs(arguments, 1));\n    } finally {\n      outstandingRequestCount--;\n      if (outstandingRequestCount === 0) {\n        while(outstandingRequestCallbacks.length) {\n          try {\n            outstandingRequestCallbacks.pop()();\n          } catch (e) {\n            $log.error(e);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Note: this method is used only by scenario runner\n   * TODO(vojta): prefix this method with $$ ?\n   * @param {function()} callback Function that will be called when no outstanding request\n   */\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\n    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\n    // regular poller would result in flaky tests.\n    forEach(pollFns, function(pollFn){ pollFn(); });\n\n    if (outstandingRequestCount === 0) {\n      callback();\n    } else {\n      outstandingRequestCallbacks.push(callback);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Poll Watcher API\n  //////////////////////////////////////////////////////////////\n  var pollFns = [],\n      pollTimeout;\n\n  /**\n   * @name ng.$browser#addPollFn\n   * @methodOf ng.$browser\n   *\n   * @param {function()} fn Poll function to add\n   *\n   * @description\n   * Adds a function to the list of functions that poller periodically executes,\n   * and starts polling if not started yet.\n   *\n   * @returns {function()} the added function\n   */\n  self.addPollFn = function(fn) {\n    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\n    pollFns.push(fn);\n    return fn;\n  };\n\n  /**\n   * @param {number} interval How often should browser call poll functions (ms)\n   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\n   *\n   * @description\n   * Configures the poller to run in the specified intervals, using the specified\n   * setTimeout fn and kicks it off.\n   */\n  function startPoller(interval, setTimeout) {\n    (function check() {\n      forEach(pollFns, function(pollFn){ pollFn(); });\n      pollTimeout = setTimeout(check, interval);\n    })();\n  }\n\n  //////////////////////////////////////////////////////////////\n  // URL API\n  //////////////////////////////////////////////////////////////\n\n  var lastBrowserUrl = location.href,\n      baseElement = document.find('base');\n\n  /**\n   * @name ng.$browser#url\n   * @methodOf ng.$browser\n   *\n   * @description\n   * GETTER:\n   * Without any argument, this method just returns current value of location.href.\n   *\n   * SETTER:\n   * With at least one argument, this method sets url to new value.\n   * If html5 history api supported, pushState/replaceState is used, otherwise\n   * location.href/location.replace is used.\n   * Returns its own instance to allow chaining\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to change url.\n   *\n   * @param {string} url New url (when used as setter)\n   * @param {boolean=} replace Should new url replace current history record ?\n   */\n  self.url = function(url, replace) {\n    // setter\n    if (url) {\n      if (lastBrowserUrl == url) return;\n      lastBrowserUrl = url;\n      if ($sniffer.history) {\n        if (replace) history.replaceState(null, '', url);\n        else {\n          history.pushState(null, '', url);\n          // Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462\n          baseElement.attr('href', baseElement.attr('href'));\n        }\n      } else {\n        if (replace) location.replace(url);\n        else location.href = url;\n      }\n      return self;\n    // getter\n    } else {\n      // the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n      return location.href.replace(/%27/g,\"'\");\n    }\n  };\n\n  var urlChangeListeners = [],\n      urlChangeInit = false;\n\n  function fireUrlChange() {\n    if (lastBrowserUrl == self.url()) return;\n\n    lastBrowserUrl = self.url();\n    forEach(urlChangeListeners, function(listener) {\n      listener(self.url());\n    });\n  }\n\n  /**\n   * @name ng.$browser#onUrlChange\n   * @methodOf ng.$browser\n   * @TODO(vojta): refactor to use node's syntax for events\n   *\n   * @description\n   * Register callback function that will be called, when url changes.\n   *\n   * It's only called when the url is changed by outside of angular:\n   * - user types different url into address bar\n   * - user clicks on history (forward/back) button\n   * - user clicks on a link\n   *\n   * It's not called when url is changed by $browser.url() method\n   *\n   * The listener gets called with new url as parameter.\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\n   *\n   * @param {function(string)} listener Listener function to be called when url changes.\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n   */\n  self.onUrlChange = function(callback) {\n    if (!urlChangeInit) {\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\n      // changed by push/replaceState\n\n      // html5 history api - popstate event\n      if ($sniffer.history) jqLite(window).bind('popstate', fireUrlChange);\n      // hashchange event\n      if ($sniffer.hashchange) jqLite(window).bind('hashchange', fireUrlChange);\n      // polling\n      else self.addPollFn(fireUrlChange);\n\n      urlChangeInit = true;\n    }\n\n    urlChangeListeners.push(callback);\n    return callback;\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Misc API\n  //////////////////////////////////////////////////////////////\n\n  /**\n   * Returns current <base href>\n   * (always relative - without domain)\n   *\n   * @returns {string=}\n   */\n  self.baseHref = function() {\n    var href = baseElement.attr('href');\n    return href ? href.replace(/^https?\\:\\/\\/[^\\/]*/, '') : '';\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Cookies API\n  //////////////////////////////////////////////////////////////\n  var lastCookies = {};\n  var lastCookieString = '';\n  var cookiePath = self.baseHref();\n\n  /**\n   * @name ng.$browser#cookies\n   * @methodOf ng.$browser\n   *\n   * @param {string=} name Cookie name\n   * @param {string=} value Cookie value\n   *\n   * @description\n   * The cookies method provides a 'private' low level access to browser cookies.\n   * It is not meant to be used directly, use the $cookie service instead.\n   *\n   * The return values vary depending on the arguments that the method was called with as follows:\n   * <ul>\n   *   <li>cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify it</li>\n   *   <li>cookies(name, value) -> set name to value, if value is undefined delete the cookie</li>\n   *   <li>cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that way)</li>\n   * </ul>\n   *\n   * @returns {Object} Hash of all cookies (if called without any parameter)\n   */\n  self.cookies = function(name, value) {\n    var cookieLength, cookieArray, cookie, i, index;\n\n    if (name) {\n      if (value === undefined) {\n        rawDocument.cookie = escape(name) + \"=;path=\" + cookiePath + \";expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n      } else {\n        if (isString(value)) {\n          cookieLength = (rawDocument.cookie = escape(name) + '=' + escape(value) + ';path=' + cookiePath).length + 1;\n\n          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n          // - 300 cookies\n          // - 20 cookies per unique domain\n          // - 4096 bytes per cookie\n          if (cookieLength > 4096) {\n            $log.warn(\"Cookie '\"+ name +\"' possibly not set or overflowed because it was too large (\"+\n              cookieLength + \" > 4096 bytes)!\");\n          }\n        }\n      }\n    } else {\n      if (rawDocument.cookie !== lastCookieString) {\n        lastCookieString = rawDocument.cookie;\n        cookieArray = lastCookieString.split(\"; \");\n        lastCookies = {};\n\n        for (i = 0; i < cookieArray.length; i++) {\n          cookie = cookieArray[i];\n          index = cookie.indexOf('=');\n          if (index > 0) { //ignore nameless cookies\n            var name = unescape(cookie.substring(0, index));\n            // the first value that is seen for a cookie is the most\n            // specific one.  values for the same cookie name that\n            // follow are for less specific paths.\n            if (lastCookies[name] === undefined) {\n              lastCookies[name] = unescape(cookie.substring(index + 1));\n            }\n          }\n        }\n      }\n      return lastCookies;\n    }\n  };\n\n\n  /**\n   * @name ng.$browser#defer\n   * @methodOf ng.$browser\n   * @param {function()} fn A function, who's execution should be defered.\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n   *\n   * @description\n   * Executes a fn asynchronously via `setTimeout(fn, delay)`.\n   *\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n   * via `$browser.defer.flush()`.\n   *\n   */\n  self.defer = function(fn, delay) {\n    var timeoutId;\n    outstandingRequestCount++;\n    timeoutId = setTimeout(function() {\n      delete pendingDeferIds[timeoutId];\n      completeOutstandingRequest(fn);\n    }, delay || 0);\n    pendingDeferIds[timeoutId] = true;\n    return timeoutId;\n  };\n\n\n  /**\n   * @name ng.$browser#defer.cancel\n   * @methodOf ng.$browser.defer\n   *\n   * @description\n   * Cancels a defered task identified with `deferId`.\n   *\n   * @param {*} deferId Token returned by the `$browser.defer` function.\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully canceled.\n   */\n  self.defer.cancel = function(deferId) {\n    if (pendingDeferIds[deferId]) {\n      delete pendingDeferIds[deferId];\n      clearTimeout(deferId);\n      completeOutstandingRequest(noop);\n      return true;\n    }\n    return false;\n  };\n\n}\n\nfunction $BrowserProvider(){\n  this.$get = ['$window', '$log', '$sniffer', '$document',\n      function( $window,   $log,   $sniffer,   $document){\n        return new Browser($window, $document, $log, $sniffer);\n      }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$cacheFactory\n *\n * @description\n * Factory that constructs cache objects.\n *\n *\n * @param {string} cacheId Name or id of the newly created cache.\n * @param {object=} options Options object that specifies the cache behavior. Properties:\n *\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\n *\n * @returns {object} Newly created cache object with the following set of methods:\n *\n * - `{object}` `info()` — Returns id, size, and options of cache.\n * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns it.\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n * - `{void}` `removeAll()` — Removes all cached values.\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n *\n */\nfunction $CacheFactoryProvider() {\n\n  this.$get = function() {\n    var caches = {};\n\n    function cacheFactory(cacheId, options) {\n      if (cacheId in caches) {\n        throw Error('cacheId ' + cacheId + ' taken');\n      }\n\n      var size = 0,\n          stats = extend({}, options, {id: cacheId}),\n          data = {},\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\n          lruHash = {},\n          freshEnd = null,\n          staleEnd = null;\n\n      return caches[cacheId] = {\n\n        put: function(key, value) {\n          var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\n          refresh(lruEntry);\n\n          if (isUndefined(value)) return;\n          if (!(key in data)) size++;\n          data[key] = value;\n\n          if (size > capacity) {\n            this.remove(staleEnd.key);\n          }\n\n          return value;\n        },\n\n\n        get: function(key) {\n          var lruEntry = lruHash[key];\n\n          if (!lruEntry) return;\n\n          refresh(lruEntry);\n\n          return data[key];\n        },\n\n\n        remove: function(key) {\n          var lruEntry = lruHash[key];\n\n          if (!lruEntry) return;\n\n          if (lruEntry == freshEnd) freshEnd = lruEntry.p;\n          if (lruEntry == staleEnd) staleEnd = lruEntry.n;\n          link(lruEntry.n,lruEntry.p);\n\n          delete lruHash[key];\n          delete data[key];\n          size--;\n        },\n\n\n        removeAll: function() {\n          data = {};\n          size = 0;\n          lruHash = {};\n          freshEnd = staleEnd = null;\n        },\n\n\n        destroy: function() {\n          data = null;\n          stats = null;\n          lruHash = null;\n          delete caches[cacheId];\n        },\n\n\n        info: function() {\n          return extend({}, stats, {size: size});\n        }\n      };\n\n\n      /**\n       * makes the `entry` the freshEnd of the LRU linked list\n       */\n      function refresh(entry) {\n        if (entry != freshEnd) {\n          if (!staleEnd) {\n            staleEnd = entry;\n          } else if (staleEnd == entry) {\n            staleEnd = entry.n;\n          }\n\n          link(entry.n, entry.p);\n          link(entry, freshEnd);\n          freshEnd = entry;\n          freshEnd.n = null;\n        }\n      }\n\n\n      /**\n       * bidirectionally links two entries of the LRU linked list\n       */\n      function link(nextEntry, prevEntry) {\n        if (nextEntry != prevEntry) {\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n        }\n      }\n    }\n\n\n    cacheFactory.info = function() {\n      var info = {};\n      forEach(caches, function(cache, cacheId) {\n        info[cacheId] = cache.info();\n      });\n      return info;\n    };\n\n\n    cacheFactory.get = function(cacheId) {\n      return caches[cacheId];\n    };\n\n\n    return cacheFactory;\n  };\n}\n\n/**\n * @ngdoc object\n * @name ng.$templateCache\n *\n * @description\n * Cache used for storing html templates.\n *\n * See {@link ng.$cacheFactory $cacheFactory}.\n *\n */\nfunction $TemplateCacheProvider() {\n  this.$get = ['$cacheFactory', function($cacheFactory) {\n    return $cacheFactory('templates');\n  }];\n}\n\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n *\n * DOM-related variables:\n *\n * - \"node\" - DOM Node\n * - \"element\" - DOM Element or Node\n * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n *\n *\n * Compiler related stuff:\n *\n * - \"linkFn\" - linking fn of a single directive\n * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n */\n\n\nvar NON_ASSIGNABLE_MODEL_EXPRESSION = 'Non-assignable model expression: ';\n\n\n/**\n * @ngdoc function\n * @name ng.$compile\n * @function\n *\n * @description\n * Compiles a piece of HTML string or DOM into a template and produces a template function, which\n * can then be used to link {@link ng.$rootScope.Scope scope} and the template together.\n *\n * The compilation is a process of walking the DOM tree and trying to match DOM elements to\n * {@link ng.$compileProvider#directive directives}. For each match it\n * executes corresponding template function and collects the\n * instance functions into a single template function which is then returned.\n *\n * The template function can then be used once to produce the view or as it is the case with\n * {@link ng.directive:ngRepeat repeater} many-times, in which\n * case each call results in a view that is a DOM clone of the original template.\n *\n <doc:example module=\"compile\">\n   <doc:source>\n    <script>\n      // declare a new module, and inject the $compileProvider\n      angular.module('compile', [], function($compileProvider) {\n        // configure new 'compile' directive by passing a directive\n        // factory function. The factory function injects the '$compile'\n        $compileProvider.directive('compile', function($compile) {\n          // directive factory creates a link function\n          return function(scope, element, attrs) {\n            scope.$watch(\n              function(scope) {\n                 // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n              },\n              function(value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n              }\n            );\n          };\n        })\n      });\n\n      function Ctrl($scope) {\n        $scope.name = 'Angular';\n        $scope.html = 'Hello {{name}}';\n      }\n    </script>\n    <div ng-controller=\"Ctrl\">\n      <input ng-model=\"name\"> <br>\n      <textarea ng-model=\"html\"></textarea> <br>\n      <div compile=\"html\"></div>\n    </div>\n   </doc:source>\n   <doc:scenario>\n     it('should auto compile', function() {\n       expect(element('div[compile]').text()).toBe('Hello Angular');\n       input('html').enter('{{name}}!');\n       expect(element('div[compile]').text()).toBe('Angular!');\n     });\n   </doc:scenario>\n </doc:example>\n\n *\n *\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n * @param {function(angular.Scope[, cloneAttachFn]} transclude function available to directives.\n * @param {number} maxPriority only apply directives lower then given priority (Only effects the\n *                 root element(s), not their children)\n * @returns {function(scope[, cloneAttachFn])} a link function which is used to bind template\n * (a DOM element/tree) to a scope. Where:\n *\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n *               `template` and call the `cloneAttachFn` function allowing the caller to attach the\n *               cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n *               called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n *\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n *      * `scope` - is the current scope with which the linking function is working with.\n *\n * Calling the linking function returns the element of the template. It is either the original element\n * passed in, or the clone of the element if the `cloneAttachFn` is provided.\n *\n * After linking the view is not updated until after a call to $digest which typically is done by\n * Angular automatically.\n *\n * If you need access to the bound view, there are two ways to do it:\n *\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\n *   before you send them to the compiler and keep this reference around.\n *   <pre>\n *     var element = $compile('<p>{{total}}</p>')(scope);\n *   </pre>\n *\n * - if on the other hand, you need the element to be cloned, the view reference from the original\n *   example would not point to the clone, but rather to the original template that was cloned. In\n *   this case, you can access the clone via the cloneAttachFn:\n *   <pre>\n *     var templateHTML = angular.element('<p>{{total}}</p>'),\n *         scope = ....;\n *\n *     var clonedElement = $compile(templateHTML)(scope, function(clonedElement, scope) {\n *       //attach the clone to DOM document at the right place\n *     });\n *\n *     //now we have reference to the cloned DOM via `clone`\n *   </pre>\n *\n *\n * For information on how the compiler works, see the\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n */\n\n\n/**\n * @ngdoc service\n * @name ng.$compileProvider\n * @function\n *\n * @description\n */\n$CompileProvider.$inject = ['$provide'];\nfunction $CompileProvider($provide) {\n  var hasDirectives = {},\n      Suffix = 'Directive',\n      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive\\:\\s*([\\d\\w\\-_]+)\\s+(.*)$/,\n      CLASS_DIRECTIVE_REGEXP = /(([\\d\\w\\-_]+)(?:\\:([^;]+))?;?)/,\n      MULTI_ROOT_TEMPLATE_ERROR = 'Template must have exactly one root element. was: ',\n      urlSanitizationWhitelist = /^\\s*(https?|ftp|mailto|file):/;\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$compileProvider#directive\n   * @methodOf ng.$compileProvider\n   * @function\n   *\n   * @description\n   * Register a new directives with the compiler.\n   *\n   * @param {string} name Name of the directive in camel-case. (ie <code>ngBind</code> which will match as\n   *                <code>ng-bind</code>).\n   * @param {function} directiveFactory An injectable directive factory function. See {@link guide/directive} for more\n   *                info.\n   * @returns {ng.$compileProvider} Self for chaining.\n   */\n   this.directive = function registerDirective(name, directiveFactory) {\n    if (isString(name)) {\n      assertArg(directiveFactory, 'directive');\n      if (!hasDirectives.hasOwnProperty(name)) {\n        hasDirectives[name] = [];\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n          function($injector, $exceptionHandler) {\n            var directives = [];\n            forEach(hasDirectives[name], function(directiveFactory) {\n              try {\n                var directive = $injector.invoke(directiveFactory);\n                if (isFunction(directive)) {\n                  directive = { compile: valueFn(directive) };\n                } else if (!directive.compile && directive.link) {\n                  directive.compile = valueFn(directive.link);\n                }\n                directive.priority = directive.priority || 0;\n                directive.name = directive.name || name;\n                directive.require = directive.require || (directive.controller && directive.name);\n                directive.restrict = directive.restrict || 'A';\n                directives.push(directive);\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            });\n            return directives;\n          }]);\n      }\n      hasDirectives[name].push(directiveFactory);\n    } else {\n      forEach(name, reverseParams(registerDirective));\n    }\n    return this;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$compileProvider#urlSanitizationWhitelist\n   * @methodOf ng.$compileProvider\n   * @function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into an\n   * absolute url. Afterwards the url is matched against the `urlSanitizationWhitelist` regular\n   * expression. If a match is found the original url is written into the dom. Otherwise the\n   * absolute url is prefixed with `'unsafe:'` string and only then it is written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.urlSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      urlSanitizationWhitelist = regexp;\n      return this;\n    }\n    return urlSanitizationWhitelist;\n  };\n\n\n  this.$get = [\n            '$injector', '$interpolate', '$exceptionHandler', '$http', '$templateCache', '$parse',\n            '$controller', '$rootScope', '$document',\n    function($injector,   $interpolate,   $exceptionHandler,   $http,   $templateCache,   $parse,\n             $controller,   $rootScope,   $document) {\n\n    var Attributes = function(element, attr) {\n      this.$$element = element;\n      this.$attr = attr || {};\n    };\n\n    Attributes.prototype = {\n      $normalize: directiveNormalize,\n\n\n      /**\n       * Set a normalized attribute on the element in a way such that all directives\n       * can share the attribute. This function properly handles boolean attributes.\n       * @param {string} key Normalized key. (ie ngAttribute)\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n       *     Defaults to true.\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\n       */\n      $set: function(key, value, writeAttr, attrName) {\n        var booleanKey = getBooleanAttrName(this.$$element[0], key),\n            $$observers = this.$$observers,\n            normalizedVal;\n\n        if (booleanKey) {\n          this.$$element.prop(key, value);\n          attrName = booleanKey;\n        }\n\n        this[key] = value;\n\n        // translate normalized key to actual key\n        if (attrName) {\n          this.$attr[key] = attrName;\n        } else {\n          attrName = this.$attr[key];\n          if (!attrName) {\n            this.$attr[key] = attrName = snake_case(key, '-');\n          }\n        }\n\n\n        // sanitize a[href] values\n        if (nodeName_(this.$$element[0]) === 'A' && key === 'href') {\n          urlSanitizationNode.setAttribute('href', value);\n\n          // href property always returns normalized absolute url, so we can match against that\n          normalizedVal = urlSanitizationNode.href;\n          if (!normalizedVal.match(urlSanitizationWhitelist)) {\n            this[key] = value = 'unsafe:' + normalizedVal;\n          }\n        }\n\n\n        if (writeAttr !== false) {\n          if (value === null || value === undefined) {\n            this.$$element.removeAttr(attrName);\n          } else {\n            this.$$element.attr(attrName, value);\n          }\n        }\n\n        // fire observers\n        $$observers && forEach($$observers[key], function(fn) {\n          try {\n            fn(value);\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        });\n      },\n\n\n      /**\n       * Observe an interpolated attribute.\n       * The observer will never be called, if given attribute is not interpolated.\n       *\n       * @param {string} key Normalized key. (ie ngAttribute) .\n       * @param {function(*)} fn Function that will be called whenever the attribute value changes.\n       * @returns {function(*)} the `fn` Function passed in.\n       */\n      $observe: function(key, fn) {\n        var attrs = this,\n            $$observers = (attrs.$$observers || (attrs.$$observers = {})),\n            listeners = ($$observers[key] || ($$observers[key] = []));\n\n        listeners.push(fn);\n        $rootScope.$evalAsync(function() {\n          if (!listeners.$$inter) {\n            // no one registered attribute interpolation function, so lets call it manually\n            fn(attrs[key]);\n          }\n        });\n        return fn;\n      }\n    };\n\n    var urlSanitizationNode = $document[0].createElement('a'),\n        startSymbol = $interpolate.startSymbol(),\n        endSymbol = $interpolate.endSymbol(),\n        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\n            ? identity\n            : function denormalizeTemplate(template) {\n              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n        },\n        NG_ATTR_BINDING = /^ngAttr[A-Z]/;\n\n\n    return compile;\n\n    //================================\n\n    function compile($compileNodes, transcludeFn, maxPriority) {\n      if (!($compileNodes instanceof jqLite)) {\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can modify it.\n        $compileNodes = jqLite($compileNodes);\n      }\n      // We can not compile top level text elements since text nodes can be merged and we will\n      // not be able to attach scope data to them, so we will wrap them in <span>\n      forEach($compileNodes, function(node, index){\n        if (node.nodeType == 3 /* text node */ && node.nodeValue.match(/\\S+/) /* non-empty */ ) {\n          $compileNodes[index] = jqLite(node).wrap('<span></span>').parent()[0];\n        }\n      });\n      var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority);\n      return function publicLinkFn(scope, cloneConnectFn){\n        assertArg(scope, 'scope');\n        // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n        // and sometimes changes the structure of the DOM.\n        var $linkNode = cloneConnectFn\n          ? JQLitePrototype.clone.call($compileNodes) // IMPORTANT!!!\n          : $compileNodes;\n\n        // Attach scope only to non-text nodes.\n        for(var i = 0, ii = $linkNode.length; i<ii; i++) {\n          var node = $linkNode[i];\n          if (node.nodeType == 1 /* element */ || node.nodeType == 9 /* document */) {\n            $linkNode.eq(i).data('$scope', scope);\n          }\n        }\n        safeAddClass($linkNode, 'ng-scope');\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode);\n        return $linkNode;\n      };\n    }\n\n    function wrongMode(localName, mode) {\n      throw Error(\"Unsupported '\" + mode + \"' for '\" + localName + \"'.\");\n    }\n\n    function safeAddClass($element, className) {\n      try {\n        $element.addClass(className);\n      } catch(e) {\n        // ignore, since it means that we are trying to set class on\n        // SVG element, where class name is read-only.\n      }\n    }\n\n    /**\n     * Compile function matches each node in nodeList against the directives. Once all directives\n     * for a particular node are collected their compile functions are executed. The compile\n     * functions return values - the linking functions - are combined into a composite linking\n     * function, which is the a linking function for the node.\n     *\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n     * @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then the\n     *        rootElement must be set the jqLite collection of the compile root. This is\n     *        needed so that the jqLite collection items can be replaced with widgets.\n     * @param {number=} max directive priority\n     * @returns {?function} A composite linking function of all of the matched directives or null.\n     */\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority) {\n      var linkFns = [],\n          nodeLinkFn, childLinkFn, directives, attrs, linkFnFound;\n\n      for(var i = 0; i < nodeList.length; i++) {\n        attrs = new Attributes();\n\n        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\n        directives = collectDirectives(nodeList[i], [], attrs, maxPriority);\n\n        nodeLinkFn = (directives.length)\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement)\n            : null;\n\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal || !nodeList[i].childNodes || !nodeList[i].childNodes.length)\n            ? null\n            : compileNodes(nodeList[i].childNodes,\n                 nodeLinkFn ? nodeLinkFn.transclude : transcludeFn);\n\n        linkFns.push(nodeLinkFn);\n        linkFns.push(childLinkFn);\n        linkFnFound = (linkFnFound || nodeLinkFn || childLinkFn);\n      }\n\n      // return a linking function if we have found anything, null otherwise\n      return linkFnFound ? compositeLinkFn : null;\n\n      function compositeLinkFn(scope, nodeList, $rootElement, boundTranscludeFn) {\n        var nodeLinkFn, childLinkFn, node, childScope, childTranscludeFn, i, ii, n;\n\n        // copy nodeList so that linking doesn't break due to live list updates.\n        var stableNodeList = [];\n        for (i = 0, ii = nodeList.length; i < ii; i++) {\n          stableNodeList.push(nodeList[i]);\n        }\n\n        for(i = 0, n = 0, ii = linkFns.length; i < ii; n++) {\n          node = stableNodeList[n];\n          nodeLinkFn = linkFns[i++];\n          childLinkFn = linkFns[i++];\n\n          if (nodeLinkFn) {\n            if (nodeLinkFn.scope) {\n              childScope = scope.$new(isObject(nodeLinkFn.scope));\n              jqLite(node).data('$scope', childScope);\n            } else {\n              childScope = scope;\n            }\n            childTranscludeFn = nodeLinkFn.transclude;\n            if (childTranscludeFn || (!boundTranscludeFn && transcludeFn)) {\n              nodeLinkFn(childLinkFn, childScope, node, $rootElement,\n                  (function(transcludeFn) {\n                    return function(cloneFn) {\n                      var transcludeScope = scope.$new();\n                      transcludeScope.$$transcluded = true;\n\n                      return transcludeFn(transcludeScope, cloneFn).\n                          bind('$destroy', bind(transcludeScope, transcludeScope.$destroy));\n                    };\n                  })(childTranscludeFn || transcludeFn)\n              );\n            } else {\n              nodeLinkFn(childLinkFn, childScope, node, undefined, boundTranscludeFn);\n            }\n          } else if (childLinkFn) {\n            childLinkFn(scope, node.childNodes, undefined, boundTranscludeFn);\n          }\n        }\n      }\n    }\n\n\n    /**\n     * Looks for directives on the given node and adds them to the directive collection which is\n     * sorted.\n     *\n     * @param node Node to search.\n     * @param directives An array to which the directives are added to. This array is sorted before\n     *        the function returns.\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n     * @param {number=} maxPriority Max directive priority.\n     */\n    function collectDirectives(node, directives, attrs, maxPriority) {\n      var nodeType = node.nodeType,\n          attrsMap = attrs.$attr,\n          match,\n          className;\n\n      switch(nodeType) {\n        case 1: /* Element */\n          // use the node name: <directive>\n          addDirective(directives,\n              directiveNormalize(nodeName_(node).toLowerCase()), 'E', maxPriority);\n\n          // iterate over the attributes\n          for (var attr, name, nName, ngAttrName, value, nAttrs = node.attributes,\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n            attr = nAttrs[j];\n            if (attr.specified) {\n              name = attr.name;\n              // support ngAttr attribute binding\n              ngAttrName = directiveNormalize(name);\n              if (NG_ATTR_BINDING.test(ngAttrName)) {\n                name = ngAttrName.substr(6).toLowerCase();\n              }\n              nName = directiveNormalize(name.toLowerCase());\n              attrsMap[nName] = name;\n              attrs[nName] = value = trim((msie && name == 'href')\n                ? decodeURIComponent(node.getAttribute(name, 2))\n                : attr.value);\n              if (getBooleanAttrName(node, nName)) {\n                attrs[nName] = true; // presence means true\n              }\n              addAttrInterpolateDirective(node, directives, value, nName);\n              addDirective(directives, nName, 'A', maxPriority);\n            }\n          }\n\n          // use class as directive\n          className = node.className;\n          if (isString(className) && className !== '') {\n            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\n              nName = directiveNormalize(match[2]);\n              if (addDirective(directives, nName, 'C', maxPriority)) {\n                attrs[nName] = trim(match[3]);\n              }\n              className = className.substr(match.index + match[0].length);\n            }\n          }\n          break;\n        case 3: /* Text Node */\n          addTextInterpolateDirective(directives, node.nodeValue);\n          break;\n        case 8: /* Comment */\n          try {\n            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n            if (match) {\n              nName = directiveNormalize(match[1]);\n              if (addDirective(directives, nName, 'M', maxPriority)) {\n                attrs[nName] = trim(match[2]);\n              }\n            }\n          } catch (e) {\n            // turns out that under some circumstances IE9 throws errors when one attempts to read comment's node value.\n            // Just ignore it and continue. (Can't seem to reproduce in test case.)\n          }\n          break;\n      }\n\n      directives.sort(byPriority);\n      return directives;\n    }\n\n\n    /**\n     * Once the directives have been collected, their compile functions are executed. This method\n     * is responsible for inlining directive templates as well as terminating the application\n     * of the directives if the terminal directive has been reached.\n     *\n     * @param {Array} directives Array of collected directives to execute their compile function.\n     *        this needs to be pre-sorted by priority order.\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n     * @param {Object} templateAttrs The shared attribute function\n     * @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n     *        argument has the root jqLite array so that we can replace nodes on it.\n     * @returns linkFn\n     */\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection) {\n      var terminalPriority = -Number.MAX_VALUE,\n          preLinkFns = [],\n          postLinkFns = [],\n          newScopeDirective = null,\n          newIsolateScopeDirective = null,\n          templateDirective = null,\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n          directive,\n          directiveName,\n          $template,\n          transcludeDirective,\n          childTranscludeFn = transcludeFn,\n          controllerDirectives,\n          linkFn,\n          directiveValue;\n\n      // executes all directives on the current element\n      for(var i = 0, ii = directives.length; i < ii; i++) {\n        directive = directives[i];\n        $template = undefined;\n\n        if (terminalPriority > directive.priority) {\n          break; // prevent further processing of directives\n        }\n\n        if (directiveValue = directive.scope) {\n          assertNoDuplicate('isolated scope', newIsolateScopeDirective, directive, $compileNode);\n          if (isObject(directiveValue)) {\n            safeAddClass($compileNode, 'ng-isolate-scope');\n            newIsolateScopeDirective = directive;\n          }\n          safeAddClass($compileNode, 'ng-scope');\n          newScopeDirective = newScopeDirective || directive;\n        }\n\n        directiveName = directive.name;\n\n        if (directiveValue = directive.controller) {\n          controllerDirectives = controllerDirectives || {};\n          assertNoDuplicate(\"'\" + directiveName + \"' controller\",\n              controllerDirectives[directiveName], directive, $compileNode);\n          controllerDirectives[directiveName] = directive;\n        }\n\n        if (directiveValue = directive.transclude) {\n          assertNoDuplicate('transclusion', transcludeDirective, directive, $compileNode);\n          transcludeDirective = directive;\n          terminalPriority = directive.priority;\n          if (directiveValue == 'element') {\n            $template = jqLite(compileNode);\n            $compileNode = templateAttrs.$$element =\n                jqLite(document.createComment(' ' + directiveName + ': ' + templateAttrs[directiveName] + ' '));\n            compileNode = $compileNode[0];\n            replaceWith(jqCollection, jqLite($template[0]), compileNode);\n            childTranscludeFn = compile($template, transcludeFn, terminalPriority);\n          } else {\n            $template = jqLite(JQLiteClone(compileNode)).contents();\n            $compileNode.html(''); // clear contents\n            childTranscludeFn = compile($template, transcludeFn);\n          }\n        }\n\n        if (directive.template) {\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          directiveValue = (isFunction(directive.template))\n              ? directive.template($compileNode, templateAttrs)\n              : directive.template;\n\n          directiveValue = denormalizeTemplate(directiveValue);\n\n          if (directive.replace) {\n            $template = jqLite('<div>' +\n                                 trim(directiveValue) +\n                               '</div>').contents();\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw new Error(MULTI_ROOT_TEMPLATE_ERROR + directiveValue);\n            }\n\n            replaceWith(jqCollection, $compileNode, compileNode);\n\n            var newTemplateAttrs = {$attr: {}};\n\n            // combine directives from the original node and from the template:\n            // - take the array of directives for this element\n            // - split it into two parts, those that were already applied and those that weren't\n            // - collect directives from the template, add them to the second group and sort them\n            // - append the second group with new directives to the first group\n            directives = directives.concat(\n                collectDirectives(\n                    compileNode,\n                    directives.splice(i + 1, directives.length - (i + 1)),\n                    newTemplateAttrs\n                )\n            );\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\n            ii = directives.length;\n          } else {\n            $compileNode.html(directiveValue);\n          }\n        }\n\n        if (directive.templateUrl) {\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i),\n              nodeLinkFn, $compileNode, templateAttrs, jqCollection, directive.replace,\n              childTranscludeFn);\n          ii = directives.length;\n        } else if (directive.compile) {\n          try {\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n            if (isFunction(linkFn)) {\n              addLinkFns(null, linkFn);\n            } else if (linkFn) {\n              addLinkFns(linkFn.pre, linkFn.post);\n            }\n          } catch (e) {\n            $exceptionHandler(e, startingTag($compileNode));\n          }\n        }\n\n        if (directive.terminal) {\n          nodeLinkFn.terminal = true;\n          terminalPriority = Math.max(terminalPriority, directive.priority);\n        }\n\n      }\n\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope;\n      nodeLinkFn.transclude = transcludeDirective && childTranscludeFn;\n\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n      return nodeLinkFn;\n\n      ////////////////////\n\n      function addLinkFns(pre, post) {\n        if (pre) {\n          pre.require = directive.require;\n          preLinkFns.push(pre);\n        }\n        if (post) {\n          post.require = directive.require;\n          postLinkFns.push(post);\n        }\n      }\n\n\n      function getControllers(require, $element) {\n        var value, retrievalMethod = 'data', optional = false;\n        if (isString(require)) {\n          while((value = require.charAt(0)) == '^' || value == '?') {\n            require = require.substr(1);\n            if (value == '^') {\n              retrievalMethod = 'inheritedData';\n            }\n            optional = optional || value == '?';\n          }\n          value = $element[retrievalMethod]('$' + require + 'Controller');\n          if (!value && !optional) {\n            throw Error(\"No controller: \" + require);\n          }\n          return value;\n        } else if (isArray(require)) {\n          value = [];\n          forEach(require, function(require) {\n            value.push(getControllers(require, $element));\n          });\n        }\n        return value;\n      }\n\n\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n        var attrs, $element, i, ii, linkFn, controller;\n\n        if (compileNode === linkNode) {\n          attrs = templateAttrs;\n        } else {\n          attrs = shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));\n        }\n        $element = attrs.$$element;\n\n        if (newIsolateScopeDirective) {\n          var LOCAL_REGEXP = /^\\s*([@=&])(\\??)\\s*(\\w*)\\s*$/;\n\n          var parentScope = scope.$parent || scope;\n\n          forEach(newIsolateScopeDirective.scope, function(definiton, scopeName) {\n            var match = definiton.match(LOCAL_REGEXP) || [],\n                attrName = match[3] || scopeName,\n                optional = (match[2] == '?'),\n                mode = match[1], // @, =, or &\n                lastValue,\n                parentGet, parentSet;\n\n            scope.$$isolateBindings[scopeName] = mode + attrName;\n\n            switch (mode) {\n\n              case '@': {\n                attrs.$observe(attrName, function(value) {\n                  scope[scopeName] = value;\n                });\n                attrs.$$observers[attrName].$$scope = parentScope;\n                if( attrs[attrName] ) {\n                  // If the attribute has been provided then we trigger an interpolation to ensure the value is there for use in the link fn\n                  scope[scopeName] = $interpolate(attrs[attrName])(parentScope);\n                }\n                break;\n              }\n\n              case '=': {\n                if (optional && !attrs[attrName]) {\n                  return;\n                }\n                parentGet = $parse(attrs[attrName]);\n                parentSet = parentGet.assign || function() {\n                  // reset the change, or we will throw this exception on every $digest\n                  lastValue = scope[scopeName] = parentGet(parentScope);\n                  throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + attrs[attrName] +\n                      ' (directive: ' + newIsolateScopeDirective.name + ')');\n                };\n                lastValue = scope[scopeName] = parentGet(parentScope);\n                scope.$watch(function parentValueWatch() {\n                  var parentValue = parentGet(parentScope);\n\n                  if (parentValue !== scope[scopeName]) {\n                    // we are out of sync and need to copy\n                    if (parentValue !== lastValue) {\n                      // parent changed and it has precedence\n                      lastValue = scope[scopeName] = parentValue;\n                    } else {\n                      // if the parent can be assigned then do so\n                      parentSet(parentScope, parentValue = lastValue = scope[scopeName]);\n                    }\n                  }\n                  return parentValue;\n                });\n                break;\n              }\n\n              case '&': {\n                parentGet = $parse(attrs[attrName]);\n                scope[scopeName] = function(locals) {\n                  return parentGet(parentScope, locals);\n                };\n                break;\n              }\n\n              default: {\n                throw Error('Invalid isolate scope definition for directive ' +\n                    newIsolateScopeDirective.name + ': ' + definiton);\n              }\n            }\n          });\n        }\n\n        if (controllerDirectives) {\n          forEach(controllerDirectives, function(directive) {\n            var locals = {\n              $scope: scope,\n              $element: $element,\n              $attrs: attrs,\n              $transclude: boundTranscludeFn\n            };\n\n            controller = directive.controller;\n            if (controller == '@') {\n              controller = attrs[directive.name];\n            }\n\n            $element.data(\n                '$' + directive.name + 'Controller',\n                $controller(controller, locals));\n          });\n        }\n\n        // PRELINKING\n        for(i = 0, ii = preLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = preLinkFns[i];\n            linkFn(scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.require, $element));\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n\n        // RECURSION\n        childLinkFn && childLinkFn(scope, linkNode.childNodes, undefined, boundTranscludeFn);\n\n        // POSTLINKING\n        for(i = 0, ii = postLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = postLinkFns[i];\n            linkFn(scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.require, $element));\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n      }\n    }\n\n\n    /**\n     * looks up the directive and decorates it with exception handling and proper parameters. We\n     * call this the boundDirective.\n     *\n     * @param {string} name name of the directive to look up.\n     * @param {string} location The directive must be found in specific format.\n     *   String containing any of theses characters:\n     *\n     *   * `E`: element name\n     *   * `A': attribute\n     *   * `C`: class\n     *   * `M`: comment\n     * @returns true if directive was added.\n     */\n    function addDirective(tDirectives, name, location, maxPriority) {\n      var match = false;\n      if (hasDirectives.hasOwnProperty(name)) {\n        for(var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i<ii; i++) {\n          try {\n            directive = directives[i];\n            if ( (maxPriority === undefined || maxPriority > directive.priority) &&\n                 directive.restrict.indexOf(location) != -1) {\n              tDirectives.push(directive);\n              match = true;\n            }\n          } catch(e) { $exceptionHandler(e); }\n        }\n      }\n      return match;\n    }\n\n\n    /**\n     * When the element is replaced with HTML template then the new attributes\n     * on the template need to be merged with the existing attributes in the DOM.\n     * The desired effect is to have both of the attributes present.\n     *\n     * @param {object} dst destination attributes (original DOM)\n     * @param {object} src source attributes (from the directive template)\n     */\n    function mergeTemplateAttributes(dst, src) {\n      var srcAttr = src.$attr,\n          dstAttr = dst.$attr,\n          $element = dst.$$element;\n\n      // reapply the old attributes to the new element\n      forEach(dst, function(value, key) {\n        if (key.charAt(0) != '$') {\n          if (src[key]) {\n            value += (key === 'style' ? ';' : ' ') + src[key];\n          }\n          dst.$set(key, value, true, srcAttr[key]);\n        }\n      });\n\n      // copy the new attributes on the old attrs object\n      forEach(src, function(value, key) {\n        if (key == 'class') {\n          safeAddClass($element, value);\n          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\n        } else if (key == 'style') {\n          $element.attr('style', $element.attr('style') + ';' + value);\n        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\n          dst[key] = value;\n          dstAttr[key] = srcAttr[key];\n        }\n      });\n    }\n\n\n    function compileTemplateUrl(directives, beforeTemplateNodeLinkFn, $compileNode, tAttrs,\n        $rootElement, replace, childTranscludeFn) {\n      var linkQueue = [],\n          afterTemplateNodeLinkFn,\n          afterTemplateChildLinkFn,\n          beforeTemplateCompileNode = $compileNode[0],\n          origAsyncDirective = directives.shift(),\n          // The fact that we have to copy and patch the directive seems wrong!\n          derivedSyncDirective = extend({}, origAsyncDirective, {\n            controller: null, templateUrl: null, transclude: null, scope: null\n          }),\n          templateUrl = (isFunction(origAsyncDirective.templateUrl))\n              ? origAsyncDirective.templateUrl($compileNode, tAttrs)\n              : origAsyncDirective.templateUrl;\n\n      $compileNode.html('');\n\n      $http.get(templateUrl, {cache: $templateCache}).\n        success(function(content) {\n          var compileNode, tempTemplateAttrs, $template;\n\n          content = denormalizeTemplate(content);\n\n          if (replace) {\n            $template = jqLite('<div>' + trim(content) + '</div>').contents();\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw new Error(MULTI_ROOT_TEMPLATE_ERROR + content);\n            }\n\n            tempTemplateAttrs = {$attr: {}};\n            replaceWith($rootElement, $compileNode, compileNode);\n            collectDirectives(compileNode, directives, tempTemplateAttrs);\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n          } else {\n            compileNode = beforeTemplateCompileNode;\n            $compileNode.html(content);\n          }\n\n          directives.unshift(derivedSyncDirective);\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn);\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\n\n          while(linkQueue.length) {\n            var scope = linkQueue.shift(),\n                beforeTemplateLinkNode = linkQueue.shift(),\n                linkRootElement = linkQueue.shift(),\n                controller = linkQueue.shift(),\n                linkNode = compileNode;\n\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n              // it was cloned therefore we have to clone as well.\n              linkNode = JQLiteClone(compileNode);\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n            }\n\n            afterTemplateNodeLinkFn(function() {\n              beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, controller);\n            }, scope, linkNode, $rootElement, controller);\n          }\n          linkQueue = null;\n        }).\n        error(function(response, code, headers, config) {\n          throw Error('Failed to load template: ' + config.url);\n        });\n\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, controller) {\n        if (linkQueue) {\n          linkQueue.push(scope);\n          linkQueue.push(node);\n          linkQueue.push(rootElement);\n          linkQueue.push(controller);\n        } else {\n          afterTemplateNodeLinkFn(function() {\n            beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, controller);\n          }, scope, node, rootElement, controller);\n        }\n      };\n    }\n\n\n    /**\n     * Sorting function for bound directives.\n     */\n    function byPriority(a, b) {\n      return b.priority - a.priority;\n    }\n\n\n    function assertNoDuplicate(what, previousDirective, directive, element) {\n      if (previousDirective) {\n        throw Error('Multiple directives [' + previousDirective.name + ', ' +\n          directive.name + '] asking for ' + what + ' on: ' +  startingTag(element));\n      }\n    }\n\n\n    function addTextInterpolateDirective(directives, text) {\n      var interpolateFn = $interpolate(text, true);\n      if (interpolateFn) {\n        directives.push({\n          priority: 0,\n          compile: valueFn(function textInterpolateLinkFn(scope, node) {\n            var parent = node.parent(),\n                bindings = parent.data('$binding') || [];\n            bindings.push(interpolateFn);\n            safeAddClass(parent.data('$binding', bindings), 'ng-binding');\n            scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n              node[0].nodeValue = value;\n            });\n          })\n        });\n      }\n    }\n\n\n    function addAttrInterpolateDirective(node, directives, value, name) {\n      var interpolateFn = $interpolate(value, true);\n\n      // no interpolation found -> ignore\n      if (!interpolateFn) return;\n\n\n      directives.push({\n        priority: 100,\n        compile: valueFn(function attrInterpolateLinkFn(scope, element, attr) {\n          var $$observers = (attr.$$observers || (attr.$$observers = {}));\n\n          // we need to interpolate again, in case the attribute value has been updated\n          // (e.g. by another directive's compile function)\n          interpolateFn = $interpolate(attr[name], true);\n\n          // if attribute was updated so that there is no interpolation going on we don't want to\n          // register any observers\n          if (!interpolateFn) return;\n\n          attr[name] = interpolateFn(scope);\n          ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n          (attr.$$observers && attr.$$observers[name].$$scope || scope).\n            $watch(interpolateFn, function interpolateFnWatchAction(value) {\n              attr.$set(name, value);\n            });\n        })\n      });\n    }\n\n\n    /**\n     * This is a special jqLite.replaceWith, which can replace items which\n     * have no parents, provided that the containing jqLite collection is provided.\n     *\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n     *    in the root of the tree.\n     * @param {JqLite} $element The jqLite element which we are going to replace. We keep the shell,\n     *    but replace its DOM node reference.\n     * @param {Node} newNode The new DOM node.\n     */\n    function replaceWith($rootElement, $element, newNode) {\n      var oldNode = $element[0],\n          parent = oldNode.parentNode,\n          i, ii;\n\n      if ($rootElement) {\n        for(i = 0, ii = $rootElement.length; i < ii; i++) {\n          if ($rootElement[i] == oldNode) {\n            $rootElement[i] = newNode;\n            break;\n          }\n        }\n      }\n\n      if (parent) {\n        parent.replaceChild(newNode, oldNode);\n      }\n\n      newNode[jqLite.expando] = oldNode[jqLite.expando];\n      $element[0] = newNode;\n    }\n  }];\n}\n\nvar PREFIX_REGEXP = /^(x[\\:\\-_]|data[\\:\\-_])/i;\n/**\n * Converts all accepted directives format into proper directive name.\n * All of these will become 'myDirective':\n *   my:DiRective\n *   my-directive\n *   x-my-directive\n *   data-my:directive\n *\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction directiveNormalize(name) {\n  return camelCase(name.replace(PREFIX_REGEXP, ''));\n}\n\n/**\n * @ngdoc object\n * @name ng.$compile.directive.Attributes\n * @description\n *\n * A shared object between directive compile / linking functions which contains normalized DOM element\n * attributes. The the values reflect current binding state `{{ }}`. The normalization is needed\n * since all of these are treated as equivalent in Angular:\n *\n *          <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n */\n\n/**\n * @ngdoc property\n * @name ng.$compile.directive.Attributes#$attr\n * @propertyOf ng.$compile.directive.Attributes\n * @returns {object} A map of DOM element attribute names to the normalized name. This is\n *          needed to do reverse lookup from normalized name back to actual name.\n */\n\n\n/**\n * @ngdoc function\n * @name ng.$compile.directive.Attributes#$set\n * @methodOf ng.$compile.directive.Attributes\n * @function\n *\n * @description\n * Set DOM element attribute value.\n *\n *\n * @param {string} name Normalized element attribute name of the property to modify. The name is\n *          revers translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n *          property to the original name.\n * @param {string} value Value to set the attribute to. The value can be an interpolated string.\n */\n\n\n\n/**\n * Closure compiler type information\n */\n\nfunction nodesetLinkingFn(\n  /* angular.Scope */ scope,\n  /* NodeList */ nodeList,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\nfunction directiveLinkingFn(\n  /* nodesetLinkingFn */ nodesetLinkingFn,\n  /* angular.Scope */ scope,\n  /* Node */ node,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\n/**\n * @ngdoc object\n * @name ng.$controllerProvider\n * @description\n * The {@link ng.$controller $controller service} is used by Angular to create new\n * controllers.\n *\n * This provider allows controller registration via the\n * {@link ng.$controllerProvider#register register} method.\n */\nfunction $ControllerProvider() {\n  var controllers = {},\n      CNTRL_REG = /^(\\S+)(\\s+as\\s+(\\w+))?$/;\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$controllerProvider#register\n   * @methodOf ng.$controllerProvider\n   * @param {string} name Controller name\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n   *    annotations in the array notation).\n   */\n  this.register = function(name, constructor) {\n    if (isObject(name)) {\n      extend(controllers, name)\n    } else {\n      controllers[name] = constructor;\n    }\n  };\n\n\n  this.$get = ['$injector', '$window', function($injector, $window) {\n\n    /**\n     * @ngdoc function\n     * @name ng.$controller\n     * @requires $injector\n     *\n     * @param {Function|string} constructor If called with a function then it's considered to be the\n     *    controller constructor function. Otherwise it's considered to be a string which is used\n     *    to retrieve the controller constructor using the following steps:\n     *\n     *    * check if a controller with given name is registered via `$controllerProvider`\n     *    * check if evaluating the string on the current scope returns a constructor\n     *    * check `window[constructor]` on the global `window` object\n     *\n     * @param {Object} locals Injection locals for Controller.\n     * @return {Object} Instance of given controller.\n     *\n     * @description\n     * `$controller` service is responsible for instantiating controllers.\n     *\n     * It's just a simple call to {@link AUTO.$injector $injector}, but extracted into\n     * a service, so that one can override this service with {@link https://gist.github.com/1649788\n     * BC version}.\n     */\n    return function(expression, locals) {\n      var instance, match, constructor, identifier;\n\n      if(isString(expression)) {\n        match = expression.match(CNTRL_REG),\n        constructor = match[1],\n        identifier = match[3];\n        expression = controllers.hasOwnProperty(constructor)\n            ? controllers[constructor]\n            : getter(locals.$scope, constructor, true) || getter($window, constructor, true);\n\n        assertArgFn(expression, constructor, true);\n      }\n\n      instance = $injector.instantiate(expression, locals);\n\n      if (identifier) {\n        if (typeof locals.$scope !== 'object') {\n          throw new Error('Can not export controller as \"' + identifier + '\". ' +\n              'No scope object provided!');\n        }\n\n        locals.$scope[identifier] = instance;\n      }\n\n      return instance;\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$document\n * @requires $window\n *\n * @description\n * A {@link angular.element jQuery (lite)}-wrapped reference to the browser's `window.document`\n * element.\n */\nfunction $DocumentProvider(){\n  this.$get = ['$window', function(window){\n    return jqLite(window.document);\n  }];\n}\n\n/**\n * @ngdoc function\n * @name ng.$exceptionHandler\n * @requires $log\n *\n * @description\n * Any uncaught exception in angular expressions is delegated to this service.\n * The default implementation simply delegates to `$log.error` which logs it into\n * the browser console.\n *\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n *\n * @param {Error} exception Exception associated with the error.\n * @param {string=} cause optional information about the context in which\n *       the error was thrown.\n *\n */\nfunction $ExceptionHandlerProvider() {\n  this.$get = ['$log', function($log) {\n    return function(exception, cause) {\n      $log.error.apply($log, arguments);\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$interpolateProvider\n * @function\n *\n * @description\n *\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n */\nfunction $InterpolateProvider() {\n  var startSymbol = '{{';\n  var endSymbol = '}}';\n\n  /**\n   * @ngdoc method\n   * @name ng.$interpolateProvider#startSymbol\n   * @methodOf ng.$interpolateProvider\n   * @description\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n   *\n   * @param {string=} value new value to set the starting symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.startSymbol = function(value){\n    if (value) {\n      startSymbol = value;\n      return this;\n    } else {\n      return startSymbol;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name ng.$interpolateProvider#endSymbol\n   * @methodOf ng.$interpolateProvider\n   * @description\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n   *\n   * @param {string=} value new value to set the ending symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.endSymbol = function(value){\n    if (value) {\n      endSymbol = value;\n      return this;\n    } else {\n      return endSymbol;\n    }\n  };\n\n\n  this.$get = ['$parse', '$exceptionHandler', function($parse, $exceptionHandler) {\n    var startSymbolLength = startSymbol.length,\n        endSymbolLength = endSymbol.length;\n\n    /**\n     * @ngdoc function\n     * @name ng.$interpolate\n     * @function\n     *\n     * @requires $parse\n     *\n     * @description\n     *\n     * Compiles a string with markup into an interpolation function. This service is used by the\n     * HTML {@link ng.$compile $compile} service for data binding. See\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n     * interpolation markup.\n     *\n     *\n       <pre>\n         var $interpolate = ...; // injected\n         var exp = $interpolate('Hello {{name}}!');\n         expect(exp({name:'Angular'}).toEqual('Hello Angular!');\n       </pre>\n     *\n     *\n     * @param {string} text The text with markup to interpolate.\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n     *    embedded expression in order to return an interpolation function. Strings with no\n     *    embedded expression will return null for the interpolation function.\n     * @returns {function(context)} an interpolation function which is used to compute the interpolated\n     *    string. The function has these parameters:\n     *\n     *    * `context`: an object against which any expressions embedded in the strings are evaluated\n     *      against.\n     *\n     */\n    function $interpolate(text, mustHaveExpression) {\n      var startIndex,\n          endIndex,\n          index = 0,\n          parts = [],\n          length = text.length,\n          hasInterpolation = false,\n          fn,\n          exp,\n          concat = [];\n\n      while(index < length) {\n        if ( ((startIndex = text.indexOf(startSymbol, index)) != -1) &&\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) ) {\n          (index != startIndex) && parts.push(text.substring(index, startIndex));\n          parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));\n          fn.exp = exp;\n          index = endIndex + endSymbolLength;\n          hasInterpolation = true;\n        } else {\n          // we did not find anything, so we have to add the remainder to the parts array\n          (index != length) && parts.push(text.substring(index));\n          index = length;\n        }\n      }\n\n      if (!(length = parts.length)) {\n        // we added, nothing, must have been an empty string.\n        parts.push('');\n        length = 1;\n      }\n\n      if (!mustHaveExpression  || hasInterpolation) {\n        concat.length = length;\n        fn = function(context) {\n          try {\n            for(var i = 0, ii = length, part; i<ii; i++) {\n              if (typeof (part = parts[i]) == 'function') {\n                part = part(context);\n                if (part == null || part == undefined) {\n                  part = '';\n                } else if (typeof part != 'string') {\n                  part = toJson(part);\n                }\n              }\n              concat[i] = part;\n            }\n            return concat.join('');\n          }\n          catch(err) {\n            var newErr = new Error('Error while interpolating: ' + text + '\\n' + err.toString());\n            $exceptionHandler(newErr);\n          }\n        };\n        fn.exp = text;\n        fn.parts = parts;\n        return fn;\n      }\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name ng.$interpolate#startSymbol\n     * @methodOf ng.$interpolate\n     * @description\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n     *\n     * Use {@link ng.$interpolateProvider#startSymbol $interpolateProvider#startSymbol} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.startSymbol = function() {\n      return startSymbol;\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name ng.$interpolate#endSymbol\n     * @methodOf ng.$interpolate\n     * @description\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n     *\n     * Use {@link ng.$interpolateProvider#endSymbol $interpolateProvider#endSymbol} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.endSymbol = function() {\n      return endSymbol;\n    }\n\n    return $interpolate;\n  }];\n}\n\nvar SERVER_MATCH = /^([^:]+):\\/\\/(\\w+:{0,1}\\w*@)?(\\{?[\\w\\.-]*\\}?)(:([0-9]+))?(\\/[^\\?#]*)?(\\?([^#]*))?(#(.*))?$/,\n    PATH_MATCH = /^([^\\?#]*)(\\?([^#]*))?(#(.*))?$/,\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\n\n\n/**\n * Encode path using encodeUriSegment, ignoring forward slashes\n *\n * @param {string} path Path to encode\n * @returns {string}\n */\nfunction encodePath(path) {\n  var segments = path.split('/'),\n      i = segments.length;\n\n  while (i--) {\n    segments[i] = encodeUriSegment(segments[i]);\n  }\n\n  return segments.join('/');\n}\n\nfunction matchUrl(url, obj) {\n  var match = SERVER_MATCH.exec(url);\n\n  obj.$$protocol = match[1];\n  obj.$$host = match[3];\n  obj.$$port = int(match[5]) || DEFAULT_PORTS[match[1]] || null;\n}\n\nfunction matchAppUrl(url, obj) {\n  var match = PATH_MATCH.exec(url);\n\n  obj.$$path = decodeURIComponent(match[1]);\n  obj.$$search = parseKeyValue(match[3]);\n  obj.$$hash = decodeURIComponent(match[5] || '');\n\n  // make sure path starts with '/';\n  if (obj.$$path && obj.$$path.charAt(0) != '/') obj.$$path = '/' + obj.$$path;\n}\n\n\nfunction composeProtocolHostPort(protocol, host, port) {\n  return protocol + '://' + host + (port == DEFAULT_PORTS[protocol] ? '' : ':' + port);\n}\n\n/**\n *\n * @param {string} begin\n * @param {string} whole\n * @param {string} otherwise\n * @returns {string} returns text from whole after begin or otherwise if it does not begin with expected string.\n */\nfunction beginsWith(begin, whole, otherwise) {\n  return whole.indexOf(begin) == 0 ? whole.substr(begin.length) : otherwise;\n}\n\n\nfunction stripHash(url) {\n  var index = url.indexOf('#');\n  return index == -1 ? url : url.substr(0, index);\n}\n\n\nfunction stripFile(url) {\n  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);\n}\n\n/* return the server only */\nfunction serverBase(url) {\n  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));\n}\n\n\n/**\n * LocationHtml5Url represents an url\n * This object is exposed as $location service when HTML5 mode is enabled and supported\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} basePrefix url path prefix\n */\nfunction LocationHtml5Url(appBase, basePrefix) {\n  basePrefix = basePrefix || '';\n  var appBaseNoFile = stripFile(appBase);\n  /**\n   * Parse given html5 (regular) url string into properties\n   * @param {string} newAbsoluteUrl HTML5 url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var parsed = {}\n    matchUrl(url, parsed);\n    var pathUrl = beginsWith(appBaseNoFile, url);\n    if (!isString(pathUrl)) {\n      throw Error('Invalid url \"' + url + '\", missing path prefix \"' + appBaseNoFile + '\".');\n    }\n    matchAppUrl(pathUrl, parsed);\n    extend(this, parsed);\n    if (!this.$$path) {\n      this.$$path = '/';\n    }\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'\n  };\n\n  this.$$rewrite = function(url) {\n    var appUrl, prevAppUrl;\n\n    if ( (appUrl = beginsWith(appBase, url)) !== undefined ) {\n      prevAppUrl = appUrl;\n      if ( (appUrl = beginsWith(basePrefix, appUrl)) !== undefined ) {\n        return appBaseNoFile + (beginsWith('/', appUrl) || appUrl);\n      } else {\n        return appBase + prevAppUrl;\n      }\n    } else if ( (appUrl = beginsWith(appBaseNoFile, url)) !== undefined ) {\n      return appBaseNoFile + appUrl;\n    } else if (appBaseNoFile == url + '/') {\n      return appBaseNoFile;\n    }\n  }\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when html5 history api is disabled or not supported\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangUrl(appBase, hashPrefix) {\n  var appBaseNoFile = stripFile(appBase);\n\n  /**\n   * Parse given hashbang url into properties\n   * @param {string} url Hashbang url\n   * @private\n   */\n  this.$$parse = function(url) {\n    matchUrl(url, this);\n    var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);\n    if (!isString(withoutBaseUrl)) {\n      throw new Error('Invalid url \"' + url + '\", does not start with \"' + appBase +  '\".');\n    }\n    var withoutHashUrl = withoutBaseUrl.charAt(0) == '#' ? beginsWith(hashPrefix, withoutBaseUrl) : withoutBaseUrl;\n    if (!isString(withoutHashUrl)) {\n      throw new Error('Invalid url \"' + url + '\", missing hash prefix \"' + hashPrefix + '\".');\n    }\n    matchAppUrl(withoutHashUrl, this);\n    this.$$compose();\n  };\n\n  /**\n   * Compose hashbang url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');\n  };\n\n  this.$$rewrite = function(url) {\n    if(stripHash(appBase) == stripHash(url)) {\n      return url;\n    }\n  }\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when html5 history api is enabled but the browser\n * does not support it.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangInHtml5Url(appBase, hashPrefix) {\n  LocationHashbangUrl.apply(this, arguments);\n\n  var appBaseNoFile = stripFile(appBase);\n\n  this.$$rewrite = function(url) {\n    var appUrl;\n\n    if ( appBase == stripHash(url) ) {\n      return url;\n    } else if ( (appUrl = beginsWith(appBaseNoFile, url)) ) {\n      return appBase + hashPrefix + appUrl;\n    } else if ( appBaseNoFile === url + '/') {\n      return appBaseNoFile;\n    }\n  }\n}\n\n\nLocationHashbangInHtml5Url.prototype =\n  LocationHashbangUrl.prototype =\n  LocationHtml5Url.prototype = {\n\n  /**\n   * Has any change been replacing ?\n   * @private\n   */\n  $$replace: false,\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#absUrl\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return full url representation with all segments encoded according to rules specified in\n   * {@link http://www.ietf.org/rfc/rfc3986.txt RFC 3986}.\n   *\n   * @return {string} full url\n   */\n  absUrl: locationGetter('$$absUrl'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#url\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\n   *\n   * Change path, search and hash, when called with parameter and return `$location`.\n   *\n   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\n   * @return {string} url\n   */\n  url: function(url, replace) {\n    if (isUndefined(url))\n      return this.$$url;\n\n    var match = PATH_MATCH.exec(url);\n    if (match[1]) this.path(decodeURIComponent(match[1]));\n    if (match[2] || match[1]) this.search(match[3] || '');\n    this.hash(match[5] || '', replace);\n\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#protocol\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return protocol of current url.\n   *\n   * @return {string} protocol of current url\n   */\n  protocol: locationGetter('$$protocol'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#host\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return host of current url.\n   *\n   * @return {string} host of current url.\n   */\n  host: locationGetter('$$host'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#port\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return port of current url.\n   *\n   * @return {Number} port\n   */\n  port: locationGetter('$$port'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#path\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return path of current url when called without any parameter.\n   *\n   * Change path when called with parameter and return `$location`.\n   *\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n   * if it is missing.\n   *\n   * @param {string=} path New path\n   * @return {string} path\n   */\n  path: locationGetterSetter('$$path', function(path) {\n    return path.charAt(0) == '/' ? path : '/' + path;\n  }),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#search\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return search part (as object) of current url when called without any parameter.\n   *\n   * Change search part when called with parameter and return `$location`.\n   *\n   * @param {string|object<string,string>=} search New search params - string or hash object\n   * @param {string=} paramValue If `search` is a string, then `paramValue` will override only a\n   *    single search parameter. If the value is `null`, the parameter will be deleted.\n   *\n   * @return {string} search\n   */\n  search: function(search, paramValue) {\n    if (isUndefined(search))\n      return this.$$search;\n\n    if (isDefined(paramValue)) {\n      if (paramValue === null) {\n        delete this.$$search[search];\n      } else {\n        this.$$search[search] = paramValue;\n      }\n    } else {\n      this.$$search = isString(search) ? parseKeyValue(search) : search;\n    }\n\n    this.$$compose();\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#hash\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return hash fragment when called without any parameter.\n   *\n   * Change hash fragment when called with parameter and return `$location`.\n   *\n   * @param {string=} hash New hash fragment\n   * @return {string} hash\n   */\n  hash: locationGetterSetter('$$hash', identity),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#replace\n   * @methodOf ng.$location\n   *\n   * @description\n   * If called, all changes to $location during current `$digest` will be replacing current history\n   * record, instead of adding new one.\n   */\n  replace: function() {\n    this.$$replace = true;\n    return this;\n  }\n};\n\nfunction locationGetter(property) {\n  return function() {\n    return this[property];\n  };\n}\n\n\nfunction locationGetterSetter(property, preprocess) {\n  return function(value) {\n    if (isUndefined(value))\n      return this[property];\n\n    this[property] = preprocess(value);\n    this.$$compose();\n\n    return this;\n  };\n}\n\n\n/**\n * @ngdoc object\n * @name ng.$location\n *\n * @requires $browser\n * @requires $sniffer\n * @requires $rootElement\n *\n * @description\n * The $location service parses the URL in the browser address bar (based on the\n * {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL\n * available to your application. Changes to the URL in the address bar are reflected into\n * $location service and changes to $location are reflected into the browser address bar.\n *\n * **The $location service:**\n *\n * - Exposes the current URL in the browser address bar, so you can\n *   - Watch and observe the URL.\n *   - Change the URL.\n * - Synchronizes the URL with the browser when the user\n *   - Changes the address bar.\n *   - Clicks the back or forward button (or clicks a History link).\n *   - Clicks on a link.\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n *\n * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular\n * Services: Using $location}\n */\n\n/**\n * @ngdoc object\n * @name ng.$locationProvider\n * @description\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n */\nfunction $LocationProvider(){\n  var hashPrefix = '',\n      html5Mode = false;\n\n  /**\n   * @ngdoc property\n   * @name ng.$locationProvider#hashPrefix\n   * @methodOf ng.$locationProvider\n   * @description\n   * @param {string=} prefix Prefix for hash part (containing path and search)\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.hashPrefix = function(prefix) {\n    if (isDefined(prefix)) {\n      hashPrefix = prefix;\n      return this;\n    } else {\n      return hashPrefix;\n    }\n  };\n\n  /**\n   * @ngdoc property\n   * @name ng.$locationProvider#html5Mode\n   * @methodOf ng.$locationProvider\n   * @description\n   * @param {string=} mode Use HTML5 strategy if available.\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.html5Mode = function(mode) {\n    if (isDefined(mode)) {\n      html5Mode = mode;\n      return this;\n    } else {\n      return html5Mode;\n    }\n  };\n\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement',\n      function( $rootScope,   $browser,   $sniffer,   $rootElement) {\n    var $location,\n        LocationMode,\n        baseHref = $browser.baseHref(),\n        initialUrl = $browser.url(),\n        appBase;\n\n    if (html5Mode) {\n      appBase = baseHref ? serverBase(initialUrl) + baseHref : initialUrl;\n      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;\n    } else {\n      appBase = stripHash(initialUrl);\n      LocationMode = LocationHashbangUrl;\n    }\n    $location = new LocationMode(appBase, '#' + hashPrefix);\n    $location.$$parse($location.$$rewrite(initialUrl));\n\n    $rootElement.bind('click', function(event) {\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n      // currently we open nice url link and redirect then\n\n      if (event.ctrlKey || event.metaKey || event.which == 2) return;\n\n      var elm = jqLite(event.target);\n\n      // traverse the DOM up to find first A tag\n      while (lowercase(elm[0].nodeName) !== 'a') {\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n      }\n\n      var absHref = elm.prop('href');\n      var rewrittenUrl = $location.$$rewrite(absHref);\n\n      if (absHref && !elm.attr('target') && rewrittenUrl && !event.isDefaultPrevented()) {\n        event.preventDefault();\n        if (rewrittenUrl != $browser.url()) {\n          // update location manually\n          $location.$$parse(rewrittenUrl);\n          $rootScope.$apply();\n          // hack to work around FF6 bug 684208 when scenario runner clicks on links\n          window.angular['ff-684208-preventDefault'] = true;\n        }\n      }\n    });\n\n\n    // rewrite hashbang url <> html5 url\n    if ($location.absUrl() != initialUrl) {\n      $browser.url($location.absUrl(), true);\n    }\n\n    // update $location when $browser url changes\n    $browser.onUrlChange(function(newUrl) {\n      if ($location.absUrl() != newUrl) {\n        if ($rootScope.$broadcast('$locationChangeStart', newUrl, $location.absUrl()).defaultPrevented) {\n          $browser.url($location.absUrl());\n          return;\n        }\n        $rootScope.$evalAsync(function() {\n          var oldUrl = $location.absUrl();\n\n          $location.$$parse(newUrl);\n          afterLocationChange(oldUrl);\n        });\n        if (!$rootScope.$$phase) $rootScope.$digest();\n      }\n    });\n\n    // update browser\n    var changeCounter = 0;\n    $rootScope.$watch(function $locationWatch() {\n      var oldUrl = $browser.url();\n      var currentReplace = $location.$$replace;\n\n      if (!changeCounter || oldUrl != $location.absUrl()) {\n        changeCounter++;\n        $rootScope.$evalAsync(function() {\n          if ($rootScope.$broadcast('$locationChangeStart', $location.absUrl(), oldUrl).\n              defaultPrevented) {\n            $location.$$parse(oldUrl);\n          } else {\n            $browser.url($location.absUrl(), currentReplace);\n            afterLocationChange(oldUrl);\n          }\n        });\n      }\n      $location.$$replace = false;\n\n      return changeCounter;\n    });\n\n    return $location;\n\n    function afterLocationChange(oldUrl) {\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl);\n    }\n}];\n}\n\n/**\n * @ngdoc object\n * @name ng.$log\n * @requires $window\n *\n * @description\n * Simple service for logging. Default implementation writes the message\n * into the browser's console (if present).\n *\n * The main purpose of this service is to simplify debugging and troubleshooting.\n *\n * @example\n   <example>\n     <file name=\"script.js\">\n       function LogCtrl($scope, $log) {\n         $scope.$log = $log;\n         $scope.message = 'Hello World!';\n       }\n     </file>\n     <file name=\"index.html\">\n       <div ng-controller=\"LogCtrl\">\n         <p>Reload this page with open console, enter text and hit the log button...</p>\n         Message:\n         <input type=\"text\" ng-model=\"message\"/>\n         <button ng-click=\"$log.log(message)\">log</button>\n         <button ng-click=\"$log.warn(message)\">warn</button>\n         <button ng-click=\"$log.info(message)\">info</button>\n         <button ng-click=\"$log.error(message)\">error</button>\n       </div>\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc object\n * @name ng.$logProvider\n * @description\n * Use the `$logProvider` to configure how the application logs messages\n */\nfunction $LogProvider(){\n  var debug = true,\n      self = this;\n  \n  /**\n   * @ngdoc property\n   * @name ng.$logProvider#debugEnabled\n   * @methodOf ng.$logProvider\n   * @description\n   * @param {string=} flag enable or disable debug level messages\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.debugEnabled = function(flag) {\n\t  if (isDefined(flag)) {\n\t\t  debug = flag;\n\t\t  return this;\n\t  } else {\n\t\t  return debug;\n\t  }\n  };\n  \n  this.$get = ['$window', function($window){\n    return {\n      /**\n       * @ngdoc method\n       * @name ng.$log#log\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write a log message\n       */\n      log: consoleLog('log'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#warn\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write a warning message\n       */\n      warn: consoleLog('warn'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#info\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write an information message\n       */\n      info: consoleLog('info'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#error\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write an error message\n       */\n      error: consoleLog('error'),\n      \n      /**\n       * @ngdoc method\n       * @name ng.$log#debug\n       * @methodOf ng.$log\n       * \n       * @description\n       * Write a debug message\n       */\n      debug: (function () {\n    \tvar fn = consoleLog('debug');\n    \t\n    \treturn function() {\n    \t\tif (debug) {\n    \t\t\tfn.apply(self, arguments);\n    \t\t}\n    \t}\n      }())\n    };\n\n    function formatError(arg) {\n      if (arg instanceof Error) {\n        if (arg.stack) {\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n              ? 'Error: ' + arg.message + '\\n' + arg.stack\n              : arg.stack;\n        } else if (arg.sourceURL) {\n          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n        }\n      }\n      return arg;\n    }\n\n    function consoleLog(type) {\n      var console = $window.console || {},\n          logFn = console[type] || console.log || noop;\n\n      if (logFn.apply) {\n        return function() {\n          var args = [];\n          forEach(arguments, function(arg) {\n            args.push(formatError(arg));\n          });\n          return logFn.apply(console, args);\n        };\n      }\n\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n      return function(arg1, arg2) {\n        logFn(arg1, arg2);\n      }\n    }\n  }];\n}\n\nvar OPERATORS = {\n    'null':function(){return null;},\n    'true':function(){return true;},\n    'false':function(){return false;},\n    undefined:noop,\n    '+':function(self, locals, a,b){\n      a=a(self, locals); b=b(self, locals);\n      if (isDefined(a)) {\n        if (isDefined(b)) {\n          return a + b;\n        }\n        return a;\n      }\n      return isDefined(b)?b:undefined;},\n    '-':function(self, locals, a,b){a=a(self, locals); b=b(self, locals); return (isDefined(a)?a:0)-(isDefined(b)?b:0);},\n    '*':function(self, locals, a,b){return a(self, locals)*b(self, locals);},\n    '/':function(self, locals, a,b){return a(self, locals)/b(self, locals);},\n    '%':function(self, locals, a,b){return a(self, locals)%b(self, locals);},\n    '^':function(self, locals, a,b){return a(self, locals)^b(self, locals);},\n    '=':noop,\n    '===':function(self, locals, a, b){return a(self, locals)===b(self, locals);},\n    '!==':function(self, locals, a, b){return a(self, locals)!==b(self, locals);},\n    '==':function(self, locals, a,b){return a(self, locals)==b(self, locals);},\n    '!=':function(self, locals, a,b){return a(self, locals)!=b(self, locals);},\n    '<':function(self, locals, a,b){return a(self, locals)<b(self, locals);},\n    '>':function(self, locals, a,b){return a(self, locals)>b(self, locals);},\n    '<=':function(self, locals, a,b){return a(self, locals)<=b(self, locals);},\n    '>=':function(self, locals, a,b){return a(self, locals)>=b(self, locals);},\n    '&&':function(self, locals, a,b){return a(self, locals)&&b(self, locals);},\n    '||':function(self, locals, a,b){return a(self, locals)||b(self, locals);},\n    '&':function(self, locals, a,b){return a(self, locals)&b(self, locals);},\n//    '|':function(self, locals, a,b){return a|b;},\n    '|':function(self, locals, a,b){return b(self, locals)(self, locals, a(self, locals));},\n    '!':function(self, locals, a){return !a(self, locals);}\n};\nvar ESCAPE = {\"n\":\"\\n\", \"f\":\"\\f\", \"r\":\"\\r\", \"t\":\"\\t\", \"v\":\"\\v\", \"'\":\"'\", '\"':'\"'};\n\nfunction lex(text, csp){\n  var tokens = [],\n      token,\n      index = 0,\n      json = [],\n      ch,\n      lastCh = ':'; // can start regexp\n\n  while (index < text.length) {\n    ch = text.charAt(index);\n    if (is('\"\\'')) {\n      readString(ch);\n    } else if (isNumber(ch) || is('.') && isNumber(peek())) {\n      readNumber();\n    } else if (isIdent(ch)) {\n      readIdent();\n      // identifiers can only be if the preceding char was a { or ,\n      if (was('{,') && json[0]=='{' &&\n         (token=tokens[tokens.length-1])) {\n        token.json = token.text.indexOf('.') == -1;\n      }\n    } else if (is('(){}[].,;:?')) {\n      tokens.push({\n        index:index,\n        text:ch,\n        json:(was(':[,') && is('{[')) || is('}]:,')\n      });\n      if (is('{[')) json.unshift(ch);\n      if (is('}]')) json.shift();\n      index++;\n    } else if (isWhitespace(ch)) {\n      index++;\n      continue;\n    } else {\n      var ch2 = ch + peek(),\n          ch3 = ch2 + peek(2),\n          fn = OPERATORS[ch],\n          fn2 = OPERATORS[ch2],\n          fn3 = OPERATORS[ch3];\n      if (fn3) {\n        tokens.push({index:index, text:ch3, fn:fn3});\n        index += 3;\n      } else if (fn2) {\n        tokens.push({index:index, text:ch2, fn:fn2});\n        index += 2;\n      } else if (fn) {\n        tokens.push({index:index, text:ch, fn:fn, json: was('[,:') && is('+-')});\n        index += 1;\n      } else {\n        throwError(\"Unexpected next character \", index, index+1);\n      }\n    }\n    lastCh = ch;\n  }\n  return tokens;\n\n  function is(chars) {\n    return chars.indexOf(ch) != -1;\n  }\n\n  function was(chars) {\n    return chars.indexOf(lastCh) != -1;\n  }\n\n  function peek(i) {\n    var num = i || 1;\n    return index + num < text.length ? text.charAt(index + num) : false;\n  }\n  function isNumber(ch) {\n    return '0' <= ch && ch <= '9';\n  }\n  function isWhitespace(ch) {\n    return ch == ' ' || ch == '\\r' || ch == '\\t' ||\n           ch == '\\n' || ch == '\\v' || ch == '\\u00A0'; // IE treats non-breaking space as \\u00A0\n  }\n  function isIdent(ch) {\n    return 'a' <= ch && ch <= 'z' ||\n           'A' <= ch && ch <= 'Z' ||\n           '_' == ch || ch == '$';\n  }\n  function isExpOperator(ch) {\n    return ch == '-' || ch == '+' || isNumber(ch);\n  }\n\n  function throwError(error, start, end) {\n    end = end || index;\n    throw Error(\"Lexer Error: \" + error + \" at column\" +\n        (isDefined(start)\n            ? \"s \" + start +  \"-\" + index + \" [\" + text.substring(start, end) + \"]\"\n            : \" \" + end) +\n        \" in expression [\" + text + \"].\");\n  }\n\n  function readNumber() {\n    var number = \"\";\n    var start = index;\n    while (index < text.length) {\n      var ch = lowercase(text.charAt(index));\n      if (ch == '.' || isNumber(ch)) {\n        number += ch;\n      } else {\n        var peekCh = peek();\n        if (ch == 'e' && isExpOperator(peekCh)) {\n          number += ch;\n        } else if (isExpOperator(ch) &&\n            peekCh && isNumber(peekCh) &&\n            number.charAt(number.length - 1) == 'e') {\n          number += ch;\n        } else if (isExpOperator(ch) &&\n            (!peekCh || !isNumber(peekCh)) &&\n            number.charAt(number.length - 1) == 'e') {\n          throwError('Invalid exponent');\n        } else {\n          break;\n        }\n      }\n      index++;\n    }\n    number = 1 * number;\n    tokens.push({index:start, text:number, json:true,\n      fn:function() {return number;}});\n  }\n  function readIdent() {\n    var ident = \"\",\n        start = index,\n        lastDot, peekIndex, methodName, ch;\n\n    while (index < text.length) {\n      ch = text.charAt(index);\n      if (ch == '.' || isIdent(ch) || isNumber(ch)) {\n        if (ch == '.') lastDot = index;\n        ident += ch;\n      } else {\n        break;\n      }\n      index++;\n    }\n\n    //check if this is not a method invocation and if it is back out to last dot\n    if (lastDot) {\n      peekIndex = index;\n      while(peekIndex < text.length) {\n        ch = text.charAt(peekIndex);\n        if (ch == '(') {\n          methodName = ident.substr(lastDot - start + 1);\n          ident = ident.substr(0, lastDot - start);\n          index = peekIndex;\n          break;\n        }\n        if(isWhitespace(ch)) {\n          peekIndex++;\n        } else {\n          break;\n        }\n      }\n    }\n\n\n    var token = {\n      index:start,\n      text:ident\n    };\n\n    if (OPERATORS.hasOwnProperty(ident)) {\n      token.fn = token.json = OPERATORS[ident];\n    } else {\n      var getter = getterFn(ident, csp);\n      token.fn = extend(function(self, locals) {\n        return (getter(self, locals));\n      }, {\n        assign: function(self, value) {\n          return setter(self, ident, value);\n        }\n      });\n    }\n\n    tokens.push(token);\n\n    if (methodName) {\n      tokens.push({\n        index:lastDot,\n        text: '.',\n        json: false\n      });\n      tokens.push({\n        index: lastDot + 1,\n        text: methodName,\n        json: false\n      });\n    }\n  }\n\n  function readString(quote) {\n    var start = index;\n    index++;\n    var string = \"\";\n    var rawString = quote;\n    var escape = false;\n    while (index < text.length) {\n      var ch = text.charAt(index);\n      rawString += ch;\n      if (escape) {\n        if (ch == 'u') {\n          var hex = text.substring(index + 1, index + 5);\n          if (!hex.match(/[\\da-f]{4}/i))\n            throwError( \"Invalid unicode escape [\\\\u\" + hex + \"]\");\n          index += 4;\n          string += String.fromCharCode(parseInt(hex, 16));\n        } else {\n          var rep = ESCAPE[ch];\n          if (rep) {\n            string += rep;\n          } else {\n            string += ch;\n          }\n        }\n        escape = false;\n      } else if (ch == '\\\\') {\n        escape = true;\n      } else if (ch == quote) {\n        index++;\n        tokens.push({\n          index:start,\n          text:rawString,\n          string:string,\n          json:true,\n          fn:function() { return string; }\n        });\n        return;\n      } else {\n        string += ch;\n      }\n      index++;\n    }\n    throwError(\"Unterminated quote\", start);\n  }\n}\n\n/////////////////////////////////////////\n\nfunction parser(text, json, $filter, csp){\n  var ZERO = valueFn(0),\n      value,\n      tokens = lex(text, csp),\n      assignment = _assignment,\n      functionCall = _functionCall,\n      fieldAccess = _fieldAccess,\n      objectIndex = _objectIndex,\n      filterChain = _filterChain;\n\n  if(json){\n    // The extra level of aliasing is here, just in case the lexer misses something, so that\n    // we prevent any accidental execution in JSON.\n    assignment = logicalOR;\n    functionCall =\n      fieldAccess =\n      objectIndex =\n      filterChain =\n        function() { throwError(\"is not valid json\", {text:text, index:0}); };\n    value = primary();\n  } else {\n    value = statements();\n  }\n  if (tokens.length !== 0) {\n    throwError(\"is an unexpected token\", tokens[0]);\n  }\n  value.literal = !!value.literal;\n  value.constant = !!value.constant;\n  return value;\n\n  ///////////////////////////////////\n  function throwError(msg, token) {\n    throw Error(\"Syntax Error: Token '\" + token.text +\n      \"' \" + msg + \" at column \" +\n      (token.index + 1) + \" of the expression [\" +\n      text + \"] starting at [\" + text.substring(token.index) + \"].\");\n  }\n\n  function peekToken() {\n    if (tokens.length === 0)\n      throw Error(\"Unexpected end of expression: \" + text);\n    return tokens[0];\n  }\n\n  function peek(e1, e2, e3, e4) {\n    if (tokens.length > 0) {\n      var token = tokens[0];\n      var t = token.text;\n      if (t==e1 || t==e2 || t==e3 || t==e4 ||\n          (!e1 && !e2 && !e3 && !e4)) {\n        return token;\n      }\n    }\n    return false;\n  }\n\n  function expect(e1, e2, e3, e4){\n    var token = peek(e1, e2, e3, e4);\n    if (token) {\n      if (json && !token.json) {\n        throwError(\"is not valid json\", token);\n      }\n      tokens.shift();\n      return token;\n    }\n    return false;\n  }\n\n  function consume(e1){\n    if (!expect(e1)) {\n      throwError(\"is unexpected, expecting [\" + e1 + \"]\", peek());\n    }\n  }\n\n  function unaryFn(fn, right) {\n    return extend(function(self, locals) {\n      return fn(self, locals, right);\n    }, {\n      constant:right.constant\n    });\n  }\n\n  function ternaryFn(left, middle, right){\n    return extend(function(self, locals){\n      return left(self, locals) ? middle(self, locals) : right(self, locals);\n    }, {\n      constant: left.constant && middle.constant && right.constant\n    });\n  }\n  \n  function binaryFn(left, fn, right) {\n    return extend(function(self, locals) {\n      return fn(self, locals, left, right);\n    }, {\n      constant:left.constant && right.constant\n    });\n  }\n\n  function statements() {\n    var statements = [];\n    while(true) {\n      if (tokens.length > 0 && !peek('}', ')', ';', ']'))\n        statements.push(filterChain());\n      if (!expect(';')) {\n        // optimize for the common case where there is only one statement.\n        // TODO(size): maybe we should not support multiple statements?\n        return statements.length == 1\n          ? statements[0]\n          : function(self, locals){\n            var value;\n            for ( var i = 0; i < statements.length; i++) {\n              var statement = statements[i];\n              if (statement)\n                value = statement(self, locals);\n            }\n            return value;\n          };\n      }\n    }\n  }\n\n  function _filterChain() {\n    var left = expression();\n    var token;\n    while(true) {\n      if ((token = expect('|'))) {\n        left = binaryFn(left, token.fn, filter());\n      } else {\n        return left;\n      }\n    }\n  }\n\n  function filter() {\n    var token = expect();\n    var fn = $filter(token.text);\n    var argsFn = [];\n    while(true) {\n      if ((token = expect(':'))) {\n        argsFn.push(expression());\n      } else {\n        var fnInvoke = function(self, locals, input){\n          var args = [input];\n          for ( var i = 0; i < argsFn.length; i++) {\n            args.push(argsFn[i](self, locals));\n          }\n          return fn.apply(self, args);\n        };\n        return function() {\n          return fnInvoke;\n        };\n      }\n    }\n  }\n\n  function expression() {\n    return assignment();\n  }\n\n  function _assignment() {\n    var left = ternary();\n    var right;\n    var token;\n    if ((token = expect('='))) {\n      if (!left.assign) {\n        throwError(\"implies assignment but [\" +\n          text.substring(0, token.index) + \"] can not be assigned to\", token);\n      }\n      right = ternary();\n      return function(scope, locals){\n        return left.assign(scope, right(scope, locals), locals);\n      };\n    } else {\n      return left;\n    }\n  }\n\n  function ternary() {\n    var left = logicalOR();\n    var middle;\n    var token;\n    if((token = expect('?'))){\n      middle = ternary();\n      if((token = expect(':'))){\n        return ternaryFn(left, middle, ternary());\n      }\n      else {\n        throwError('expected :', token);\n      }\n    }\n    else {\n      return left;\n    }\n  }\n  \n  function logicalOR() {\n    var left = logicalAND();\n    var token;\n    while(true) {\n      if ((token = expect('||'))) {\n        left = binaryFn(left, token.fn, logicalAND());\n      } else {\n        return left;\n      }\n    }\n  }\n\n  function logicalAND() {\n    var left = equality();\n    var token;\n    if ((token = expect('&&'))) {\n      left = binaryFn(left, token.fn, logicalAND());\n    }\n    return left;\n  }\n\n  function equality() {\n    var left = relational();\n    var token;\n    if ((token = expect('==','!=','===','!=='))) {\n      left = binaryFn(left, token.fn, equality());\n    }\n    return left;\n  }\n\n  function relational() {\n    var left = additive();\n    var token;\n    if ((token = expect('<', '>', '<=', '>='))) {\n      left = binaryFn(left, token.fn, relational());\n    }\n    return left;\n  }\n\n  function additive() {\n    var left = multiplicative();\n    var token;\n    while ((token = expect('+','-'))) {\n      left = binaryFn(left, token.fn, multiplicative());\n    }\n    return left;\n  }\n\n  function multiplicative() {\n    var left = unary();\n    var token;\n    while ((token = expect('*','/','%'))) {\n      left = binaryFn(left, token.fn, unary());\n    }\n    return left;\n  }\n\n  function unary() {\n    var token;\n    if (expect('+')) {\n      return primary();\n    } else if ((token = expect('-'))) {\n      return binaryFn(ZERO, token.fn, unary());\n    } else if ((token = expect('!'))) {\n      return unaryFn(token.fn, unary());\n    } else {\n      return primary();\n    }\n  }\n\n\n  function primary() {\n    var primary;\n    if (expect('(')) {\n      primary = filterChain();\n      consume(')');\n    } else if (expect('[')) {\n      primary = arrayDeclaration();\n    } else if (expect('{')) {\n      primary = object();\n    } else {\n      var token = expect();\n      primary = token.fn;\n      if (!primary) {\n        throwError(\"not a primary expression\", token);\n      }\n      if (token.json) {\n        primary.constant = primary.literal = true;\n      }\n    }\n\n    var next, context;\n    while ((next = expect('(', '[', '.'))) {\n      if (next.text === '(') {\n        primary = functionCall(primary, context);\n        context = null;\n      } else if (next.text === '[') {\n        context = primary;\n        primary = objectIndex(primary);\n      } else if (next.text === '.') {\n        context = primary;\n        primary = fieldAccess(primary);\n      } else {\n        throwError(\"IMPOSSIBLE\");\n      }\n    }\n    return primary;\n  }\n\n  function _fieldAccess(object) {\n    var field = expect().text;\n    var getter = getterFn(field, csp);\n    return extend(\n        function(scope, locals, self) {\n          return getter(self || object(scope, locals), locals);\n        },\n        {\n          assign:function(scope, value, locals) {\n            return setter(object(scope, locals), field, value);\n          }\n        }\n    );\n  }\n\n  function _objectIndex(obj) {\n    var indexFn = expression();\n    consume(']');\n    return extend(\n      function(self, locals){\n        var o = obj(self, locals),\n            i = indexFn(self, locals),\n            v, p;\n\n        if (!o) return undefined;\n        v = o[i];\n        if (v && v.then) {\n          p = v;\n          if (!('$$v' in v)) {\n            p.$$v = undefined;\n            p.then(function(val) { p.$$v = val; });\n          }\n          v = v.$$v;\n        }\n        return v;\n      }, {\n        assign:function(self, value, locals){\n          return obj(self, locals)[indexFn(self, locals)] = value;\n        }\n      });\n  }\n\n  function _functionCall(fn, contextGetter) {\n    var argsFn = [];\n    if (peekToken().text != ')') {\n      do {\n        argsFn.push(expression());\n      } while (expect(','));\n    }\n    consume(')');\n    return function(scope, locals){\n      var args = [],\n          context = contextGetter ? contextGetter(scope, locals) : scope;\n\n      for ( var i = 0; i < argsFn.length; i++) {\n        args.push(argsFn[i](scope, locals));\n      }\n      var fnPtr = fn(scope, locals, context) || noop;\n      // IE stupidity!\n      return fnPtr.apply\n          ? fnPtr.apply(context, args)\n          : fnPtr(args[0], args[1], args[2], args[3], args[4]);\n    };\n  }\n\n  // This is used with json array declaration\n  function arrayDeclaration () {\n    var elementFns = [];\n    var allConstant = true;\n    if (peekToken().text != ']') {\n      do {\n        var elementFn = expression();\n        elementFns.push(elementFn);\n        if (!elementFn.constant) {\n          allConstant = false;\n        }\n      } while (expect(','));\n    }\n    consume(']');\n    return extend(function(self, locals){\n      var array = [];\n      for ( var i = 0; i < elementFns.length; i++) {\n        array.push(elementFns[i](self, locals));\n      }\n      return array;\n    }, {\n      literal:true,\n      constant:allConstant\n    });\n  }\n\n  function object () {\n    var keyValues = [];\n    var allConstant = true;\n    if (peekToken().text != '}') {\n      do {\n        var token = expect(),\n        key = token.string || token.text;\n        consume(\":\");\n        var value = expression();\n        keyValues.push({key:key, value:value});\n        if (!value.constant) {\n          allConstant = false;\n        }\n      } while (expect(','));\n    }\n    consume('}');\n    return extend(function(self, locals){\n      var object = {};\n      for ( var i = 0; i < keyValues.length; i++) {\n        var keyValue = keyValues[i];\n        object[keyValue.key] = keyValue.value(self, locals);\n      }\n      return object;\n    }, {\n      literal:true,\n      constant:allConstant\n    });\n  }\n}\n\n//////////////////////////////////////////////////\n// Parser helper functions\n//////////////////////////////////////////////////\n\nfunction setter(obj, path, setValue) {\n  var element = path.split('.');\n  for (var i = 0; element.length > 1; i++) {\n    var key = element.shift();\n    var propertyObj = obj[key];\n    if (!propertyObj) {\n      propertyObj = {};\n      obj[key] = propertyObj;\n    }\n    obj = propertyObj;\n  }\n  obj[element.shift()] = setValue;\n  return setValue;\n}\n\n/**\n * Return the value accessible from the object by path. Any undefined traversals are ignored\n * @param {Object} obj starting object\n * @param {string} path path to traverse\n * @param {boolean=true} bindFnToScope\n * @returns value as accessible by path\n */\n//TODO(misko): this function needs to be removed\nfunction getter(obj, path, bindFnToScope) {\n  if (!path) return obj;\n  var keys = path.split('.');\n  var key;\n  var lastInstance = obj;\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    key = keys[i];\n    if (obj) {\n      obj = (lastInstance = obj)[key];\n    }\n  }\n  if (!bindFnToScope && isFunction(obj)) {\n    return bind(lastInstance, obj);\n  }\n  return obj;\n}\n\nvar getterFnCache = {};\n\n/**\n * Implementation of the \"Black Hole\" variant from:\n * - http://jsperf.com/angularjs-parse-getter/4\n * - http://jsperf.com/path-evaluation-simplified/7\n */\nfunction cspSafeGetterFn(key0, key1, key2, key3, key4) {\n  return function(scope, locals) {\n    var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope,\n        promise;\n\n    if (pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key0];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key1 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key1];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key2 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key2];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key3 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key3];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key4 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key4];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    return pathVal;\n  };\n}\n\nfunction getterFn(path, csp) {\n  if (getterFnCache.hasOwnProperty(path)) {\n    return getterFnCache[path];\n  }\n\n  var pathKeys = path.split('.'),\n      pathKeysLength = pathKeys.length,\n      fn;\n\n  if (csp) {\n    fn = (pathKeysLength < 6)\n        ? cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4])\n        : function(scope, locals) {\n          var i = 0, val;\n          do {\n            val = cspSafeGetterFn(\n                    pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++]\n                  )(scope, locals);\n\n            locals = undefined; // clear after first iteration\n            scope = val;\n          } while (i < pathKeysLength);\n          return val;\n        }\n  } else {\n    var code = 'var l, fn, p;\\n';\n    forEach(pathKeys, function(key, index) {\n      code += 'if(s === null || s === undefined) return s;\\n' +\n              'l=s;\\n' +\n              's='+ (index\n                      // we simply dereference 's' on any .dot notation\n                      ? 's'\n                      // but if we are first then we check locals first, and if so read it first\n                      : '((k&&k.hasOwnProperty(\"' + key + '\"))?k:s)') + '[\"' + key + '\"]' + ';\\n' +\n              'if (s && s.then) {\\n' +\n                ' if (!(\"$$v\" in s)) {\\n' +\n                  ' p=s;\\n' +\n                  ' p.$$v = undefined;\\n' +\n                  ' p.then(function(v) {p.$$v=v;});\\n' +\n                  '}\\n' +\n                ' s=s.$$v\\n' +\n              '}\\n';\n    });\n    code += 'return s;';\n    fn = Function('s', 'k', code); // s=scope, k=locals\n    fn.toString = function() { return code; };\n  }\n\n  return getterFnCache[path] = fn;\n}\n\n///////////////////////////////////\n\n/**\n * @ngdoc function\n * @name ng.$parse\n * @function\n *\n * @description\n *\n * Converts Angular {@link guide/expression expression} into a function.\n *\n * <pre>\n *   var getter = $parse('user.name');\n *   var setter = getter.assign;\n *   var context = {user:{name:'angular'}};\n *   var locals = {user:{name:'local'}};\n *\n *   expect(getter(context)).toEqual('angular');\n *   setter(context, 'newValue');\n *   expect(context.user.name).toEqual('newValue');\n *   expect(getter(context, locals)).toEqual('local');\n * </pre>\n *\n *\n * @param {string} expression String expression to compile.\n * @returns {function(context, locals)} a function which represents the compiled expression:\n *\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n *      are evaluated against (typically a scope object).\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n *      `context`.\n *\n *    The returned function also has the following properties:\n *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n *        literal.\n *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n *        constant literals.\n *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n *        set to a function to change its value on the given context.\n *\n */\nfunction $ParseProvider() {\n  var cache = {};\n  this.$get = ['$filter', '$sniffer', function($filter, $sniffer) {\n    return function(exp) {\n      switch(typeof exp) {\n        case 'string':\n          return cache.hasOwnProperty(exp)\n            ? cache[exp]\n            : cache[exp] =  parser(exp, false, $filter, $sniffer.csp);\n        case 'function':\n          return exp;\n        default:\n          return noop;\n      }\n    };\n  }];\n}\n\n/**\n * @ngdoc service\n * @name ng.$q\n * @requires $rootScope\n *\n * @description\n * A promise/deferred implementation inspired by [Kris Kowal's Q](https://github.com/kriskowal/q).\n *\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n * interface for interacting with an object that represents the result of an action that is\n * performed asynchronously, and may or may not be finished at any given point in time.\n *\n * From the perspective of dealing with error handling, deferred and promise APIs are to\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n *\n * <pre>\n *   // for the purpose of this example let's assume that variables `$q` and `scope` are\n *   // available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     var deferred = $q.defer();\n *\n *     setTimeout(function() {\n *       // since this fn executes async in a future turn of the event loop, we need to wrap\n *       // our code into an $apply call so that the model changes are properly observed.\n *       scope.$apply(function() {\n *         if (okToGreet(name)) {\n *           deferred.resolve('Hello, ' + name + '!');\n *         } else {\n *           deferred.reject('Greeting ' + name + ' is not allowed.');\n *         }\n *       });\n *     }, 1000);\n *\n *     return deferred.promise;\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   });\n * </pre>\n *\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n * comes in the way of\n * [guarantees that promise and deferred APIs make](https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md).\n *\n * Additionally the promise api allows for composition that is very hard to do with the\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n * section on serial or parallel joining of promises.\n *\n *\n * # The Deferred API\n *\n * A new instance of deferred is constructed by calling `$q.defer()`.\n *\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n * that can be used for signaling the successful or unsuccessful completion of the task.\n *\n * **Methods**\n *\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n *   constructed via `$q.reject`, the promise will be rejected instead.\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n *   resolving it with a rejection constructed via `$q.reject`.\n *\n * **Properties**\n *\n * - promise – `{Promise}` – promise object associated with this deferred.\n *\n *\n * # The Promise API\n *\n * A new promise instance is created when a deferred instance is created and can be retrieved by\n * calling `deferred.promise`.\n *\n * The purpose of the promise object is to allow for interested parties to get access to the result\n * of the deferred task when it completes.\n *\n * **Methods**\n *\n * - `then(successCallback, errorCallback)` – regardless of when the promise was or will be resolved\n *   or rejected calls one of the success or error callbacks asynchronously as soon as the result\n *   is available. The callbacks are called with a single argument the result or rejection reason.\n *\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\n *   `successCallback` or `errorCallback`.\n *\n * - `always(callback)` – allows you to observe either the fulfillment or rejection of a promise,\n *   but to do so without modifying the final value. This is useful to release resources or do some\n *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n *   more information.\n *\n * # Chaining promises\n *\n * Because calling `then` api of a promise returns a new derived promise, it is easily possible\n * to create a chain of promises:\n *\n * <pre>\n *   promiseB = promiseA.then(function(result) {\n *     return result + 1;\n *   });\n *\n *   // promiseB will be resolved immediately after promiseA is resolved and its value will be\n *   // the result of promiseA incremented by 1\n * </pre>\n *\n * It is possible to create chains of any length and since a promise can be resolved with another\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n * the promises at any point in the chain. This makes it possible to implement powerful apis like\n * $http's response interceptors.\n *\n *\n * # Differences between Kris Kowal's Q and $q\n *\n *  There are three main differences:\n *\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n * - $q promises are recognized by the templating engine in angular, which means that in templates\n *   you can treat promises attached to a scope as if they were the resulting values.\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n *   all the important functionality needed for common async tasks.\n * \n *  # Testing\n * \n *  <pre>\n *    it('should simulate promise', inject(function($q, $rootScope) {\n *      var deferred = $q.defer();\n *      var promise = deferred.promise;\n *      var resolvedValue;\n * \n *      promise.then(function(value) { resolvedValue = value; });\n *      expect(resolvedValue).toBeUndefined();\n * \n *      // Simulate resolving of promise\n *      deferred.resolve(123);\n *      // Note that the 'then' function does not get called synchronously.\n *      // This is because we want the promise API to always be async, whether or not\n *      // it got called synchronously or asynchronously.\n *      expect(resolvedValue).toBeUndefined();\n * \n *      // Propagate promise resolution to 'then' functions using $apply().\n *      $rootScope.$apply();\n *      expect(resolvedValue).toEqual(123);\n *    });\n *  </pre>\n */\nfunction $QProvider() {\n\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $rootScope.$evalAsync(callback);\n    }, $exceptionHandler);\n  }];\n}\n\n\n/**\n * Constructs a promise manager.\n *\n * @param {function(function)} nextTick Function for executing functions in the next turn.\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n *     debugging purposes.\n * @returns {object} Promise manager.\n */\nfunction qFactory(nextTick, exceptionHandler) {\n\n  /**\n   * @ngdoc\n   * @name ng.$q#defer\n   * @methodOf ng.$q\n   * @description\n   * Creates a `Deferred` object which represents a task which will finish in the future.\n   *\n   * @returns {Deferred} Returns a new instance of deferred.\n   */\n  var defer = function() {\n    var pending = [],\n        value, deferred;\n\n    deferred = {\n\n      resolve: function(val) {\n        if (pending) {\n          var callbacks = pending;\n          pending = undefined;\n          value = ref(val);\n\n          if (callbacks.length) {\n            nextTick(function() {\n              var callback;\n              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n                callback = callbacks[i];\n                value.then(callback[0], callback[1]);\n              }\n            });\n          }\n        }\n      },\n\n\n      reject: function(reason) {\n        deferred.resolve(reject(reason));\n      },\n\n\n      promise: {\n        then: function(callback, errback) {\n          var result = defer();\n\n          var wrappedCallback = function(value) {\n            try {\n              result.resolve((callback || defaultCallback)(value));\n            } catch(e) {\n              exceptionHandler(e);\n              result.reject(e);\n            }\n          };\n\n          var wrappedErrback = function(reason) {\n            try {\n              result.resolve((errback || defaultErrback)(reason));\n            } catch(e) {\n              exceptionHandler(e);\n              result.reject(e);\n            }\n          };\n\n          if (pending) {\n            pending.push([wrappedCallback, wrappedErrback]);\n          } else {\n            value.then(wrappedCallback, wrappedErrback);\n          }\n\n          return result.promise;\n        },\n        always: function(callback) {\n          \n          function makePromise(value, resolved) {\n            var result = defer();\n            if (resolved) {\n              result.resolve(value);\n            } else {\n              result.reject(value);\n            }\n            return result.promise;\n          }\n          \n          function handleCallback(value, isResolved) {\n            var callbackOutput = null;            \n            try {\n              callbackOutput = (callback ||defaultCallback)();\n            } catch(e) {\n              return makePromise(e, false);\n            }            \n            if (callbackOutput && callbackOutput.then) {\n              return callbackOutput.then(function() {\n                return makePromise(value, isResolved);\n              }, function(error) {\n                return makePromise(error, false);\n              });\n            } else {\n              return makePromise(value, isResolved);\n            }\n          }\n          \n          return this.then(function(value) {\n            return handleCallback(value, true);\n          }, function(error) {\n            return handleCallback(error, false);\n          });\n        }\n      }\n    };\n\n    return deferred;\n  };\n\n\n  var ref = function(value) {\n    if (value && value.then) return value;\n    return {\n      then: function(callback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve(callback(value));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#reject\n   * @methodOf ng.$q\n   * @description\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n   * a promise chain, you don't need to worry about it.\n   *\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n   * a promise error callback and you want to forward the error to the promise derived from the\n   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n   * `reject`.\n   *\n   * <pre>\n   *   promiseB = promiseA.then(function(result) {\n   *     // success: do something and resolve promiseB\n   *     //          with the old or a new result\n   *     return result;\n   *   }, function(reason) {\n   *     // error: handle the error if possible and\n   *     //        resolve promiseB with newPromiseOrValue,\n   *     //        otherwise forward the rejection to promiseB\n   *     if (canHandle(reason)) {\n   *      // handle the error and recover\n   *      return newPromiseOrValue;\n   *     }\n   *     return $q.reject(reason);\n   *   });\n   * </pre>\n   *\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n   */\n  var reject = function(reason) {\n    return {\n      then: function(callback, errback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve((errback || defaultErrback)(reason));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#when\n   * @methodOf ng.$q\n   * @description\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\n   * the promise comes from a source that can't be trusted.\n   *\n   * @param {*} value Value or a promise\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n  var when = function(value, callback, errback) {\n    var result = defer(),\n        done;\n\n    var wrappedCallback = function(value) {\n      try {\n        return (callback || defaultCallback)(value);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    var wrappedErrback = function(reason) {\n      try {\n        return (errback || defaultErrback)(reason);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    nextTick(function() {\n      ref(value).then(function(value) {\n        if (done) return;\n        done = true;\n        result.resolve(ref(value).then(wrappedCallback, wrappedErrback));\n      }, function(reason) {\n        if (done) return;\n        done = true;\n        result.resolve(wrappedErrback(reason));\n      });\n    });\n\n    return result.promise;\n  };\n\n\n  function defaultCallback(value) {\n    return value;\n  }\n\n\n  function defaultErrback(reason) {\n    return reject(reason);\n  }\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#all\n   * @methodOf ng.$q\n   * @description\n   * Combines multiple promises into a single promise that is resolved when all of the input\n   * promises are resolved.\n   *\n   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\n   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,\n   *   each value corresponding to the promise at the same index/key in the `promises` array/hash. If any of\n   *   the promises is resolved with a rejection, this resulting promise will be resolved with the\n   *   same rejection.\n   */\n  function all(promises) {\n    var deferred = defer(),\n        counter = 0,\n        results = isArray(promises) ? [] : {};\n\n    forEach(promises, function(promise, key) {\n      counter++;\n      ref(promise).then(function(value) {\n        if (results.hasOwnProperty(key)) return;\n        results[key] = value;\n        if (!(--counter)) deferred.resolve(results);\n      }, function(reason) {\n        if (results.hasOwnProperty(key)) return;\n        deferred.reject(reason);\n      });\n    });\n\n    if (counter === 0) {\n      deferred.resolve(results);\n    }\n\n    return deferred.promise;\n  }\n\n  return {\n    defer: defer,\n    reject: reject,\n    when: when,\n    all: all\n  };\n}\n\n/**\n * @ngdoc object\n * @name ng.$routeProvider\n * @function\n *\n * @description\n *\n * Used for configuring routes. See {@link ng.$route $route} for an example.\n */\nfunction $RouteProvider(){\n  var routes = {};\n\n  /**\n   * @ngdoc method\n   * @name ng.$routeProvider#when\n   * @methodOf ng.$routeProvider\n   *\n   * @param {string} path Route path (matched against `$location.path`). If `$location.path`\n   *    contains redundant trailing slash or is missing one, the route will still match and the\n   *    `$location.path` will be updated to add or drop the trailing slash to exactly match the\n   *    route definition.\n   *\n   *      * `path` can contain named groups starting with a colon (`:name`). All characters up\n   *        to the next slash are matched and stored in `$routeParams` under the given `name`\n   *        when the route matches.\n   *      * `path` can contain named groups starting with a star (`*name`). All characters are\n   *        eagerly stored in `$routeParams` under the given `name` when the route matches.\n   *\n   *    For example, routes like `/color/:color/largecode/*largecode/edit` will match\n   *    `/color/brown/largecode/code/with/slashs/edit` and extract:\n   *\n   *      * `color: brown`\n   *      * `largecode: code/with/slashs`.\n   *\n   *\n   * @param {Object} route Mapping information to be assigned to `$route.current` on route\n   *    match.\n   *\n   *    Object properties:\n   *\n   *    - `controller` – `{(string|function()=}` – Controller fn that should be associated with newly\n   *      created scope or the name of a {@link angular.Module#controller registered controller}\n   *      if passed as a string.\n   *    - `controllerAs` – `{string=}` – A controller alias name. If present the controller will be\n   *      published to scope under the `controllerAs` name.\n   *    - `template` – `{string=|function()=}` – html template as a string or function that returns\n   *      an html template as a string which should be used by {@link ng.directive:ngView ngView} or\n   *      {@link ng.directive:ngInclude ngInclude} directives.\n   *      This property takes precedence over `templateUrl`.\n   *\n   *      If `template` is a function, it will be called with the following parameters:\n   *\n   *      - `{Array.<Object>}` - route parameters extracted from the current\n   *        `$location.path()` by applying the current route\n   *\n   *    - `templateUrl` – `{string=|function()=}` – path or function that returns a path to an html\n   *      template that should be used by {@link ng.directive:ngView ngView}.\n   *\n   *      If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *      - `{Array.<Object>}` - route parameters extracted from the current\n   *        `$location.path()` by applying the current route\n   *\n   *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n   *      be injected into the controller. If any of these dependencies are promises, they will be\n   *      resolved and converted to a value before the controller is instantiated and the\n   *      `$routeChangeSuccess` event is fired. The map object is:\n   *\n   *      - `key` – `{string}`: a name of a dependency to be injected into the controller.\n   *      - `factory` - `{string|function}`: If `string` then it is an alias for a service.\n   *        Otherwise if function, then it is {@link api/AUTO.$injector#invoke injected}\n   *        and the return value is treated as the dependency. If the result is a promise, it is resolved\n   *        before its value is injected into the controller.\n   *\n   *    - `redirectTo` – {(string|function())=} – value to update\n   *      {@link ng.$location $location} path with and trigger route redirection.\n   *\n   *      If `redirectTo` is a function, it will be called with the following parameters:\n   *\n   *      - `{Object.<string>}` - route parameters extracted from the current\n   *        `$location.path()` by applying the current route templateUrl.\n   *      - `{string}` - current `$location.path()`\n   *      - `{Object}` - current `$location.search()`\n   *\n   *      The custom `redirectTo` function is expected to return a string which will be used\n   *      to update `$location.path()` and `$location.search()`.\n   *\n   *    - `[reloadOnSearch=true]` - {boolean=} - reload route when only $location.search()\n   *    changes.\n   *\n   *      If the option is set to `false` and url in the browser changes, then\n   *      `$routeUpdate` event is broadcasted on the root scope.\n   *\n   *    - `[caseInsensitiveMatch=false]` - {boolean=} - match routes without being case sensitive\n   *\n   *      If the option is set to `true`, then the particular route can be matched without being\n   *      case sensitive\n   *\n   * @returns {Object} self\n   *\n   * @description\n   * Adds a new route definition to the `$route` service.\n   */\n  this.when = function(path, route) {\n    routes[path] = extend({reloadOnSearch: true, caseInsensitiveMatch: false}, route);\n\n    // create redirection for trailing slashes\n    if (path) {\n      var redirectPath = (path[path.length-1] == '/')\n          ? path.substr(0, path.length-1)\n          : path +'/';\n\n      routes[redirectPath] = {redirectTo: path};\n    }\n\n    return this;\n  };\n\n  /**\n   * @ngdoc method\n   * @name ng.$routeProvider#otherwise\n   * @methodOf ng.$routeProvider\n   *\n   * @description\n   * Sets route definition that will be used on route change when no other route definition\n   * is matched.\n   *\n   * @param {Object} params Mapping information to be assigned to `$route.current`.\n   * @returns {Object} self\n   */\n  this.otherwise = function(params) {\n    this.when(null, params);\n    return this;\n  };\n\n\n  this.$get = ['$rootScope', '$location', '$routeParams', '$q', '$injector', '$http', '$templateCache',\n      function( $rootScope,   $location,   $routeParams,   $q,   $injector,   $http,   $templateCache) {\n\n    /**\n     * @ngdoc object\n     * @name ng.$route\n     * @requires $location\n     * @requires $routeParams\n     *\n     * @property {Object} current Reference to the current route definition.\n     * The route definition contains:\n     *\n     *   - `controller`: The controller constructor as define in route definition.\n     *   - `locals`: A map of locals which is used by {@link ng.$controller $controller} service for\n     *     controller instantiation. The `locals` contain\n     *     the resolved values of the `resolve` map. Additionally the `locals` also contain:\n     *\n     *     - `$scope` - The current route scope.\n     *     - `$template` - The current route template HTML.\n     *\n     * @property {Array.<Object>} routes Array of all configured routes.\n     *\n     * @description\n     * Is used for deep-linking URLs to controllers and views (HTML partials).\n     * It watches `$location.url()` and tries to map the path to an existing route definition.\n     *\n     * You can define routes through {@link ng.$routeProvider $routeProvider}'s API.\n     *\n     * The `$route` service is typically used in conjunction with {@link ng.directive:ngView ngView}\n     * directive and the {@link ng.$routeParams $routeParams} service.\n     *\n     * @example\n       This example shows how changing the URL hash causes the `$route` to match a route against the\n       URL, and the `ngView` pulls in the partial.\n\n       Note that this example is using {@link ng.directive:script inlined templates}\n       to get it working on jsfiddle as well.\n\n     <example module=\"ngView\">\n       <file name=\"index.html\">\n         <div ng-controller=\"MainCntl\">\n           Choose:\n           <a href=\"Book/Moby\">Moby</a> |\n           <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n           <a href=\"Book/Gatsby\">Gatsby</a> |\n           <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n           <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n           <div ng-view></div>\n           <hr />\n\n           <pre>$location.path() = {{$location.path()}}</pre>\n           <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>\n           <pre>$route.current.params = {{$route.current.params}}</pre>\n           <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>\n           <pre>$routeParams = {{$routeParams}}</pre>\n         </div>\n       </file>\n\n       <file name=\"book.html\">\n         controller: {{name}}<br />\n         Book Id: {{params.bookId}}<br />\n       </file>\n\n       <file name=\"chapter.html\">\n         controller: {{name}}<br />\n         Book Id: {{params.bookId}}<br />\n         Chapter Id: {{params.chapterId}}\n       </file>\n\n       <file name=\"script.js\">\n         angular.module('ngView', [], function($routeProvider, $locationProvider) {\n           $routeProvider.when('/Book/:bookId', {\n             templateUrl: 'book.html',\n             controller: BookCntl,\n             resolve: {\n               // I will cause a 1 second delay\n               delay: function($q, $timeout) {\n                 var delay = $q.defer();\n                 $timeout(delay.resolve, 1000);\n                 return delay.promise;\n               }\n             }\n           });\n           $routeProvider.when('/Book/:bookId/ch/:chapterId', {\n             templateUrl: 'chapter.html',\n             controller: ChapterCntl\n           });\n\n           // configure html5 to get links working on jsfiddle\n           $locationProvider.html5Mode(true);\n         });\n\n         function MainCntl($scope, $route, $routeParams, $location) {\n           $scope.$route = $route;\n           $scope.$location = $location;\n           $scope.$routeParams = $routeParams;\n         }\n\n         function BookCntl($scope, $routeParams) {\n           $scope.name = \"BookCntl\";\n           $scope.params = $routeParams;\n         }\n\n         function ChapterCntl($scope, $routeParams) {\n           $scope.name = \"ChapterCntl\";\n           $scope.params = $routeParams;\n         }\n       </file>\n\n       <file name=\"scenario.js\">\n         it('should load and compile correct template', function() {\n           element('a:contains(\"Moby: Ch1\")').click();\n           var content = element('.doc-example-live [ng-view]').text();\n           expect(content).toMatch(/controller\\: ChapterCntl/);\n           expect(content).toMatch(/Book Id\\: Moby/);\n           expect(content).toMatch(/Chapter Id\\: 1/);\n\n           element('a:contains(\"Scarlet\")').click();\n           sleep(2); // promises are not part of scenario waiting\n           content = element('.doc-example-live [ng-view]').text();\n           expect(content).toMatch(/controller\\: BookCntl/);\n           expect(content).toMatch(/Book Id\\: Scarlet/);\n         });\n       </file>\n     </example>\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeStart\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted before a route change. At this  point the route services starts\n     * resolving all of the dependencies needed for the route change to occurs.\n     * Typically this involves fetching the view template as well as any dependencies\n     * defined in `resolve` route property. Once  all of the dependencies are resolved\n     * `$routeChangeSuccess` is fired.\n     *\n     * @param {Route} next Future route information.\n     * @param {Route} current Current route information.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeSuccess\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted after a route dependencies are resolved.\n     * {@link ng.directive:ngView ngView} listens for the directive\n     * to instantiate the controller and render the view.\n     *\n     * @param {Object} angularEvent Synthetic event object.\n     * @param {Route} current Current route information.\n     * @param {Route|Undefined} previous Previous route information, or undefined if current is first route entered.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeError\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted if any of the resolve promises are rejected.\n     *\n     * @param {Route} current Current route information.\n     * @param {Route} previous Previous route information.\n     * @param {Route} rejection Rejection of the promise. Usually the error of the failed promise.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeUpdate\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     *\n     * The `reloadOnSearch` property has been set to false, and we are reusing the same\n     * instance of the Controller.\n     */\n\n    var forceReload = false,\n        $route = {\n          routes: routes,\n\n          /**\n           * @ngdoc method\n           * @name ng.$route#reload\n           * @methodOf ng.$route\n           *\n           * @description\n           * Causes `$route` service to reload the current route even if\n           * {@link ng.$location $location} hasn't changed.\n           *\n           * As a result of that, {@link ng.directive:ngView ngView}\n           * creates new scope, reinstantiates the controller.\n           */\n          reload: function() {\n            forceReload = true;\n            $rootScope.$evalAsync(updateRoute);\n          }\n        };\n\n    $rootScope.$on('$locationChangeSuccess', updateRoute);\n\n    return $route;\n\n    /////////////////////////////////////////////////////\n\n    /**\n     * @param on {string} current url\n     * @param when {string} route when template to match the url against\n     * @param whenProperties {Object} properties to define when's matching behavior\n     * @return {?Object}\n     */\n    function switchRouteMatcher(on, when, whenProperties) {\n      // TODO(i): this code is convoluted and inefficient, we should construct the route matching\n      //   regex only once and then reuse it\n\n      // Escape regexp special characters.\n      when = '^' + when.replace(/[-\\/\\\\^$:*+?.()|[\\]{}]/g, \"\\\\$&\") + '$';\n\n      var regex = '',\n          params = [],\n          dst = {};\n\n      var re = /\\\\([:*])(\\w+)/g,\n          paramMatch,\n          lastMatchedIndex = 0;\n\n      while ((paramMatch = re.exec(when)) !== null) {\n        // Find each :param in `when` and replace it with a capturing group.\n        // Append all other sections of when unchanged.\n        regex += when.slice(lastMatchedIndex, paramMatch.index);\n        switch(paramMatch[1]) {\n          case ':':\n            regex += '([^\\\\/]*)';\n            break;\n          case '*':\n            regex += '(.*)';\n            break;\n        }\n        params.push(paramMatch[2]);\n        lastMatchedIndex = re.lastIndex;\n      }\n      // Append trailing path part.\n      regex += when.substr(lastMatchedIndex);\n\n      var match = on.match(new RegExp(regex, whenProperties.caseInsensitiveMatch ? 'i' : ''));\n      if (match) {\n        forEach(params, function(name, index) {\n          dst[name] = match[index + 1];\n        });\n      }\n      return match ? dst : null;\n    }\n\n    function updateRoute() {\n      var next = parseRoute(),\n          last = $route.current;\n\n      if (next && last && next.$$route === last.$$route\n          && equals(next.pathParams, last.pathParams) && !next.reloadOnSearch && !forceReload) {\n        last.params = next.params;\n        copy(last.params, $routeParams);\n        $rootScope.$broadcast('$routeUpdate', last);\n      } else if (next || last) {\n        forceReload = false;\n        $rootScope.$broadcast('$routeChangeStart', next, last);\n        $route.current = next;\n        if (next) {\n          if (next.redirectTo) {\n            if (isString(next.redirectTo)) {\n              $location.path(interpolate(next.redirectTo, next.params)).search(next.params)\n                       .replace();\n            } else {\n              $location.url(next.redirectTo(next.pathParams, $location.path(), $location.search()))\n                       .replace();\n            }\n          }\n        }\n\n        $q.when(next).\n          then(function() {\n            if (next) {\n              var locals = extend({}, next.resolve),\n                  template;\n\n              forEach(locals, function(value, key) {\n                locals[key] = isString(value) ? $injector.get(value) : $injector.invoke(value);\n              });\n\n              if (isDefined(template = next.template)) {\n                if (isFunction(template)) {\n                  template = template(next.params);\n                }\n              } else if (isDefined(template = next.templateUrl)) {\n                if (isFunction(template)) {\n                  template = template(next.params);\n                }\n                if (isDefined(template)) {\n                  next.loadedTemplateUrl = template;\n                  template = $http.get(template, {cache: $templateCache}).\n                      then(function(response) { return response.data; });\n                }\n              }\n              if (isDefined(template)) {\n                locals['$template'] = template;\n              }\n              return $q.all(locals);\n            }\n          }).\n          // after route change\n          then(function(locals) {\n            if (next == $route.current) {\n              if (next) {\n                next.locals = locals;\n                copy(next.params, $routeParams);\n              }\n              $rootScope.$broadcast('$routeChangeSuccess', next, last);\n            }\n          }, function(error) {\n            if (next == $route.current) {\n              $rootScope.$broadcast('$routeChangeError', next, last, error);\n            }\n          });\n      }\n    }\n\n\n    /**\n     * @returns the current active route, by matching it against the URL\n     */\n    function parseRoute() {\n      // Match a route\n      var params, match;\n      forEach(routes, function(route, path) {\n        if (!match && (params = switchRouteMatcher($location.path(), path, route))) {\n          match = inherit(route, {\n            params: extend({}, $location.search(), params),\n            pathParams: params});\n          match.$$route = route;\n        }\n      });\n      // No route matched; fallback to \"otherwise\" route\n      return match || routes[null] && inherit(routes[null], {params: {}, pathParams:{}});\n    }\n\n    /**\n     * @returns interpolation of the redirect path with the parameters\n     */\n    function interpolate(string, params) {\n      var result = [];\n      forEach((string||'').split(':'), function(segment, i) {\n        if (i == 0) {\n          result.push(segment);\n        } else {\n          var segmentMatch = segment.match(/(\\w+)(.*)/);\n          var key = segmentMatch[1];\n          result.push(params[key]);\n          result.push(segmentMatch[2] || '');\n          delete params[key];\n        }\n      });\n      return result.join('');\n    }\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$routeParams\n * @requires $route\n *\n * @description\n * Current set of route parameters. The route parameters are a combination of the\n * {@link ng.$location $location} `search()`, and `path()`. The `path` parameters\n * are extracted when the {@link ng.$route $route} path is matched.\n *\n * In case of parameter name collision, `path` params take precedence over `search` params.\n *\n * The service guarantees that the identity of the `$routeParams` object will remain unchanged\n * (but its properties will likely change) even when a route change occurs.\n *\n * @example\n * <pre>\n *  // Given:\n *  // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby\n *  // Route: /Chapter/:chapterId/Section/:sectionId\n *  //\n *  // Then\n *  $routeParams ==> {chapterId:1, sectionId:2, search:'moby'}\n * </pre>\n */\nfunction $RouteParamsProvider() {\n  this.$get = valueFn({});\n}\n\n/**\n * DESIGN NOTES\n *\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\n *\n * The typical use of scope is to watch the expressions, which most of the time return the same\n * value as last time so we optimize the operation.\n *\n * Closures construction is expensive in terms of speed as well as memory:\n *   - No closures, instead use prototypical inheritance for API\n *   - Internal state needs to be stored on scope directly, which means that private state is\n *     exposed as $$____ properties\n *\n * Loop operations are optimized by using while(count--) { ... }\n *   - this means that in order to keep the same order of execution as addition we have to add\n *     items to the array at the beginning (shift) instead of at the end (push)\n *\n * Child scopes are created and removed often\n *   - Using an array would be slow since inserts in middle are expensive so we use linked list\n *\n * There are few watches then a lot of observers. This is why you don't want the observer to be\n * implemented in the same way as watch. Watch requires return of initialization function which\n * are expensive to construct.\n */\n\n\n/**\n * @ngdoc object\n * @name ng.$rootScopeProvider\n * @description\n *\n * Provider for the $rootScope service.\n */\n\n/**\n * @ngdoc function\n * @name ng.$rootScopeProvider#digestTtl\n * @methodOf ng.$rootScopeProvider\n * @description\n *\n * Sets the number of digest iterations the scope should attempt to execute before giving up and\n * assuming that the model is unstable.\n *\n * The current default is 10 iterations.\n *\n * @param {number} limit The number of digest iterations.\n */\n\n\n/**\n * @ngdoc object\n * @name ng.$rootScope\n * @description\n *\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\n * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide\n * event processing life-cycle. See {@link guide/scope developer guide on scopes}.\n */\nfunction $RootScopeProvider(){\n  var TTL = 10;\n\n  this.digestTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n    }\n    return TTL;\n  };\n\n  this.$get = ['$injector', '$exceptionHandler', '$parse',\n      function( $injector,   $exceptionHandler,   $parse) {\n\n    /**\n     * @ngdoc function\n     * @name ng.$rootScope.Scope\n     *\n     * @description\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n     * {@link AUTO.$injector $injector}. Child scopes are created using the\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n     * compiled HTML template is executed.)\n     *\n     * Here is a simple scope snippet to show how you can interact with the scope.\n     * <pre>\n     * <file src=\"./test/ng/rootScopeSpec.js\" tag=\"docs1\" />\n     * </pre>\n     *\n     * # Inheritance\n     * A scope can inherit from a parent scope, as in this example:\n     * <pre>\n         var parent = $rootScope;\n         var child = parent.$new();\n\n         parent.salutation = \"Hello\";\n         child.name = \"World\";\n         expect(child.salutation).toEqual('Hello');\n\n         child.salutation = \"Welcome\";\n         expect(child.salutation).toEqual('Welcome');\n         expect(parent.salutation).toEqual('Hello');\n     * </pre>\n     *\n     *\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be provided\n     *     for the current scope. Defaults to {@link ng}.\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n     *     append/override services provided by `providers`. This is handy when unit-testing and having\n     *     the need to override a default service.\n     * @returns {Object} Newly created scope.\n     *\n     */\n    function Scope() {\n      this.$id = nextUid();\n      this.$$phase = this.$parent = this.$$watchers =\n                     this.$$nextSibling = this.$$prevSibling =\n                     this.$$childHead = this.$$childTail = null;\n      this['this'] = this.$root =  this;\n      this.$$destroyed = false;\n      this.$$asyncQueue = [];\n      this.$$listeners = {};\n      this.$$isolateBindings = {};\n    }\n\n    /**\n     * @ngdoc property\n     * @name ng.$rootScope.Scope#$id\n     * @propertyOf ng.$rootScope.Scope\n     * @returns {number} Unique scope ID (monotonically increasing alphanumeric sequence) useful for\n     *   debugging.\n     */\n\n\n    Scope.prototype = {\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$new\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\n       *\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} and\n       * {@link ng.$rootScope.Scope#$digest $digest()} events. The scope can be removed from the scope\n       * hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n       *\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is desired for\n       * the scope and its child scopes to be permanently detached from the parent and thus stop\n       * participating in model change detection and listener notification by invoking.\n       *\n       * @param {boolean} isolate if true then the scope does not prototypically inherit from the\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n       *         When creating widgets it is useful for the widget to not accidentally read parent\n       *         state.\n       *\n       * @returns {Object} The newly created child scope.\n       *\n       */\n      $new: function(isolate) {\n        var Child,\n            child;\n\n        if (isFunction(isolate)) {\n          // TODO: remove at some point\n          throw Error('API-CHANGE: Use $controller to instantiate controllers.');\n        }\n        if (isolate) {\n          child = new Scope();\n          child.$root = this.$root;\n        } else {\n          Child = function() {}; // should be anonymous; This is so that when the minifier munges\n            // the name it does not become random set of chars. These will then show up as class\n            // name in the debugger.\n          Child.prototype = this;\n          child = new Child();\n          child.$id = nextUid();\n        }\n        child['this'] = child;\n        child.$$listeners = {};\n        child.$parent = this;\n        child.$$watchers = child.$$nextSibling = child.$$childHead = child.$$childTail = null;\n        child.$$prevSibling = this.$$childTail;\n        if (this.$$childHead) {\n          this.$$childTail.$$nextSibling = child;\n          this.$$childTail = child;\n        } else {\n          this.$$childHead = this.$$childTail = child;\n        }\n        return child;\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$watch\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n       *\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest $digest()} and\n       *   should return the value which will be watched. (Since {@link ng.$rootScope.Scope#$digest $digest()}\n       *   reruns when it detects changes the `watchExpression` can execute multiple times per\n       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n       * - The `listener` is called only when the value from the current `watchExpression` and the\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n       *   see below). The inequality is determined according to\n       *   {@link angular.equals} function. To save the value of the object for later comparison, the\n       *   {@link angular.copy} function is used. It also means that watching complex options will\n       *   have adverse memory and performance implications.\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire. This\n       *   is achieved by rerunning the watchers until no changes are detected. The rerun iteration\n       *   limit is 10 to prevent an infinite loop deadlock.\n       *\n       *\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\n       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a change is\n       * detected, be prepared for multiple calls to your listener.)\n       *\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n       * listener was called due to initialization.\n       *\n       *\n       * # Example\n       * <pre>\n           // let's assume that scope was dependency injected as the $rootScope\n           var scope = $rootScope;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) { scope.counter = scope.counter + 1; });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // no variable change\n           expect(scope.counter).toEqual(0);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(1);\n       * </pre>\n       *\n       *\n       *\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers a\n       *    call to the `listener`.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(scope)`: called with current `scope` as a parameter.\n       * @param {(function()|string)=} listener Callback called whenever the return value of\n       *   the `watchExpression` changes.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(newValue, oldValue, scope)`: called with current and previous values as parameters.\n       *\n       * @param {boolean=} objectEquality Compare object for equality rather than for reference.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $watch: function(watchExp, listener, objectEquality) {\n        var scope = this,\n            get = compileToFn(watchExp, 'watch'),\n            array = scope.$$watchers,\n            watcher = {\n              fn: listener,\n              last: initWatchVal,\n              get: get,\n              exp: watchExp,\n              eq: !!objectEquality\n            };\n\n        // in the case user pass string, we need to compile it, do we really need this ?\n        if (!isFunction(listener)) {\n          var listenFn = compileToFn(listener || noop, 'listener');\n          watcher.fn = function(newVal, oldVal, scope) {listenFn(scope);};\n        }\n\n        if (typeof watchExp == 'string' && get.constant) {\n          var originalFn = watcher.fn;\n          watcher.fn = function(newVal, oldVal, scope) {\n            originalFn.call(this, newVal, oldVal, scope);\n            arrayRemove(array, watcher);\n          };\n        }\n\n        if (!array) {\n          array = scope.$$watchers = [];\n        }\n        // we use unshift since we use a while loop in $digest for speed.\n        // the while loop reads in reverse order.\n        array.unshift(watcher);\n\n        return function() {\n          arrayRemove(array, watcher);\n        };\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$watchCollection\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Shallow watches the properties of an object and fires whenever any of the properties change\n       * (for arrays this implies watching the array items, for object maps this implies watching the properties).\n       * If a change is detected the `listener` callback is fired.\n       *\n       * - The `obj` collection is observed via standard $watch operation and is examined on every call to $digest() to\n       *   see if any items have been added, removed, or moved.\n       * - The `listener` is called whenever anything within the `obj` has changed. Examples include adding new items\n       *   into the object or array, removing and moving items around.\n       *\n       *\n       * # Example\n       * <pre>\n          $scope.names = ['igor', 'matias', 'misko', 'james'];\n          $scope.dataCount = 4;\n\n          $scope.$watchCollection('names', function(newNames, oldNames) {\n            $scope.dataCount = newNames.length;\n          });\n\n          expect($scope.dataCount).toEqual(4);\n          $scope.$digest();\n\n          //still at 4 ... no changes\n          expect($scope.dataCount).toEqual(4);\n\n          $scope.names.pop();\n          $scope.$digest();\n\n          //now there's been a change\n          expect($scope.dataCount).toEqual(3);\n       * </pre>\n       *\n       *\n       * @param {string|Function(scope)} obj Evaluated as {@link guide/expression expression}. The expression value\n       *    should evaluate to an object or an array which is observed on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the collection will trigger\n       *    a call to the `listener`.\n       *\n       * @param {function(newCollection, oldCollection, scope)} listener a callback function that is fired with both\n       *    the `newCollection` and `oldCollection` as parameters.\n       *    The `newCollection` object is the newly modified data obtained from the `obj` expression and the\n       *    `oldCollection` object is a copy of the former collection data.\n       *    The `scope` refers to the current scope.\n       *\n       * @returns {function()} Returns a de-registration function for this listener. When the de-registration function is executed\n       * then the internal watch operation is terminated.\n       */\n      $watchCollection: function(obj, listener) {\n        var self = this;\n        var oldValue;\n        var newValue;\n        var changeDetected = 0;\n        var objGetter = $parse(obj);\n        var internalArray = [];\n        var internalObject = {};\n        var oldLength = 0;\n\n        function $watchCollectionWatch() {\n          newValue = objGetter(self);\n          var newLength, key;\n\n          if (!isObject(newValue)) {\n            if (oldValue !== newValue) {\n              oldValue = newValue;\n              changeDetected++;\n            }\n          } else if (isArrayLike(newValue)) {\n            if (oldValue !== internalArray) {\n              // we are transitioning from something which was not an array into array.\n              oldValue = internalArray;\n              oldLength = oldValue.length = 0;\n              changeDetected++;\n            }\n\n            newLength = newValue.length;\n\n            if (oldLength !== newLength) {\n              // if lengths do not match we need to trigger change notification\n              changeDetected++;\n              oldValue.length = oldLength = newLength;\n            }\n            // copy the items to oldValue and look for changes.\n            for (var i = 0; i < newLength; i++) {\n              if (oldValue[i] !== newValue[i]) {\n                changeDetected++;\n                oldValue[i] = newValue[i];\n              }\n            }\n          } else {\n            if (oldValue !== internalObject) {\n              // we are transitioning from something which was not an object into object.\n              oldValue = internalObject = {};\n              oldLength = 0;\n              changeDetected++;\n            }\n            // copy the items to oldValue and look for changes.\n            newLength = 0;\n            for (key in newValue) {\n              if (newValue.hasOwnProperty(key)) {\n                newLength++;\n                if (oldValue.hasOwnProperty(key)) {\n                  if (oldValue[key] !== newValue[key]) {\n                    changeDetected++;\n                    oldValue[key] = newValue[key];\n                  }\n                } else {\n                  oldLength++;\n                  oldValue[key] = newValue[key];\n                  changeDetected++;\n                }\n              }\n            }\n            if (oldLength > newLength) {\n              // we used to have more keys, need to find them and destroy them.\n              changeDetected++;\n              for(key in oldValue) {\n                if (oldValue.hasOwnProperty(key) && !newValue.hasOwnProperty(key)) {\n                  oldLength--;\n                  delete oldValue[key];\n                }\n              }\n            }\n          }\n          return changeDetected;\n        }\n\n        function $watchCollectionAction() {\n          listener(newValue, oldValue, self);\n        }\n\n        return this.$watch($watchCollectionWatch, $watchCollectionAction);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$digest\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and its children.\n       * Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change the model, the\n       * `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers} until no more listeners are\n       * firing. This means that it is possible to get into an infinite loop. This function will throw\n       * `'Maximum iteration limit exceeded.'` if the number of iterations exceeds 10.\n       *\n       * Usually you don't call `$digest()` directly in\n       * {@link ng.directive:ngController controllers} or in\n       * {@link ng.$compileProvider#directive directives}.\n       * Instead a call to {@link ng.$rootScope.Scope#$apply $apply()} (typically from within a\n       * {@link ng.$compileProvider#directive directives}) will force a `$digest()`.\n       *\n       * If you want to be notified whenever `$digest()` is called,\n       * you can register a `watchExpression` function  with {@link ng.$rootScope.Scope#$watch $watch()}\n       * with no `listener`.\n       *\n       * You may have a need to call `$digest()` from within unit-tests, to simulate the scope\n       * life-cycle.\n       *\n       * # Example\n       * <pre>\n           var scope = ...;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // no variable change\n           expect(scope.counter).toEqual(0);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(1);\n       * </pre>\n       *\n       */\n      $digest: function() {\n        var watch, value, last,\n            watchers,\n            asyncQueue = this.$$asyncQueue,\n            length,\n            dirty, ttl = TTL,\n            next, current, target = this,\n            watchLog = [],\n            logIdx, logMsg;\n\n        beginPhase('$digest');\n\n        do { // \"while dirty\" loop\n          dirty = false;\n          current = target;\n\n          while(asyncQueue.length) {\n            try {\n              current.$eval(asyncQueue.shift());\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          do { // \"traverse the scopes\" loop\n            if ((watchers = current.$$watchers)) {\n              // process our watches\n              length = watchers.length;\n              while (length--) {\n                try {\n                  watch = watchers[length];\n                  // Most common watches are on primitives, in which case we can short\n                  // circuit it with === operator, only when === fails do we use .equals\n                  if ((value = watch.get(current)) !== (last = watch.last) &&\n                      !(watch.eq\n                          ? equals(value, last)\n                          : (typeof value == 'number' && typeof last == 'number'\n                             && isNaN(value) && isNaN(last)))) {\n                    dirty = true;\n                    watch.last = watch.eq ? copy(value) : value;\n                    watch.fn(value, ((last === initWatchVal) ? value : last), current);\n                    if (ttl < 5) {\n                      logIdx = 4 - ttl;\n                      if (!watchLog[logIdx]) watchLog[logIdx] = [];\n                      logMsg = (isFunction(watch.exp))\n                          ? 'fn: ' + (watch.exp.name || watch.exp.toString())\n                          : watch.exp;\n                      logMsg += '; newVal: ' + toJson(value) + '; oldVal: ' + toJson(last);\n                      watchLog[logIdx].push(logMsg);\n                    }\n                  }\n                } catch (e) {\n                  $exceptionHandler(e);\n                }\n              }\n            }\n\n            // Insanity Warning: scope depth-first traversal\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n            // this piece should be kept in sync with the traversal in $broadcast\n            if (!(next = (current.$$childHead || (current !== target && current.$$nextSibling)))) {\n              while(current !== target && !(next = current.$$nextSibling)) {\n                current = current.$parent;\n              }\n            }\n          } while ((current = next));\n\n          if(dirty && !(ttl--)) {\n            clearPhase();\n            throw Error(TTL + ' $digest() iterations reached. Aborting!\\n' +\n                'Watchers fired in the last 5 iterations: ' + toJson(watchLog));\n          }\n        } while (dirty || asyncQueue.length);\n\n        clearPhase();\n      },\n\n\n      /**\n       * @ngdoc event\n       * @name ng.$rootScope.Scope#$destroy\n       * @eventOf ng.$rootScope.Scope\n       * @eventType broadcast on scope being destroyed\n       *\n       * @description\n       * Broadcasted when a scope and its children are being destroyed.\n       */\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$destroy\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n       * propagate to the current scope and its children. Removal also implies that the current\n       * scope is eligible for garbage collection.\n       *\n       * The `$destroy()` is usually used by directives such as\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n       * unrolling of the loop.\n       *\n       * Just before a scope is destroyed a `$destroy` event is broadcasted on this scope.\n       * Application code can register a `$destroy` event handler that will give it chance to\n       * perform any necessary cleanup.\n       */\n      $destroy: function() {\n        // we can't destroy the root scope or a scope that has been already destroyed\n        if ($rootScope == this || this.$$destroyed) return;\n        var parent = this.$parent;\n\n        this.$broadcast('$destroy');\n        this.$$destroyed = true;\n\n        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\n        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\n        // This is bogus code that works around Chrome's GC leak\n        // see: https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\n            this.$$childTail = null;\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$eval\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Executes the `expression` on the current scope returning the result. Any exceptions in the\n       * expression are propagated (uncaught). This is useful when evaluating Angular expressions.\n       *\n       * # Example\n       * <pre>\n           var scope = ng.$rootScope.Scope();\n           scope.a = 1;\n           scope.b = 2;\n\n           expect(scope.$eval('a+b')).toEqual(3);\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n       * </pre>\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $eval: function(expr, locals) {\n        return $parse(expr)(this, locals);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$evalAsync\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Executes the expression on the current scope at a later point in time.\n       *\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only that:\n       *\n       *   - it will execute in the current script execution context (before any DOM rendering).\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n       *     `expression` execution.\n       *\n       * Any exceptions from the execution of the expression are forwarded to the\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       */\n      $evalAsync: function(expr) {\n        this.$$asyncQueue.push(expr);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$apply\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * `$apply()` is used to execute an expression in angular from outside of the angular framework.\n       * (For example from browser DOM events, setTimeout, XHR or third party libraries).\n       * Because we are calling into the angular framework we need to perform proper scope life-cycle\n       * of {@link ng.$exceptionHandler exception handling},\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\n       *\n       * ## Life cycle\n       *\n       * # Pseudo-Code of `$apply()`\n       * <pre>\n           function $apply(expr) {\n             try {\n               return $eval(expr);\n             } catch (e) {\n               $exceptionHandler(e);\n             } finally {\n               $root.$digest();\n             }\n           }\n       * </pre>\n       *\n       *\n       * Scope's `$apply()` method transitions through the following stages:\n       *\n       * 1. The {@link guide/expression expression} is executed using the\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n       * 2. Any exceptions from the execution of the expression are forwarded to the\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the expression\n       *    was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n       *\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $apply: function(expr) {\n        try {\n          beginPhase('$apply');\n          return this.$eval(expr);\n        } catch (e) {\n          $exceptionHandler(e);\n        } finally {\n          clearPhase();\n          try {\n            $rootScope.$digest();\n          } catch (e) {\n            $exceptionHandler(e);\n            throw e;\n          }\n        }\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$on\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for discussion of\n       * event life cycle.\n       *\n       * The event listener function format is: `function(event, args...)`. The `event` object\n       * passed into the listener has the following attributes:\n       *\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or `$broadcast`-ed.\n       *   - `currentScope` - `{Scope}`: the current scope which is handling the event.\n       *   - `name` - `{string}`: Name of the event.\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel further event\n       *     propagation (available only for events that were `$emit`-ed).\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag to true.\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n       *\n       * @param {string} name Event name to listen on.\n       * @param {function(event, args...)} listener Function to call when the event is emitted.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $on: function(name, listener) {\n        var namedListeners = this.$$listeners[name];\n        if (!namedListeners) {\n          this.$$listeners[name] = namedListeners = [];\n        }\n        namedListeners.push(listener);\n\n        return function() {\n          namedListeners[indexOf(namedListeners, listener)] = null;\n        };\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$emit\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$emit` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.\n       * Afterwards, the event traverses upwards toward the root scope and calls all registered\n       * listeners along the way. The event will stop propagating if one of the listeners cancels it.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to emit.\n       * @param {...*} args Optional set of arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $emit: function(name, args) {\n        var empty = [],\n            namedListeners,\n            scope = this,\n            stopPropagation = false,\n            event = {\n              name: name,\n              targetScope: scope,\n              stopPropagation: function() {stopPropagation = true;},\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            i, length;\n\n        do {\n          namedListeners = scope.$$listeners[name] || empty;\n          event.currentScope = scope;\n          for (i=0, length=namedListeners.length; i<length; i++) {\n\n            // if listeners were deregistered, defragment the array\n            if (!namedListeners[i]) {\n              namedListeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n            try {\n              namedListeners[i].apply(null, listenerArgs);\n              if (stopPropagation) return event;\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          //traverse upwards\n          scope = scope.$parent;\n        } while (scope);\n\n        return event;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$broadcast\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.\n       * Afterwards, the event propagates to all direct and indirect scopes of the current scope and\n       * calls all registered listeners along the way. The event cannot be canceled.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to broadcast.\n       * @param {...*} args Optional set of arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $broadcast: function(name, args) {\n        var target = this,\n            current = target,\n            next = target,\n            event = {\n              name: name,\n              targetScope: target,\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            listeners, i, length;\n\n        //down while you can, then up and next sibling or up and next sibling until back at root\n        do {\n          current = next;\n          event.currentScope = current;\n          listeners = current.$$listeners[name] || [];\n          for (i=0, length = listeners.length; i<length; i++) {\n            // if listeners were deregistered, defragment the array\n            if (!listeners[i]) {\n              listeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n\n            try {\n              listeners[i].apply(null, listenerArgs);\n            } catch(e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          // Insanity Warning: scope depth-first traversal\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n          // this piece should be kept in sync with the traversal in $digest\n          if (!(next = (current.$$childHead || (current !== target && current.$$nextSibling)))) {\n            while(current !== target && !(next = current.$$nextSibling)) {\n              current = current.$parent;\n            }\n          }\n        } while ((current = next));\n\n        return event;\n      }\n    };\n\n    var $rootScope = new Scope();\n\n    return $rootScope;\n\n\n    function beginPhase(phase) {\n      if ($rootScope.$$phase) {\n        throw Error($rootScope.$$phase + ' already in progress');\n      }\n\n      $rootScope.$$phase = phase;\n    }\n\n    function clearPhase() {\n      $rootScope.$$phase = null;\n    }\n\n    function compileToFn(exp, name) {\n      var fn = $parse(exp);\n      assertArgFn(fn, name);\n      return fn;\n    }\n\n    /**\n     * function used as an initial value for watchers.\n     * because it's unique we can easily tell it apart from other values\n     */\n    function initWatchVal() {}\n  }];\n}\n\n/**\n * !!! This is an undocumented \"private\" service !!!\n *\n * @name ng.$sniffer\n * @requires $window\n * @requires $document\n *\n * @property {boolean} history Does the browser support html5 history api ?\n * @property {boolean} hashchange Does the browser support hashchange event ?\n * @property {boolean} transitions Does the browser support CSS transition events ?\n * @property {boolean} animations Does the browser support CSS animation events ?\n *\n * @description\n * This is very simple implementation of testing browser's features.\n */\nfunction $SnifferProvider() {\n  this.$get = ['$window', '$document', function($window, $document) {\n    var eventSupport = {},\n        android = int((/android (\\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),\n        document = $document[0] || {},\n        vendorPrefix,\n        vendorRegex = /^(Moz|webkit|O|ms)(?=[A-Z])/,\n        bodyStyle = document.body && document.body.style,\n        transitions = false,\n        animations = false,\n        match;\n\n    if (bodyStyle) {\n      for(var prop in bodyStyle) {\n        if(match = vendorRegex.exec(prop)) {\n          vendorPrefix = match[0];\n          vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);\n          break;\n        }\n      }\n      transitions = !!(('transition' in bodyStyle) || (vendorPrefix + 'Transition' in bodyStyle));\n      animations  = !!(('animation' in bodyStyle) || (vendorPrefix + 'Animation' in bodyStyle));\n    }\n\n\n    return {\n      // Android has history.pushState, but it does not update location correctly\n      // so let's not use the history API at all.\n      // http://code.google.com/p/android/issues/detail?id=17471\n      // https://github.com/angular/angular.js/issues/904\n      history: !!($window.history && $window.history.pushState && !(android < 4)),\n      hashchange: 'onhashchange' in $window &&\n                  // IE8 compatible mode lies\n                  (!document.documentMode || document.documentMode > 7),\n      hasEvent: function(event) {\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n        // it. In particular the event is not fired when backspace or delete key are pressed or\n        // when cut operation is performed.\n        if (event == 'input' && msie == 9) return false;\n\n        if (isUndefined(eventSupport[event])) {\n          var divElm = document.createElement('div');\n          eventSupport[event] = 'on' + event in divElm;\n        }\n\n        return eventSupport[event];\n      },\n      csp: document.securityPolicy ? document.securityPolicy.isActive : false,\n      vendorPrefix: vendorPrefix,\n      transitions : transitions,\n      animations : animations\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$window\n *\n * @description\n * A reference to the browser's `window` object. While `window`\n * is globally available in JavaScript, it causes testability problems, because\n * it is a global variable. In angular we always refer to it through the\n * `$window` service, so it may be overridden, removed or mocked for testing.\n *\n * All expressions are evaluated with respect to current scope so they don't\n * suffer from window globality.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope, $window) {\n           $scope.$window = $window;\n           $scope.greeting = 'Hello, World!';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input type=\"text\" ng-model=\"greeting\" />\n         <button ng-click=\"$window.alert(greeting)\">ALERT</button>\n       </div>\n     </doc:source>\n     <doc:scenario>\n      it('should display the greeting in the input box', function() {\n       input('greeting').enter('Hello, E2E Tests');\n       // If we click the button it will block the test runner\n       // element(':button').click();\n      });\n     </doc:scenario>\n   </doc:example>\n */\nfunction $WindowProvider(){\n  this.$get = valueFn(window);\n}\n\n/**\n * Parse headers into key value object\n *\n * @param {string} headers Raw headers as a string\n * @returns {Object} Parsed headers as key value object\n */\nfunction parseHeaders(headers) {\n  var parsed = {}, key, val, i;\n\n  if (!headers) return parsed;\n\n  forEach(headers.split('\\n'), function(line) {\n    i = line.indexOf(':');\n    key = lowercase(trim(line.substr(0, i)));\n    val = trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key]) {\n        parsed[key] += ', ' + val;\n      } else {\n        parsed[key] = val;\n      }\n    }\n  });\n\n  return parsed;\n}\n\n\nvar IS_SAME_DOMAIN_URL_MATCH = /^(([^:]+):)?\\/\\/(\\w+:{0,1}\\w*@)?([\\w\\.-]*)?(:([0-9]+))?(.*)$/;\n\n\n/**\n * Parse a request and location URL and determine whether this is a same-domain request.\n *\n * @param {string} requestUrl The url of the request.\n * @param {string} locationUrl The current browser location url.\n * @returns {boolean} Whether the request is for the same domain.\n */\nfunction isSameDomain(requestUrl, locationUrl) {\n  var match = IS_SAME_DOMAIN_URL_MATCH.exec(requestUrl);\n  // if requestUrl is relative, the regex does not match.\n  if (match == null) return true;\n\n  var domain1 = {\n      protocol: match[2],\n      host: match[4],\n      port: int(match[6]) || DEFAULT_PORTS[match[2]] || null,\n      // IE8 sets unmatched groups to '' instead of undefined.\n      relativeProtocol: match[2] === undefined || match[2] === ''\n    };\n\n  match = SERVER_MATCH.exec(locationUrl);\n  var domain2 = {\n      protocol: match[1],\n      host: match[3],\n      port: int(match[5]) || DEFAULT_PORTS[match[1]] || null\n    };\n\n  return (domain1.protocol == domain2.protocol || domain1.relativeProtocol) &&\n         domain1.host == domain2.host &&\n         (domain1.port == domain2.port || (domain1.relativeProtocol &&\n             domain2.port == DEFAULT_PORTS[domain2.protocol]));\n}\n\n\n/**\n * Returns a function that provides access to parsed headers.\n *\n * Headers are lazy parsed when first requested.\n * @see parseHeaders\n *\n * @param {(string|Object)} headers Headers to provide access to.\n * @returns {function(string=)} Returns a getter function which if called with:\n *\n *   - if called with single an argument returns a single header value or null\n *   - if called with no arguments returns an object containing all headers.\n */\nfunction headersGetter(headers) {\n  var headersObj = isObject(headers) ? headers : undefined;\n\n  return function(name) {\n    if (!headersObj) headersObj =  parseHeaders(headers);\n\n    if (name) {\n      return headersObj[lowercase(name)] || null;\n    }\n\n    return headersObj;\n  };\n}\n\n\n/**\n * Chain all given functions\n *\n * This function is used for both request and response transforming\n *\n * @param {*} data Data to transform.\n * @param {function(string=)} headers Http headers getter fn.\n * @param {(function|Array.<function>)} fns Function or an array of functions.\n * @returns {*} Transformed data.\n */\nfunction transformData(data, headers, fns) {\n  if (isFunction(fns))\n    return fns(data, headers);\n\n  forEach(fns, function(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n}\n\n\nfunction isSuccess(status) {\n  return 200 <= status && status < 300;\n}\n\n\nfunction $HttpProvider() {\n  var JSON_START = /^\\s*(\\[|\\{[^\\{])/,\n      JSON_END = /[\\}\\]]\\s*$/,\n      PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/,\n      CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': 'application/json;charset=utf-8'};\n\n  var defaults = this.defaults = {\n    // transform incoming response data\n    transformResponse: [function(data) {\n      if (isString(data)) {\n        // strip json vulnerability protection prefix\n        data = data.replace(PROTECTION_PREFIX, '');\n        if (JSON_START.test(data) && JSON_END.test(data))\n          data = fromJson(data, true);\n      }\n      return data;\n    }],\n\n    // transform outgoing request data\n    transformRequest: [function(d) {\n      return isObject(d) && !isFile(d) ? toJson(d) : d;\n    }],\n\n    // default headers\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      post:   CONTENT_TYPE_APPLICATION_JSON,\n      put:    CONTENT_TYPE_APPLICATION_JSON,\n      patch:  CONTENT_TYPE_APPLICATION_JSON\n    },\n\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN'\n  };\n\n  /**\n   * Are order by request. I.E. they are applied in the same order as\n   * array on request, but revers order on response.\n   */\n  var interceptorFactories = this.interceptors = [];\n  /**\n   * For historical reasons, response interceptors ordered by the order in which\n   * they are applied to response. (This is in revers to interceptorFactories)\n   */\n  var responseInterceptorFactories = this.responseInterceptors = [];\n\n  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\n      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\n\n    var defaultCache = $cacheFactory('$http');\n\n    /**\n     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.\n     * The reversal is needed so that we can build up the interception chain around the\n     * server request.\n     */\n    var reversedInterceptors = [];\n\n    forEach(interceptorFactories, function(interceptorFactory) {\n      reversedInterceptors.unshift(isString(interceptorFactory)\n          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));\n    });\n\n    forEach(responseInterceptorFactories, function(interceptorFactory, index) {\n      var responseFn = isString(interceptorFactory)\n          ? $injector.get(interceptorFactory)\n          : $injector.invoke(interceptorFactory);\n\n      /**\n       * Response interceptors go before \"around\" interceptors (no real reason, just\n       * had to pick one.) But they are already revesed, so we can't use unshift, hence\n       * the splice.\n       */\n      reversedInterceptors.splice(index, 0, {\n        response: function(response) {\n          return responseFn($q.when(response));\n        },\n        responseError: function(response) {\n          return responseFn($q.reject(response));\n        }\n      });\n    });\n\n\n    /**\n     * @ngdoc function\n     * @name ng.$http\n     * @requires $httpBackend\n     * @requires $browser\n     * @requires $cacheFactory\n     * @requires $rootScope\n     * @requires $q\n     * @requires $injector\n     *\n     * @description\n     * The `$http` service is a core Angular service that facilitates communication with the remote\n     * HTTP servers via the browser's {@link https://developer.mozilla.org/en/xmlhttprequest\n     * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.\n     *\n     * For unit testing applications that use `$http` service, see\n     * {@link ngMock.$httpBackend $httpBackend mock}.\n     *\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n     * $resource} service.\n     *\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n     *\n     *\n     * # General usage\n     * The `$http` service is a function which takes a single argument — a configuration object —\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\n     * with two $http specific methods: `success` and `error`.\n     *\n     * <pre>\n     *   $http({method: 'GET', url: '/someUrl'}).\n     *     success(function(data, status, headers, config) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }).\n     *     error(function(data, status, headers, config) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * </pre>\n     *\n     * Since the returned value of calling the $http function is a `promise`, you can also use\n     * the `then` method to register callbacks, and these callbacks will receive a single argument –\n     * an object representing the response. See the API signature and type info below for more\n     * details.\n     *\n     * A response status code between 200 and 299 is considered a success status and\n     * will result in the success callback being called. Note that if the response is a redirect,\n     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\n     * called for such responses.\n     *\n     * # Shortcut methods\n     *\n     * Since all invocations of the $http service require passing in an HTTP method and URL, and\n     * POST/PUT requests require request data to be provided as well, shortcut methods\n     * were created:\n     *\n     * <pre>\n     *   $http.get('/someUrl').success(successCallback);\n     *   $http.post('/someUrl', data).success(successCallback);\n     * </pre>\n     *\n     * Complete list of shortcut methods:\n     *\n     * - {@link ng.$http#get $http.get}\n     * - {@link ng.$http#head $http.head}\n     * - {@link ng.$http#post $http.post}\n     * - {@link ng.$http#put $http.put}\n     * - {@link ng.$http#delete $http.delete}\n     * - {@link ng.$http#jsonp $http.jsonp}\n     *\n     *\n     * # Setting HTTP Headers\n     *\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n     * object, which currently contains this default configuration:\n     *\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n     *   - `Accept: application/json, text/plain, * / *`\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n     *   - `Content-Type: application/json`\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n     *   - `Content-Type: application/json`\n     *\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n     * with the lowercased HTTP method name as the key, e.g.\n     * `$httpProvider.defaults.headers.get['My-Header']='value'`.\n     *\n     * Additionally, the defaults can be set at runtime via the `$http.defaults` object in the same\n     * fashion.\n     *\n     *\n     * # Transforming Requests and Responses\n     *\n     * Both requests and responses can be transformed using transform functions. By default, Angular\n     * applies these transformations:\n     *\n     * Request transformations:\n     *\n     * - If the `data` property of the request configuration object contains an object, serialize it into\n     *   JSON format.\n     *\n     * Response transformations:\n     *\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n     *  - If JSON response is detected, deserialize it using a JSON parser.\n     *\n     * To globally augment or override the default transforms, modify the `$httpProvider.defaults.transformRequest` and\n     * `$httpProvider.defaults.transformResponse` properties. These properties are by default an\n     * array of transform functions, which allows you to `push` or `unshift` a new transformation function into the\n     * transformation chain. You can also decide to completely override any default transformations by assigning your\n     * transformation functions to these properties directly without the array wrapper.\n     *\n     * Similarly, to locally override the request/response transforms, augment the `transformRequest` and/or\n     * `transformResponse` properties of the configuration object passed into `$http`.\n     *\n     *\n     * # Caching\n     *\n     * To enable caching, set the configuration property `cache` to `true`. When the cache is\n     * enabled, `$http` stores the response from the server in local cache. Next time the\n     * response is served from the cache without sending a request to the server.\n     *\n     * Note that even if the response is served from cache, delivery of the data is asynchronous in\n     * the same way that real requests are.\n     *\n     * If there are multiple GET requests for the same URL that should be cached using the same\n     * cache, but the cache is not populated yet, only one request to the server will be made and\n     * the remaining requests will be fulfilled using the response from the first request.\n     *\n     * A custom default cache built with $cacheFactory can be provided in $http.defaults.cache.\n     * To skip it, set configuration property `cache` to `false`.\n     *\n     *\n     * # Interceptors\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication, or any kind of synchronous or\n     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be\n     * able to intercept requests before they are handed to the server and\n     * responses before they are handed over to the application code that\n     * initiated these requests. The interceptors leverage the {@link ng.$q\n     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n     *\n     * The interceptors are service factories that are registered with the `$httpProvider` by\n     * adding them to the `$httpProvider.interceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor.\n     *\n     * There are two kinds of interceptors (and two kinds of rejection interceptors):\n     *\n     *   * `request`: interceptors get called with http `config` object. The function is free to modify\n     *     the `config` or create a new one. The function needs to return the `config` directly or as a\n     *     promise.\n     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or resolved\n     *      with a rejection.\n     *   * `response`: interceptors get called with http `response` object. The function is free to modify\n     *     the `response` or create a new one. The function needs to return the `response` directly or as a\n     *     promise.\n     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or resolved\n     *      with a rejection.\n     *\n     *\n     * <pre>\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return {\n     *       // optional method\n     *       'request': function(config) {\n     *         // do something on success\n     *         return config || $q.when(config);\n     *       },\n     *\n     *       // optional method\n     *      'requestError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       },\n     *\n     *\n     *\n     *       // optional method\n     *       'response': function(response) {\n     *         // do something on success\n     *         return response || $q.when(response);\n     *       },\n     *\n     *       // optional method\n     *      'responseError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       };\n     *     }\n     *   });\n     *\n     *   $httpProvider.interceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // register the interceptor via an anonymous factory\n     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n     *     return {\n     *      'request': function(config) {\n     *          // same as above\n     *       },\n     *       'response': function(response) {\n     *          // same as above\n     *       }\n     *   });\n     * </pre>\n     *\n     * # Response interceptors (DEPRECATED)\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication or any kind of synchronous or\n     * asynchronous preprocessing of received responses, it is desirable to be able to intercept\n     * responses for http requests before they are handed over to the application code that\n     * initiated these requests. The response interceptors leverage the {@link ng.$q\n     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.\n     *\n     * The interceptors are service factories that are registered with the $httpProvider by\n     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor  — a function that\n     * takes a {@link ng.$q promise} and returns the original or a new promise.\n     *\n     * <pre>\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       return promise.then(function(response) {\n     *         // do something on success\n     *       }, function(response) {\n     *         // do something on error\n     *         if (canRecover(response)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(response);\n     *       });\n     *     }\n     *   });\n     *\n     *   $httpProvider.responseInterceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // register the interceptor via an anonymous factory\n     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       // same as above\n     *     }\n     *   });\n     * </pre>\n     *\n     *\n     * # Security Considerations\n     *\n     * When designing web applications, consider security threats from:\n     *\n     * - {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\n     *   JSON vulnerability}\n     * - {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF}\n     *\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n     * pre-configured with strategies that address these issues, but for this to work backend server\n     * cooperation is required.\n     *\n     * ## JSON Vulnerability Protection\n     *\n     * A {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\n     * JSON vulnerability} allows third party website to turn your JSON resource URL into\n     * {@link http://en.wikipedia.org/wiki/JSONP JSONP} request under some conditions. To\n     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n     * Angular will automatically strip the prefix before processing it as JSON.\n     *\n     * For example if your server needs to return:\n     * <pre>\n     * ['one','two']\n     * </pre>\n     *\n     * which is vulnerable to attack, your server can return:\n     * <pre>\n     * )]}',\n     * ['one','two']\n     * </pre>\n     *\n     * Angular will strip the prefix, before processing the JSON.\n     *\n     *\n     * ## Cross Site Request Forgery (XSRF) Protection\n     *\n     * {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF} is a technique by which\n     * an unauthorized site can gain your user's private data. Angular provides a mechanism\n     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n     * (by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only\n     * JavaScript that runs on your domain could read the cookie, your server can be assured that\n     * the XHR came from JavaScript running on your domain. The header will not be set for\n     * cross-domain requests.\n     *\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n     * that only JavaScript running on your domain could have sent the request. The token must be\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from making\n     * up its own tokens). We recommend that the token is a digest of your site's authentication\n     * cookie with a {@link https://en.wikipedia.org/wiki/Salt_(cryptography) salt} for added security.\n     *\n     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\n     * properties of either $httpProvider.defaults, or the per-request config object.\n     *\n     *\n     * @param {object} config Object describing the request to be made and how it should be\n     *    processed. The object has following properties:\n     *\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned to\n     *      `?key1=value1&key2=value2` after the url. If the value is not a string, it will be JSONified.\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n     *    - **headers** – `{Object}` – Map of strings representing HTTP headers to send to the server.\n     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n     *    - **transformRequest** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      request body and headers and returns its transformed (typically serialized) version.\n     *    - **transformResponse** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      response body and headers and returns its transformed (typically deserialized) version.\n     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     *      GET request, otherwise if a cache instance built with\n     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     *      caching.\n     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n     *      that should abort the request when resolved.\n     *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the\n     *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5\n     *      requests with credentials} for more information.\n     *    - **responseType** - `{string}` - see {@link\n     *      https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType requestType}.\n     *\n     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\n     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\n     *   method takes two arguments a success and an error callback which will be called with a\n     *   response object. The `success` and `error` methods take a single argument - a function that\n     *   will be called when the request succeeds or fails respectively. The arguments passed into\n     *   these functions are destructured representation of the response object passed into the\n     *   `then` method. The response object has these properties:\n     *\n     *   - **data** – `{string|Object}` – The response body transformed with the transform functions.\n     *   - **status** – `{number}` – HTTP status code of the response.\n     *   - **headers** – `{function([headerName])}` – Header getter function.\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n     *\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n     *   requests. This is primarily meant to be used for debugging purposes.\n     *\n     *\n     * @example\n      <example>\n        <file name=\"index.html\">\n          <div ng-controller=\"FetchCtrl\">\n            <select ng-model=\"method\">\n              <option>GET</option>\n              <option>JSONP</option>\n            </select>\n            <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n            <button ng-click=\"fetch()\">fetch</button><br>\n            <button ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n            <button ng-click=\"updateModel('JSONP', 'http://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">Sample JSONP</button>\n            <button ng-click=\"updateModel('JSONP', 'http://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">Invalid JSONP</button>\n            <pre>http status code: {{status}}</pre>\n            <pre>http response data: {{data}}</pre>\n          </div>\n        </file>\n        <file name=\"script.js\">\n          function FetchCtrl($scope, $http, $templateCache) {\n            $scope.method = 'GET';\n            $scope.url = 'http-hello.html';\n\n            $scope.fetch = function() {\n              $scope.code = null;\n              $scope.response = null;\n\n              $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n                success(function(data, status) {\n                  $scope.status = status;\n                  $scope.data = data;\n                }).\n                error(function(data, status) {\n                  $scope.data = data || \"Request failed\";\n                  $scope.status = status;\n              });\n            };\n\n            $scope.updateModel = function(method, url) {\n              $scope.method = method;\n              $scope.url = url;\n            };\n          }\n        </file>\n        <file name=\"http-hello.html\">\n          Hello, $http!\n        </file>\n        <file name=\"scenario.js\">\n          it('should make an xhr GET request', function() {\n            element(':button:contains(\"Sample GET\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('200');\n            expect(binding('data')).toMatch(/Hello, \\$http!/);\n          });\n\n          it('should make a JSONP request to angularjs.org', function() {\n            element(':button:contains(\"Sample JSONP\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('200');\n            expect(binding('data')).toMatch(/Super Hero!/);\n          });\n\n          it('should make JSONP request to invalid URL and invoke the error handler',\n              function() {\n            element(':button:contains(\"Invalid JSONP\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('0');\n            expect(binding('data')).toBe('Request failed');\n          });\n        </file>\n      </example>\n     */\n    function $http(requestConfig) {\n      var config = {\n        transformRequest: defaults.transformRequest,\n        transformResponse: defaults.transformResponse\n      };\n      var headers = {};\n\n      extend(config, requestConfig);\n      config.headers = headers;\n      config.method = uppercase(config.method);\n\n      extend(headers,\n          defaults.headers.common,\n          defaults.headers[lowercase(config.method)],\n          requestConfig.headers);\n\n      var xsrfValue = isSameDomain(config.url, $browser.url())\n          ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName]\n          : undefined;\n      if (xsrfValue) {\n        headers[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;\n      }\n\n\n      var serverRequest = function(config) {\n        var reqData = transformData(config.data, headersGetter(headers), config.transformRequest);\n\n        // strip content-type if data is undefined\n        if (isUndefined(config.data)) {\n          delete headers['Content-Type'];\n        }\n\n        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {\n          config.withCredentials = defaults.withCredentials;\n        }\n\n        // send request\n        return sendReq(config, reqData, headers).then(transformResponse, transformResponse);\n      };\n\n      var chain = [serverRequest, undefined];\n      var promise = $q.when(config);\n\n      // apply interceptors\n      forEach(reversedInterceptors, function(interceptor) {\n        if (interceptor.request || interceptor.requestError) {\n          chain.unshift(interceptor.request, interceptor.requestError);\n        }\n        if (interceptor.response || interceptor.responseError) {\n          chain.push(interceptor.response, interceptor.responseError);\n        }\n      });\n\n      while(chain.length) {\n        var thenFn = chain.shift();\n        var rejectFn = chain.shift();\n\n        promise = promise.then(thenFn, rejectFn);\n      }\n\n      promise.success = function(fn) {\n        promise.then(function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      promise.error = function(fn) {\n        promise.then(null, function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      return promise;\n\n      function transformResponse(response) {\n        // make a copy since the response must be cacheable\n        var resp = extend({}, response, {\n          data: transformData(response.data, response.headers, config.transformResponse)\n        });\n        return (isSuccess(response.status))\n          ? resp\n          : $q.reject(resp);\n      }\n    }\n\n    $http.pendingRequests = [];\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#get\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `GET` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#delete\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `DELETE` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#head\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `HEAD` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#jsonp\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `JSONP` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request.\n     *                     Should contain `JSON_CALLBACK` string.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethods('get', 'delete', 'head', 'jsonp');\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#post\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `POST` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#put\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `PUT` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethodsWithData('post', 'put');\n\n        /**\n         * @ngdoc property\n         * @name ng.$http#defaults\n         * @propertyOf ng.$http\n         *\n         * @description\n         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n         * default headers, withCredentials as well as request and response transformations.\n         *\n         * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n         */\n    $http.defaults = defaults;\n\n\n    return $http;\n\n\n    function createShortMethods(names) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url\n          }));\n        };\n      });\n    }\n\n\n    function createShortMethodsWithData(name) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, data, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url,\n            data: data\n          }));\n        };\n      });\n    }\n\n\n    /**\n     * Makes the request.\n     *\n     * !!! ACCESSES CLOSURE VARS:\n     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests\n     */\n    function sendReq(config, reqData, reqHeaders) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          cache,\n          cachedResp,\n          url = buildUrl(config.url, config.params);\n\n      $http.pendingRequests.push(config);\n      promise.then(removePendingReq, removePendingReq);\n\n\n      if ((config.cache || defaults.cache) && config.cache !== false && config.method == 'GET') {\n        cache = isObject(config.cache) ? config.cache\n              : isObject(defaults.cache) ? defaults.cache\n              : defaultCache;\n      }\n\n      if (cache) {\n        cachedResp = cache.get(url);\n        if (cachedResp) {\n          if (cachedResp.then) {\n            // cached request has already been sent, but there is no response yet\n            cachedResp.then(removePendingReq, removePendingReq);\n            return cachedResp;\n          } else {\n            // serving from cache\n            if (isArray(cachedResp)) {\n              resolvePromise(cachedResp[1], cachedResp[0], copy(cachedResp[2]));\n            } else {\n              resolvePromise(cachedResp, 200, {});\n            }\n          }\n        } else {\n          // put the promise for the non-transformed response into cache as a placeholder\n          cache.put(url, promise);\n        }\n      }\n\n      // if we won't have the response in cache, send the request to the backend\n      if (!cachedResp) {\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n            config.withCredentials, config.responseType);\n      }\n\n      return promise;\n\n\n      /**\n       * Callback registered to $httpBackend():\n       *  - caches the response if desired\n       *  - resolves the raw $http promise\n       *  - calls $apply\n       */\n      function done(status, response, headersString) {\n        if (cache) {\n          if (isSuccess(status)) {\n            cache.put(url, [status, response, parseHeaders(headersString)]);\n          } else {\n            // remove promise from the cache\n            cache.remove(url);\n          }\n        }\n\n        resolvePromise(response, status, headersString);\n        if (!$rootScope.$$phase) $rootScope.$apply();\n      }\n\n\n      /**\n       * Resolves the raw $http promise.\n       */\n      function resolvePromise(response, status, headers) {\n        // normalize internal statuses to 0\n        status = Math.max(status, 0);\n\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n          data: response,\n          status: status,\n          headers: headersGetter(headers),\n          config: config\n        });\n      }\n\n\n      function removePendingReq() {\n        var idx = indexOf($http.pendingRequests, config);\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n      }\n    }\n\n\n    function buildUrl(url, params) {\n          if (!params) return url;\n          var parts = [];\n          forEachSorted(params, function(value, key) {\n            if (value == null || value == undefined) return;\n            if (!isArray(value)) value = [value];\n\n            forEach(value, function(v) {\n              if (isObject(v)) {\n                v = toJson(v);\n              }\n              parts.push(encodeUriQuery(key) + '=' +\n                         encodeUriQuery(v));\n            });\n          });\n          return url + ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\n        }\n\n\n  }];\n}\n\nvar XHR = window.XMLHttpRequest || function() {\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n  throw new Error(\"This browser does not support XMLHttpRequest.\");\n};\n\n\n/**\n * @ngdoc object\n * @name ng.$httpBackend\n * @requires $browser\n * @requires $window\n * @requires $document\n *\n * @description\n * HTTP backend used by the {@link ng.$http service} that delegates to\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n *\n * You should never need to use this service directly, instead use the higher-level abstractions:\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n *\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n * $httpBackend} which can be trained with responses.\n */\nfunction $HttpBackendProvider() {\n  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\n    return createHttpBackend($browser, XHR, $browser.defer, $window.angular.callbacks,\n        $document[0], $window.location.protocol.replace(':', ''));\n  }];\n}\n\nfunction createHttpBackend($browser, XHR, $browserDefer, callbacks, rawDocument, locationProtocol) {\n  // TODO(vojta): fix the signature\n  return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {\n    var status;\n    $browser.$$incOutstandingRequestCount();\n    url = url || $browser.url();\n\n    if (lowercase(method) == 'jsonp') {\n      var callbackId = '_' + (callbacks.counter++).toString(36);\n      callbacks[callbackId] = function(data) {\n        callbacks[callbackId].data = data;\n      };\n\n      var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\n          function() {\n        if (callbacks[callbackId].data) {\n          completeRequest(callback, 200, callbacks[callbackId].data);\n        } else {\n          completeRequest(callback, status || -2);\n        }\n        delete callbacks[callbackId];\n      });\n    } else {\n      var xhr = new XHR();\n      xhr.open(method, url, true);\n      forEach(headers, function(value, key) {\n        if (value) xhr.setRequestHeader(key, value);\n      });\n\n      // In IE6 and 7, this might be called synchronously when xhr.send below is called and the\n      // response is in the cache. the promise api will ensure that to the app code the api is\n      // always async\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState == 4) {\n          var responseHeaders = xhr.getAllResponseHeaders();\n\n          // TODO(vojta): remove once Firefox 21 gets released.\n          // begin: workaround to overcome Firefox CORS http response headers bug\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=608735\n          // Firefox already patched in nightly. Should land in Firefox 21.\n\n          // CORS \"simple response headers\" http://www.w3.org/TR/cors/\n          var value,\n              simpleHeaders = [\"Cache-Control\", \"Content-Language\", \"Content-Type\",\n                                  \"Expires\", \"Last-Modified\", \"Pragma\"];\n          if (!responseHeaders) {\n            responseHeaders = \"\";\n            forEach(simpleHeaders, function (header) {\n              var value = xhr.getResponseHeader(header);\n              if (value) {\n                  responseHeaders += header + \": \" + value + \"\\n\";\n              }\n            });\n          }\n          // end of the workaround.\n\n          // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n          // response and responseType properties were introduced in XHR Level2 spec (supported by IE10)\n          completeRequest(callback,\n              status || xhr.status,\n              (xhr.responseType ? xhr.response : xhr.responseText),\n              responseHeaders);\n        }\n      };\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (responseType) {\n        xhr.responseType = responseType;\n      }\n\n      xhr.send(post || '');\n    }\n\n    if (timeout > 0) {\n      var timeoutId = $browserDefer(timeoutRequest, timeout);\n    } else if (timeout && timeout.then) {\n      timeout.then(timeoutRequest);\n    }\n\n\n    function timeoutRequest() {\n      status = -1;\n      jsonpDone && jsonpDone();\n      xhr && xhr.abort();\n    }\n\n    function completeRequest(callback, status, response, headersString) {\n      // URL_MATCH is defined in src/service/location.js\n      var protocol = (url.match(SERVER_MATCH) || ['', locationProtocol])[1];\n\n      // cancel timeout and subsequent timeout promise resolution\n      timeoutId && $browserDefer.cancel(timeoutId);\n      jsonpDone = xhr = null;\n\n      // fix status code for file protocol (it's always 0)\n      status = (protocol == 'file') ? (response ? 200 : 404) : status;\n\n      // normalize IE bug (http://bugs.jquery.com/ticket/1450)\n      status = status == 1223 ? 204 : status;\n\n      callback(status, response, headersString);\n      $browser.$$completeOutstandingRequest(noop);\n    }\n  };\n\n  function jsonpReq(url, done) {\n    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\n    // - fetches local scripts via XHR and evals them\n    // - adds and immediately removes script elements from the document\n    var script = rawDocument.createElement('script'),\n        doneWrapper = function() {\n          rawDocument.body.removeChild(script);\n          if (done) done();\n        };\n\n    script.type = 'text/javascript';\n    script.src = url;\n\n    if (msie) {\n      script.onreadystatechange = function() {\n        if (/loaded|complete/.test(script.readyState)) doneWrapper();\n      };\n    } else {\n      script.onload = script.onerror = doneWrapper;\n    }\n\n    rawDocument.body.appendChild(script);\n    return doneWrapper;\n  }\n}\n\n/**\n * @ngdoc object\n * @name ng.$locale\n *\n * @description\n * $locale service provides localization rules for various Angular components. As of right now the\n * only public api is:\n *\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n */\nfunction $LocaleProvider(){\n  this.$get = function() {\n    return {\n      id: 'en-us',\n\n      NUMBER_FORMATS: {\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n          { // Decimal Pattern\n            minInt: 1,\n            minFrac: 0,\n            maxFrac: 3,\n            posPre: '',\n            posSuf: '',\n            negPre: '-',\n            negSuf: '',\n            gSize: 3,\n            lgSize: 3\n          },{ //Currency Pattern\n            minInt: 1,\n            minFrac: 2,\n            maxFrac: 2,\n            posPre: '\\u00A4',\n            posSuf: '',\n            negPre: '(\\u00A4',\n            negSuf: ')',\n            gSize: 3,\n            lgSize: 3\n          }\n        ],\n        CURRENCY_SYM: '$'\n      },\n\n      DATETIME_FORMATS: {\n        MONTH: 'January,February,March,April,May,June,July,August,September,October,November,December'\n                .split(','),\n        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n        AMPMS: ['AM','PM'],\n        medium: 'MMM d, y h:mm:ss a',\n        short: 'M/d/yy h:mm a',\n        fullDate: 'EEEE, MMMM d, y',\n        longDate: 'MMMM d, y',\n        mediumDate: 'MMM d, y',\n        shortDate: 'M/d/yy',\n        mediumTime: 'h:mm:ss a',\n        shortTime: 'h:mm a'\n      },\n\n      pluralCat: function(num) {\n        if (num === 1) {\n          return 'one';\n        }\n        return 'other';\n      }\n    };\n  };\n}\n\nfunction $TimeoutProvider() {\n  this.$get = ['$rootScope', '$browser', '$q', '$exceptionHandler',\n       function($rootScope,   $browser,   $q,   $exceptionHandler) {\n    var deferreds = {};\n\n\n     /**\n      * @ngdoc function\n      * @name ng.$timeout\n      * @requires $browser\n      *\n      * @description\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n      * block and delegates any exceptions to\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\n      *\n      * The return value of registering a timeout function is a promise, which will be resolved when\n      * the timeout is reached and the timeout function is executed.\n      *\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n      * synchronously flush the queue of deferred functions.\n      *\n      * @param {function()} fn A function, whose execution should be delayed.\n      * @param {number=} [delay=0] Delay in milliseconds.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\n      *   promise will be resolved with is the return value of the `fn` function.\n      */\n    function timeout(fn, delay, invokeApply) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          timeoutId, cleanup;\n\n      timeoutId = $browser.defer(function() {\n        try {\n          deferred.resolve(fn());\n        } catch(e) {\n          deferred.reject(e);\n          $exceptionHandler(e);\n        }\n\n        if (!skipApply) $rootScope.$apply();\n      }, delay);\n\n      cleanup = function() {\n        delete deferreds[promise.$$timeoutId];\n      };\n\n      promise.$$timeoutId = timeoutId;\n      deferreds[timeoutId] = deferred;\n      promise.then(cleanup, cleanup);\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc function\n      * @name ng.$timeout#cancel\n      * @methodOf ng.$timeout\n      *\n      * @description\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n      * resolved with a rejection.\n      *\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n      *   canceled.\n      */\n    timeout.cancel = function(promise) {\n      if (promise && promise.$$timeoutId in deferreds) {\n        deferreds[promise.$$timeoutId].reject('canceled');\n        return $browser.defer.cancel(promise.$$timeoutId);\n      }\n      return false;\n    };\n\n    return timeout;\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$filterProvider\n * @description\n *\n * Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To\n * achieve this a filter definition consists of a factory function which is annotated with dependencies and is\n * responsible for creating a filter function.\n *\n * <pre>\n *   // Filter registration\n *   function MyModule($provide, $filterProvider) {\n *     // create a service to demonstrate injection (not always needed)\n *     $provide.value('greet', function(name){\n *       return 'Hello ' + name + '!';\n *     });\n *\n *     // register a filter factory which uses the\n *     // greet service to demonstrate DI.\n *     $filterProvider.register('greet', function(greet){\n *       // return the filter function which uses the greet service\n *       // to generate salutation\n *       return function(text) {\n *         // filters need to be forgiving so check input validity\n *         return text && greet(text) || text;\n *       };\n *     });\n *   }\n * </pre>\n *\n * The filter function is registered with the `$injector` under the filter name suffixe with `Filter`.\n * <pre>\n *   it('should be the same instance', inject(\n *     function($filterProvider) {\n *       $filterProvider.register('reverse', function(){\n *         return ...;\n *       });\n *     },\n *     function($filter, reverseFilter) {\n *       expect($filter('reverse')).toBe(reverseFilter);\n *     });\n * </pre>\n *\n *\n * For more information about how angular filters work, and how to create your own filters, see\n * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer\n * Guide.\n */\n/**\n * @ngdoc method\n * @name ng.$filterProvider#register\n * @methodOf ng.$filterProvider\n * @description\n * Register filter factory function.\n *\n * @param {String} name Name of the filter.\n * @param {function} fn The filter factory function which is injectable.\n */\n\n\n/**\n * @ngdoc function\n * @name ng.$filter\n * @function\n * @description\n * Filters are used for formatting data displayed to the user.\n *\n * The general syntax in templates is as follows:\n *\n *         {{ expression [| filter_name[:parameter_value] ... ] }}\n *\n * @param {String} name Name of the filter function to retrieve\n * @return {Function} the filter function\n */\n$FilterProvider.$inject = ['$provide'];\nfunction $FilterProvider($provide) {\n  var suffix = 'Filter';\n\n  function register(name, factory) {\n    return $provide.factory(name + suffix, factory);\n  }\n  this.register = register;\n\n  this.$get = ['$injector', function($injector) {\n    return function(name) {\n      return $injector.get(name + suffix);\n    }\n  }];\n\n  ////////////////////////////////////////\n\n  register('currency', currencyFilter);\n  register('date', dateFilter);\n  register('filter', filterFilter);\n  register('json', jsonFilter);\n  register('limitTo', limitToFilter);\n  register('lowercase', lowercaseFilter);\n  register('number', numberFilter);\n  register('orderBy', orderByFilter);\n  register('uppercase', uppercaseFilter);\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:filter\n * @function\n *\n * @description\n * Selects a subset of items from `array` and returns it as a new array.\n *\n * Note: This function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array} array The source array.\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\n *   `array`.\n *\n *   Can be one of:\n *\n *   - `string`: Predicate that results in a substring match using the value of `expression`\n *     string. All strings or objects with string properties in `array` that contain this string\n *     will be returned. The predicate can be negated by prefixing the string with `!`.\n *\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n *     property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n *     property of the object. That's equivalent to the simple substring match with a `string`\n *     as described above.\n *\n *   - `function`: A predicate function can be used to write arbitrary filters. The function is\n *     called for each element of `array`. The final result is an array of those elements that\n *     the predicate returned true for.\n *\n * @param {function(expected, actual)|true|undefined} comparator Comparator which is used in\n *     determining if the expected value (from the filter expression) and actual value (from\n *     the object in the array) should be considered a match.\n *\n *   Can be one of:\n *\n *     - `function(expected, actual)`:\n *       The function will be given the object value and the predicate value to compare and\n *       should return true if the item should be included in filtered result.\n *\n *     - `true`: A shorthand for `function(expected, actual) { return angular.equals(expected, actual)}`.\n *       this is essentially strict comparison of expected and actual.\n *\n *     - `false|undefined`: A short hand for a function which will look for a substring match in case\n *       insensitive way.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                                {name:'Mary', phone:'800-BIG-MARY'},\n                                {name:'Mike', phone:'555-4321'},\n                                {name:'Adam', phone:'555-5678'},\n                                {name:'Julie', phone:'555-8765'},\n                                {name:'Juliette', phone:'555-5678'}]\"></div>\n\n       Search: <input ng-model=\"searchText\">\n       <table id=\"searchTextResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:searchText\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n       <hr>\n       Any: <input ng-model=\"search.$\"> <br>\n       Name only <input ng-model=\"search.name\"><br>\n       Phone only <input ng-model=\"search.phone\"><br>\n       Equality <input type=\"checkbox\" ng-model=\"strict\"><br>\n       <table id=\"searchObjResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:search:strict\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n     </doc:source>\n     <doc:scenario>\n       it('should search across all fields when filtering with a string', function() {\n         input('searchText').enter('m');\n         expect(repeater('#searchTextResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Mike', 'Adam']);\n\n         input('searchText').enter('76');\n         expect(repeater('#searchTextResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['John', 'Julie']);\n       });\n\n       it('should search in specific fields when filtering with a predicate object', function() {\n         input('search.$').enter('i');\n         expect(repeater('#searchObjResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Mike', 'Julie', 'Juliette']);\n       });\n       it('should use a equal comparison when comparator is true', function() {\n         input('search.name').enter('Julie');\n         input('strict').check();\n         expect(repeater('#searchObjResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Julie']);\n       });\n     </doc:scenario>\n   </doc:example>\n */\nfunction filterFilter() {\n  return function(array, expression, comperator) {\n    if (!isArray(array)) return array;\n    var predicates = [];\n    predicates.check = function(value) {\n      for (var j = 0; j < predicates.length; j++) {\n        if(!predicates[j](value)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    switch(typeof comperator) {\n      case \"function\":\n        break;\n      case \"boolean\":\n        if(comperator == true) {\n          comperator = function(obj, text) {\n            return angular.equals(obj, text);\n          }\n          break;\n        }\n      default:\n        comperator = function(obj, text) {\n          text = (''+text).toLowerCase();\n          return (''+obj).toLowerCase().indexOf(text) > -1\n        };\n    }\n    var search = function(obj, text){\n      if (typeof text == 'string' && text.charAt(0) === '!') {\n        return !search(obj, text.substr(1));\n      }\n      switch (typeof obj) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          return comperator(obj, text);\n        case \"object\":\n          switch (typeof text) {\n            case \"object\":\n              return comperator(obj, text);\n              break;\n            default:\n              for ( var objKey in obj) {\n                if (objKey.charAt(0) !== '$' && search(obj[objKey], text)) {\n                  return true;\n                }\n              }\n              break;\n          }\n          return false;\n        case \"array\":\n          for ( var i = 0; i < obj.length; i++) {\n            if (search(obj[i], text)) {\n              return true;\n            }\n          }\n          return false;\n        default:\n          return false;\n      }\n    };\n    switch (typeof expression) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        expression = {$:expression};\n      case \"object\":\n        for (var key in expression) {\n          if (key == '$') {\n            (function() {\n              if (!expression[key]) return;\n              var path = key\n              predicates.push(function(value) {\n                return search(value, expression[path]);\n              });\n            })();\n          } else {\n            (function() {\n              if (!expression[key]) return;\n              var path = key;\n              predicates.push(function(value) {\n                return search(getter(value,path), expression[path]);\n              });\n            })();\n          }\n        }\n        break;\n      case 'function':\n        predicates.push(expression);\n        break;\n      default:\n        return array;\n    }\n    var filtered = [];\n    for ( var j = 0; j < array.length; j++) {\n      var value = array[j];\n      if (predicates.check(value)) {\n        filtered.push(value);\n      }\n    }\n    return filtered;\n  }\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:currency\n * @function\n *\n * @description\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n * symbol for current locale is used.\n *\n * @param {number} amount Input to filter.\n * @param {string=} symbol Currency symbol or identifier to be displayed.\n * @returns {string} Formatted number.\n *\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.amount = 1234.56;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input type=\"number\" ng-model=\"amount\"> <br>\n         default currency symbol ($): {{amount | currency}}<br>\n         custom currency identifier (USD$): {{amount | currency:\"USD$\"}}\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should init with 1234.56', function() {\n         expect(binding('amount | currency')).toBe('$1,234.56');\n         expect(binding('amount | currency:\"USD$\"')).toBe('USD$1,234.56');\n       });\n       it('should update', function() {\n         input('amount').enter('-1234');\n         expect(binding('amount | currency')).toBe('($1,234.00)');\n         expect(binding('amount | currency:\"USD$\"')).toBe('(USD$1,234.00)');\n       });\n     </doc:scenario>\n   </doc:example>\n */\ncurrencyFilter.$inject = ['$locale'];\nfunction currencyFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(amount, currencySymbol){\n    if (isUndefined(currencySymbol)) currencySymbol = formats.CURRENCY_SYM;\n    return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).\n                replace(/\\u00A4/g, currencySymbol);\n  };\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:number\n * @function\n *\n * @description\n * Formats a number as text.\n *\n * If the input is not a number an empty string is returned.\n *\n * @param {number|string} number Number to format.\n * @param {(number|string)=} [fractionSize=2] Number of decimal places to round the number to.\n * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.val = 1234.56789;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Enter number: <input ng-model='val'><br>\n         Default formatting: {{val | number}}<br>\n         No fractions: {{val | number:0}}<br>\n         Negative number: {{-val | number:4}}\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should format numbers', function() {\n         expect(binding('val | number')).toBe('1,234.568');\n         expect(binding('val | number:0')).toBe('1,235');\n         expect(binding('-val | number:4')).toBe('-1,234.5679');\n       });\n\n       it('should update', function() {\n         input('val').enter('3374.333');\n         expect(binding('val | number')).toBe('3,374.333');\n         expect(binding('val | number:0')).toBe('3,374');\n         expect(binding('-val | number:4')).toBe('-3,374.3330');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n\n\nnumberFilter.$inject = ['$locale'];\nfunction numberFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(number, fractionSize) {\n    return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n      fractionSize);\n  };\n}\n\nvar DECIMAL_SEP = '.';\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n  if (isNaN(number) || !isFinite(number)) return '';\n\n  var isNegative = number < 0;\n  number = Math.abs(number);\n  var numStr = number + '',\n      formatedText = '',\n      parts = [];\n\n  var hasExponent = false;\n  if (numStr.indexOf('e') !== -1) {\n    var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\n      numStr = '0';\n    } else {\n      formatedText = numStr;\n      hasExponent = true;\n    }\n  }\n\n  if (!hasExponent) {\n    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\n    // determine fractionSize if it is not specified\n    if (isUndefined(fractionSize)) {\n      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n    }\n\n    var pow = Math.pow(10, fractionSize);\n    number = Math.round(number * pow) / pow;\n    var fraction = ('' + number).split(DECIMAL_SEP);\n    var whole = fraction[0];\n    fraction = fraction[1] || '';\n\n    var pos = 0,\n        lgroup = pattern.lgSize,\n        group = pattern.gSize;\n\n    if (whole.length >= (lgroup + group)) {\n      pos = whole.length - lgroup;\n      for (var i = 0; i < pos; i++) {\n        if ((pos - i)%group === 0 && i !== 0) {\n          formatedText += groupSep;\n        }\n        formatedText += whole.charAt(i);\n      }\n    }\n\n    for (i = pos; i < whole.length; i++) {\n      if ((whole.length - i)%lgroup === 0 && i !== 0) {\n        formatedText += groupSep;\n      }\n      formatedText += whole.charAt(i);\n    }\n\n    // format fraction part.\n    while(fraction.length < fractionSize) {\n      fraction += '0';\n    }\n\n    if (fractionSize && fractionSize !== \"0\") formatedText += decimalSep + fraction.substr(0, fractionSize);\n  }\n\n  parts.push(isNegative ? pattern.negPre : pattern.posPre);\n  parts.push(formatedText);\n  parts.push(isNegative ? pattern.negSuf : pattern.posSuf);\n  return parts.join('');\n}\n\nfunction padNumber(num, digits, trim) {\n  var neg = '';\n  if (num < 0) {\n    neg =  '-';\n    num = -num;\n  }\n  num = '' + num;\n  while(num.length < digits) num = '0' + num;\n  if (trim)\n    num = num.substr(num.length - digits);\n  return neg + num;\n}\n\n\nfunction dateGetter(name, size, offset, trim) {\n  offset = offset || 0;\n  return function(date) {\n    var value = date['get' + name]();\n    if (offset > 0 || value > -offset)\n      value += offset;\n    if (value === 0 && offset == -12 ) value = 12;\n    return padNumber(value, size, trim);\n  };\n}\n\nfunction dateStrGetter(name, shortForm) {\n  return function(date, formats) {\n    var value = date['get' + name]();\n    var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date) {\n  var zone = -1 * date.getTimezoneOffset();\n  var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                padNumber(Math.abs(zone % 60), 2);\n\n  return paddedZone;\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4),\n    yy: dateGetter('FullYear', 2, 0, true),\n     y: dateGetter('FullYear', 1),\n  MMMM: dateStrGetter('Month'),\n   MMM: dateStrGetter('Month', true),\n    MM: dateGetter('Month', 2, 1),\n     M: dateGetter('Month', 1, 1),\n    dd: dateGetter('Date', 2),\n     d: dateGetter('Date', 1),\n    HH: dateGetter('Hours', 2),\n     H: dateGetter('Hours', 1),\n    hh: dateGetter('Hours', 2, -12),\n     h: dateGetter('Hours', 1, -12),\n    mm: dateGetter('Minutes', 2),\n     m: dateGetter('Minutes', 1),\n    ss: dateGetter('Seconds', 2),\n     s: dateGetter('Seconds', 1),\n     // while ISO 8601 requires fractions to be prefixed with `.` or `,` \n     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n   sss: dateGetter('Milliseconds', 3),\n  EEEE: dateStrGetter('Day'),\n   EEE: dateStrGetter('Day', true),\n     a: ampmGetter,\n     Z: timeZoneGetter\n};\n\nvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,\n    NUMBER_STRING = /^\\d+$/;\n\n/**\n * @ngdoc filter\n * @name ng.filter:date\n * @function\n *\n * @description\n *   Formats `date` to a string based on the requested `format`.\n *\n *   `format` string can be composed of the following elements:\n *\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n *   * `'MMMM'`: Month in year (January-December)\n *   * `'MMM'`: Month in year (Jan-Dec)\n *   * `'MM'`: Month in year, padded (01-12)\n *   * `'M'`: Month in year (1-12)\n *   * `'dd'`: Day in month, padded (01-31)\n *   * `'d'`: Day in month (1-31)\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n *   * `'EEE'`: Day in Week, (Sun-Sat)\n *   * `'HH'`: Hour in day, padded (00-23)\n *   * `'H'`: Hour in day (0-23)\n *   * `'hh'`: Hour in am/pm, padded (01-12)\n *   * `'h'`: Hour in am/pm, (1-12)\n *   * `'mm'`: Minute in hour, padded (00-59)\n *   * `'m'`: Minute in hour (0-59)\n *   * `'ss'`: Second in minute, padded (00-59)\n *   * `'s'`: Second in minute (0-59)\n *   * `'.sss' or ',sss'`: Millisecond in second, padded (000-999)\n *   * `'a'`: am/pm marker\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n *\n *   `format` string can also be one of the following predefined\n *   {@link guide/i18n localizable formats}:\n *\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n *     (e.g. Sep 3, 2010 12:05:08 pm)\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale\n *     (e.g. Friday, September 3, 2010)\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)\n *\n *   `format` string can contain literal values. These need to be quoted with single quotes (e.g.\n *   `\"h 'in the morning'\"`). In order to output single quote, use two single quotes in a sequence\n *   (e.g. `\"h o''clock\"`).\n *\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.SSSZ and its\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n *    specified in the string input, the time is considered to be in the local timezone.\n * @param {string=} format Formatting rules (see Description). If not specified,\n *    `mediumDate` is used.\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n           {{1288323623006 | date:'medium'}}<br>\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n          {{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}<br>\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n          {{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}<br>\n     </doc:source>\n     <doc:scenario>\n       it('should format date', function() {\n         expect(binding(\"1288323623006 | date:'medium'\")).\n            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n         expect(binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).\n            toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n         expect(binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).\n            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n       });\n     </doc:scenario>\n   </doc:example>\n */\ndateFilter.$inject = ['$locale'];\nfunction dateFilter($locale) {\n\n\n  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n                     // 1        2       3         4          5          6          7          8  9     10      11\n  function jsonStringToDate(string) {\n    var match;\n    if (match = string.match(R_ISO8601_STR)) {\n      var date = new Date(0),\n          tzHour = 0,\n          tzMin  = 0,\n          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\n          timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n      if (match[9]) {\n        tzHour = int(match[9] + match[10]);\n        tzMin = int(match[9] + match[11]);\n      }\n      dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));\n      var h = int(match[4]||0) - tzHour;\n      var m = int(match[5]||0) - tzMin\n      var s = int(match[6]||0);\n      var ms = Math.round(parseFloat('0.' + (match[7]||0)) * 1000);\n      timeSetter.call(date, h, m, s, ms);\n      return date;\n    }\n    return string;\n  }\n\n\n  return function(date, format) {\n    var text = '',\n        parts = [],\n        fn, match;\n\n    format = format || 'mediumDate';\n    format = $locale.DATETIME_FORMATS[format] || format;\n    if (isString(date)) {\n      if (NUMBER_STRING.test(date)) {\n        date = int(date);\n      } else {\n        date = jsonStringToDate(date);\n      }\n    }\n\n    if (isNumber(date)) {\n      date = new Date(date);\n    }\n\n    if (!isDate(date)) {\n      return date;\n    }\n\n    while(format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = concat(parts, match, 1);\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    forEach(parts, function(value){\n      fn = DATE_FORMATS[value];\n      text += fn ? fn(date, $locale.DATETIME_FORMATS)\n                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n    });\n\n    return text;\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:json\n * @function\n *\n * @description\n *   Allows you to convert a JavaScript object into JSON string.\n *\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n *   the binding is automatically converted to JSON.\n *\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n * @returns {string} JSON string.\n *\n *\n * @example:\n   <doc:example>\n     <doc:source>\n       <pre>{{ {'name':'value'} | json }}</pre>\n     </doc:source>\n     <doc:scenario>\n       it('should jsonify filtered objects', function() {\n         expect(binding(\"{'name':'value'}\")).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n       });\n     </doc:scenario>\n   </doc:example>\n *\n */\nfunction jsonFilter() {\n  return function(object) {\n    return toJson(object, true);\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:lowercase\n * @function\n * @description\n * Converts string to lowercase.\n * @see angular.lowercase\n */\nvar lowercaseFilter = valueFn(lowercase);\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:uppercase\n * @function\n * @description\n * Converts string to uppercase.\n * @see angular.uppercase\n */\nvar uppercaseFilter = valueFn(uppercase);\n\n/**\n * @ngdoc function\n * @name ng.filter:limitTo\n * @function\n *\n * @description\n * Creates a new array or string containing only a specified number of elements. The elements\n * are taken from either the beginning or the end of the source array or string, as specified by\n * the value and sign (positive or negative) of `limit`.\n *\n * Note: This function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array|string} input Source array or string to be limited.\n * @param {string|number} limit The length of the returned array or string. If the `limit` number \n *     is positive, `limit` number of items from the beginning of the source array/string are copied.\n *     If the number is negative, `limit` number  of items from the end of the source array/string \n *     are copied. The `limit` will be trimmed if it exceeds `array.length`\n * @returns {Array|string} A new sub-array or substring of length `limit` or less if input array\n *     had less than `limit` elements.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.numbers = [1,2,3,4,5,6,7,8,9];\n           $scope.letters = \"abcdefghi\";\n           $scope.numLimit = 3;\n           $scope.letterLimit = 3;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Limit {{numbers}} to: <input type=\"integer\" ng-model=\"numLimit\">\n         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n         Limit {{letters}} to: <input type=\"integer\" ng-model=\"letterLimit\">\n         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should limit the number array to first three items', function() {\n         expect(element('.doc-example-live input[ng-model=numLimit]').val()).toBe('3');\n         expect(element('.doc-example-live input[ng-model=letterLimit]').val()).toBe('3');\n         expect(binding('numbers | limitTo:numLimit')).toEqual('[1,2,3]');\n         expect(binding('letters | limitTo:letterLimit')).toEqual('abc');\n       });\n\n       it('should update the output when -3 is entered', function() {\n         input('numLimit').enter(-3);\n         input('letterLimit').enter(-3);\n         expect(binding('numbers | limitTo:numLimit')).toEqual('[7,8,9]');\n         expect(binding('letters | limitTo:letterLimit')).toEqual('ghi');\n       });\n\n       it('should not exceed the maximum size of input array', function() {\n         input('numLimit').enter(100);\n         input('letterLimit').enter(100);\n         expect(binding('numbers | limitTo:numLimit')).toEqual('[1,2,3,4,5,6,7,8,9]');\n         expect(binding('letters | limitTo:letterLimit')).toEqual('abcdefghi');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nfunction limitToFilter(){\n  return function(input, limit) {\n    if (!isArray(input) && !isString(input)) return input;\n    \n    limit = int(limit);\n\n    if (isString(input)) {\n      //NaN check on limit\n      if (limit) {\n        return limit >= 0 ? input.slice(0, limit) : input.slice(limit, input.length);\n      } else {\n        return \"\";\n      }\n    }\n\n    var out = [],\n      i, n;\n\n    // if abs(limit) exceeds maximum length, trim it\n    if (limit > input.length)\n      limit = input.length;\n    else if (limit < -input.length)\n      limit = -input.length;\n\n    if (limit > 0) {\n      i = 0;\n      n = limit;\n    } else {\n      i = input.length + limit;\n      n = input.length;\n    }\n\n    for (; i<n; i++) {\n      out.push(input[i]);\n    }\n\n    return out;\n  }\n}\n\n/**\n * @ngdoc function\n * @name ng.filter:orderBy\n * @function\n *\n * @description\n * Orders a specified `array` by the `expression` predicate.\n *\n * Note: this function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array} array The array to sort.\n * @param {function(*)|string|Array.<(function(*)|string)>} expression A predicate to be\n *    used by the comparator to determine the order of elements.\n *\n *    Can be one of:\n *\n *    - `function`: Getter function. The result of this function will be sorted using the\n *      `<`, `=`, `>` operator.\n *    - `string`: An Angular expression which evaluates to an object to order by, such as 'name'\n *      to sort by a property called 'name'. Optionally prefixed with `+` or `-` to control\n *      ascending or descending sort order (for example, +name or -name).\n *    - `Array`: An array of function or string predicates. The first predicate in the array\n *      is used for sorting, but when two items are equivalent, the next predicate is used.\n *\n * @param {boolean=} reverse Reverse the order the array.\n * @returns {Array} Sorted copy of the source array.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.friends =\n               [{name:'John', phone:'555-1212', age:10},\n                {name:'Mary', phone:'555-9876', age:19},\n                {name:'Mike', phone:'555-4321', age:21},\n                {name:'Adam', phone:'555-5678', age:35},\n                {name:'Julie', phone:'555-8765', age:29}]\n           $scope.predicate = '-age';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n         <hr/>\n         [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n         <table class=\"friend\">\n           <tr>\n             <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n                 (<a href ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n             <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n             <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should be reverse ordered by aged', function() {\n         expect(binding('predicate')).toBe('-age');\n         expect(repeater('table.friend', 'friend in friends').column('friend.age')).\n           toEqual(['35', '29', '21', '19', '10']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Adam', 'Julie', 'Mike', 'Mary', 'John']);\n       });\n\n       it('should reorder the table when user selects different predicate', function() {\n         element('.doc-example-live a:contains(\"Name\")').click();\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Adam', 'John', 'Julie', 'Mary', 'Mike']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.age')).\n           toEqual(['35', '10', '29', '19', '21']);\n\n         element('.doc-example-live a:contains(\"Phone\")').click();\n         expect(repeater('table.friend', 'friend in friends').column('friend.phone')).\n           toEqual(['555-9876', '555-8765', '555-5678', '555-4321', '555-1212']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Julie', 'Adam', 'Mike', 'John']);\n       });\n     </doc:scenario>\n   </doc:example>\n */\norderByFilter.$inject = ['$parse'];\nfunction orderByFilter($parse){\n  return function(array, sortPredicate, reverseOrder) {\n    if (!isArray(array)) return array;\n    if (!sortPredicate) return array;\n    sortPredicate = isArray(sortPredicate) ? sortPredicate: [sortPredicate];\n    sortPredicate = map(sortPredicate, function(predicate){\n      var descending = false, get = predicate || identity;\n      if (isString(predicate)) {\n        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\n          descending = predicate.charAt(0) == '-';\n          predicate = predicate.substring(1);\n        }\n        get = $parse(predicate);\n      }\n      return reverseComparator(function(a,b){\n        return compare(get(a),get(b));\n      }, descending);\n    });\n    var arrayCopy = [];\n    for ( var i = 0; i < array.length; i++) { arrayCopy.push(array[i]); }\n    return arrayCopy.sort(reverseComparator(comparator, reverseOrder));\n\n    function comparator(o1, o2){\n      for ( var i = 0; i < sortPredicate.length; i++) {\n        var comp = sortPredicate[i](o1, o2);\n        if (comp !== 0) return comp;\n      }\n      return 0;\n    }\n    function reverseComparator(comp, descending) {\n      return toBoolean(descending)\n          ? function(a,b){return comp(b,a);}\n          : comp;\n    }\n    function compare(v1, v2){\n      var t1 = typeof v1;\n      var t2 = typeof v2;\n      if (t1 == t2) {\n        if (t1 == \"string\") v1 = v1.toLowerCase();\n        if (t1 == \"string\") v2 = v2.toLowerCase();\n        if (v1 === v2) return 0;\n        return v1 < v2 ? -1 : 1;\n      } else {\n        return t1 < t2 ? -1 : 1;\n      }\n    }\n  }\n}\n\nfunction ngDirective(directive) {\n  if (isFunction(directive)) {\n    directive = {\n      link: directive\n    }\n  }\n  directive.restrict = directive.restrict || 'AC';\n  return valueFn(directive);\n}\n\n/**\n * @ngdoc directive\n * @name ng.directive:a\n * @restrict E\n *\n * @description\n * Modifies the default behavior of html A tag, so that the default action is prevented when href\n * attribute is empty.\n *\n * The reasoning for this change is to allow easy creation of action links with `ngClick` directive\n * without changing the location or causing page reloads, e.g.:\n * `<a href=\"\" ng-click=\"model.$save()\">Save</a>`\n */\nvar htmlAnchorDirective = valueFn({\n  restrict: 'E',\n  compile: function(element, attr) {\n\n    if (msie <= 8) {\n\n      // turn <a href ng-click=\"..\">link</a> into a stylable link in IE\n      // but only if it doesn't have name attribute, in which case it's an anchor\n      if (!attr.href && !attr.name) {\n        attr.$set('href', '');\n      }\n\n      // add a comment node to anchors to workaround IE bug that causes element content to be reset\n      // to new attribute content if attribute is updated with value containing @ and element also\n      // contains value with @\n      // see issue #1949\n      element.append(document.createComment('IE fix'));\n    }\n\n    return function(scope, element) {\n      element.bind('click', function(event){\n        // if we have no href url, then don't navigate anywhere.\n        if (!element.attr('href')) {\n          event.preventDefault();\n        }\n      });\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngHref\n * @restrict A\n *\n * @description\n * Using Angular markup like {{hash}} in an href attribute makes\n * the page open to a wrong URL, if the user clicks that link before\n * angular has a chance to replace the {{hash}} with actual URL, the\n * link will be broken and will most likely return a 404 error.\n * The `ngHref` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <a href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * @element A\n * @param {template} ngHref any string which can contain `{{}}` markup.\n *\n * @example\n * This example uses `link` variable inside `href` attribute:\n    <doc:example>\n      <doc:source>\n        <input ng-model=\"value\" /><br />\n        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n      </doc:source>\n      <doc:scenario>\n        it('should execute ng-click but not reload when href without value', function() {\n          element('#link-1').click();\n          expect(input('value').val()).toEqual('1');\n          expect(element('#link-1').attr('href')).toBe(\"\");\n        });\n\n        it('should execute ng-click but not reload when href empty string', function() {\n          element('#link-2').click();\n          expect(input('value').val()).toEqual('2');\n          expect(element('#link-2').attr('href')).toBe(\"\");\n        });\n\n        it('should execute ng-click and change url when ng-href specified', function() {\n          expect(element('#link-3').attr('href')).toBe(\"/123\");\n\n          element('#link-3').click();\n          expect(browser().window().path()).toEqual('/123');\n        });\n\n        it('should execute ng-click but not reload when href empty string and name specified', function() {\n          element('#link-4').click();\n          expect(input('value').val()).toEqual('4');\n          expect(element('#link-4').attr('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when no href but name specified', function() {\n          element('#link-5').click();\n          expect(input('value').val()).toEqual('5');\n          expect(element('#link-5').attr('href')).toBe(undefined);\n        });\n\n        it('should only change url when only ng-href', function() {\n          input('value').enter('6');\n          expect(element('#link-6').attr('href')).toBe('6');\n\n          element('#link-6').click();\n          expect(browser().location().url()).toEqual('/6');\n        });\n      </doc:scenario>\n    </doc:example>\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSrc\n * @restrict A\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrc` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * @element IMG\n * @param {template} ngSrc any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSrcset\n * @restrict A\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrcset` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n * </pre>\n *\n * @element IMG\n * @param {template} ngSrcset any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngDisabled\n * @restrict A\n *\n * @description\n *\n * The following markup will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:\n * <pre>\n * <div ng-init=\"scope = { isDisabled: false }\">\n *  <button disabled=\"{{scope.isDisabled}}\">Disabled</button>\n * </div>\n * </pre>\n *\n * The HTML specs do not require browsers to preserve the special attributes such as disabled.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngDisabled` directive.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n      </doc:source>\n      <doc:scenario>\n        it('should toggle button', function() {\n          expect(element('.doc-example-live :button').prop('disabled')).toBeFalsy();\n          input('checked').check();\n          expect(element('.doc-example-live :button').prop('disabled')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {expression} ngDisabled Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngChecked\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as checked.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngChecked` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n      </doc:source>\n      <doc:scenario>\n        it('should check both checkBoxes', function() {\n          expect(element('.doc-example-live #checkSlave').prop('checked')).toBeFalsy();\n          input('master').check();\n          expect(element('.doc-example-live #checkSlave').prop('checked')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {expression} ngChecked Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMultiple\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as multiple.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngMultiple` directive.\n *\n * @example\n     <doc:example>\n       <doc:source>\n         Check me check multiple: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n         <select id=\"select\" ng-multiple=\"checked\">\n           <option>Misko</option>\n           <option>Igor</option>\n           <option>Vojta</option>\n           <option>Di</option>\n         </select>\n       </doc:source>\n       <doc:scenario>\n         it('should toggle multiple', function() {\n           expect(element('.doc-example-live #select').prop('multiple')).toBeFalsy();\n           input('checked').check();\n           expect(element('.doc-example-live #select').prop('multiple')).toBeTruthy();\n         });\n       </doc:scenario>\n     </doc:example>\n *\n * @element SELECT\n * @param {expression} ngMultiple Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngReadonly\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as readonly.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngReadonly` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n      </doc:source>\n      <doc:scenario>\n        it('should toggle readonly attr', function() {\n          expect(element('.doc-example-live :text').prop('readonly')).toBeFalsy();\n          input('checked').check();\n          expect(element('.doc-example-live :text').prop('readonly')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {string} expression Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSelected\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as selected.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduced the `ngSelected` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n        <select>\n          <option>Hello!</option>\n          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n        </select>\n      </doc:source>\n      <doc:scenario>\n        it('should select Greetings!', function() {\n          expect(element('.doc-example-live #greet').prop('selected')).toBeFalsy();\n          input('selected').check();\n          expect(element('.doc-example-live #greet').prop('selected')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element OPTION\n * @param {string} expression Angular expression that will be evaluated.\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngOpen\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as open.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngOpen` directive.\n *\n * @example\n     <doc:example>\n       <doc:source>\n         Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"><br/>\n         <details id=\"details\" ng-open=\"open\">\n            <summary>Show/Hide me</summary>\n         </details>\n       </doc:source>\n       <doc:scenario>\n         it('should toggle open', function() {\n           expect(element('#details').prop('open')).toBeFalsy();\n           input('open').check();\n           expect(element('#details').prop('open')).toBeTruthy();\n         });\n       </doc:scenario>\n     </doc:example>\n *\n * @element DETAILS\n * @param {string} expression Angular expression that will be evaluated.\n */\n\nvar ngAttributeAliasDirectives = {};\n\n\n// boolean attrs are evaluated\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 100,\n      compile: function() {\n        return function(scope, element, attr) {\n          scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n            attr.$set(attrName, !!value);\n          });\n        };\n      }\n    };\n  };\n});\n\n\n// ng-src, ng-srcset, ng-href are interpolated\nforEach(['src', 'srcset', 'href'], function(attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 99, // it needs to run after the attributes are interpolated\n      link: function(scope, element, attr) {\n        attr.$observe(normalized, function(value) {\n          if (!value)\n             return;\n\n          attr.$set(attrName, value);\n\n          // on IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n          // to set the property as well to achieve the desired effect.\n          // we use attr[attrName] value since $set can sanitize the url.\n          if (msie) element.prop(attrName, attr[attrName]);\n        });\n      }\n    };\n  };\n});\n\nvar nullFormCtrl = {\n  $addControl: noop,\n  $removeControl: noop,\n  $setValidity: noop,\n  $setDirty: noop,\n  $setPristine: noop\n};\n\n/**\n * @ngdoc object\n * @name ng.directive:form.FormController\n *\n * @property {boolean} $pristine True if user has not interacted with the form yet.\n * @property {boolean} $dirty True if user has already interacted with the form.\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\n *\n * @property {Object} $error Is an object hash, containing references to all invalid controls or\n *  forms, where:\n *\n *  - keys are validation tokens (error names) — such as `required`, `url` or `email`),\n *  - values are arrays of controls or forms that are invalid with given error.\n *\n * @description\n * `FormController` keeps track of all its controls and nested forms as well as state of them,\n * such as being valid/invalid or dirty/pristine.\n *\n * Each {@link ng.directive:form form} directive creates an instance\n * of `FormController`.\n *\n */\n//asks for $scope to fool the BC controller module\nFormController.$inject = ['$element', '$attrs', '$scope'];\nfunction FormController(element, attrs) {\n  var form = this,\n      parentForm = element.parent().controller('form') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      errors = form.$error = {},\n      controls = [];\n\n  // init state\n  form.$name = attrs.name;\n  form.$dirty = false;\n  form.$pristine = true;\n  form.$valid = true;\n  form.$invalid = false;\n\n  parentForm.$addControl(form);\n\n  // Setup initial state of the control\n  element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    element.\n      removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).\n      addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  form.$addControl = function(control) {\n    controls.push(control);\n\n    if (control.$name && !form.hasOwnProperty(control.$name)) {\n      form[control.$name] = control;\n    }\n  };\n\n  form.$removeControl = function(control) {\n    if (control.$name && form[control.$name] === control) {\n      delete form[control.$name];\n    }\n    forEach(errors, function(queue, validationToken) {\n      form.$setValidity(validationToken, true, control);\n    });\n\n    arrayRemove(controls, control);\n  };\n\n  form.$setValidity = function(validationToken, isValid, control) {\n    var queue = errors[validationToken];\n\n    if (isValid) {\n      if (queue) {\n        arrayRemove(queue, control);\n        if (!queue.length) {\n          invalidCount--;\n          if (!invalidCount) {\n            toggleValidCss(isValid);\n            form.$valid = true;\n            form.$invalid = false;\n          }\n          errors[validationToken] = false;\n          toggleValidCss(true, validationToken);\n          parentForm.$setValidity(validationToken, true, form);\n        }\n      }\n\n    } else {\n      if (!invalidCount) {\n        toggleValidCss(isValid);\n      }\n      if (queue) {\n        if (includes(queue, control)) return;\n      } else {\n        errors[validationToken] = queue = [];\n        invalidCount++;\n        toggleValidCss(false, validationToken);\n        parentForm.$setValidity(validationToken, false, form);\n      }\n      queue.push(control);\n\n      form.$valid = false;\n      form.$invalid = true;\n    }\n  };\n\n  form.$setDirty = function() {\n    element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);\n    form.$dirty = true;\n    form.$pristine = false;\n    parentForm.$setDirty();\n  };\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:form.FormController#$setPristine\n   * @methodOf ng.directive:form.FormController\n   *\n   * @description\n   * Sets the form to its pristine state.\n   *\n   * This method can be called to remove the 'ng-dirty' class and set the form to its pristine\n   * state (ng-pristine class). This method will also propagate to all the controls contained\n   * in this form.\n   *\n   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after\n   * saving or resetting it.\n   */\n  form.$setPristine = function () {\n    element.removeClass(DIRTY_CLASS).addClass(PRISTINE_CLASS);\n    form.$dirty = false;\n    form.$pristine = true;\n    forEach(controls, function(control) {\n      control.$setPristine();\n    });\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngForm\n * @restrict EAC\n *\n * @description\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n * sub-group of controls needs to be determined.\n *\n * @param {string=} name|ngForm Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n */\n\n /**\n * @ngdoc directive\n * @name ng.directive:form\n * @restrict E\n *\n * @description\n * Directive that instantiates\n * {@link ng.directive:form.FormController FormController}.\n *\n * If `name` attribute is specified, the form controller is published onto the current scope under\n * this name.\n *\n * # Alias: {@link ng.directive:ngForm `ngForm`}\n *\n * In angular forms can be nested. This means that the outer form is valid when all of the child\n * forms are valid as well. However browsers do not allow nesting of `<form>` elements, for this\n * reason angular provides {@link ng.directive:ngForm `ngForm`} alias\n * which behaves identical to `<form>` but allows form nesting.\n *\n *\n * # CSS classes\n *  - `ng-valid` Is set if the form is valid.\n *  - `ng-invalid` Is set if the form is invalid.\n *  - `ng-pristine` Is set if the form is pristine.\n *  - `ng-dirty` Is set if the form is dirty.\n *\n *\n * # Submitting a form and preventing default action\n *\n * Since the role of forms in client-side Angular applications is different than in classical\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\n * to handle the form submission in application specific way.\n *\n * For this reason, Angular prevents the default action (form submission to the server) unless the\n * `<form>` element has an `action` attribute specified.\n *\n * You can use one of the following two ways to specify what javascript method should be called when\n * a form is submitted:\n *\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n * - {@link ng.directive:ngClick ngClick} directive on the first\n  *  button or input field of type submit (input[type=submit])\n *\n * To prevent double execution of the handler, use only one of ngSubmit or ngClick directives. This\n * is because of the following form submission rules coming from the html spec:\n *\n * - If a form has only one input field then hitting enter in this field triggers form submit\n * (`ngSubmit`)\n * - if a form has has 2+ input fields and no buttons or input[type=submit] then hitting enter\n * doesn't trigger submit\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n *\n * @param {string=} name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.userType = 'guest';\n         }\n       </script>\n       <form name=\"myForm\" ng-controller=\"Ctrl\">\n         userType: <input name=\"input\" ng-model=\"userType\" required>\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n         <tt>userType = {{userType}}</tt><br>\n         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n        </form>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n         expect(binding('userType')).toEqual('guest');\n         expect(binding('myForm.input.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty', function() {\n         input('userType').enter('');\n         expect(binding('userType')).toEqual('');\n         expect(binding('myForm.input.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar formDirectiveFactory = function(isNgForm) {\n  return ['$timeout', function($timeout) {\n    var formDirective = {\n      name: 'form',\n      restrict: 'E',\n      controller: FormController,\n      compile: function() {\n        return {\n          pre: function(scope, formElement, attr, controller) {\n            if (!attr.action) {\n              // we can't use jq events because if a form is destroyed during submission the default\n              // action is not prevented. see #1238\n              //\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n              // page reload if the form was destroyed by submission of the form via a click handler\n              // on a button in the form. Looks like an IE9 specific bug.\n              var preventDefaultListener = function(event) {\n                event.preventDefault\n                  ? event.preventDefault()\n                  : event.returnValue = false; // IE\n              };\n\n              addEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n\n              // unregister the preventDefault listener so that we don't not leak memory but in a\n              // way that will achieve the prevention of the default action.\n              formElement.bind('$destroy', function() {\n                $timeout(function() {\n                  removeEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n                }, 0, false);\n              });\n            }\n\n            var parentFormCtrl = formElement.parent().controller('form'),\n                alias = attr.name || attr.ngForm;\n\n            if (alias) {\n              scope[alias] = controller;\n            }\n            if (parentFormCtrl) {\n              formElement.bind('$destroy', function() {\n                parentFormCtrl.$removeControl(controller);\n                if (alias) {\n                  scope[alias] = undefined;\n                }\n                extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n              });\n            }\n          }\n        };\n      }\n    };\n\n    return isNgForm ? extend(copy(formDirective), {restrict: 'EAC'}) : formDirective;\n  }];\n};\n\nvar formDirective = formDirectiveFactory();\nvar ngFormDirective = formDirectiveFactory(true);\n\nvar URL_REGEXP = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\nvar EMAIL_REGEXP = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/;\nvar NUMBER_REGEXP = /^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/;\n\nvar inputType = {\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.text\n   *\n   * @description\n   * Standard HTML text input with angular data binding.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trimming the\n   *    input.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'guest';\n             $scope.word = /^\\s*\\w*\\s*$/;\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Single word: <input type=\"text\" name=\"input\" ng-model=\"text\"\n                               ng-pattern=\"word\" required ng-trim=\"false\">\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n             Single word only!</span>\n\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('guest');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if multi word', function() {\n            input('text').enter('hello world');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should not be trimmed', function() {\n            input('text').enter('untrimmed ');\n            expect(binding('text')).toEqual('untrimmed ');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'text': textInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.number\n   *\n   * @description\n   * Text input with number validation and transformation. Sets the `number` validation\n   * error if not a valid number.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.value = 12;\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Number: <input type=\"number\" name=\"input\" ng-model=\"value\"\n                          min=\"0\" max=\"99\" required>\n           <span class=\"error\" ng-show=\"myForm.list.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.list.$error.number\">\n             Not valid number!</span>\n           <tt>value = {{value}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n           expect(binding('value')).toEqual('12');\n           expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n           input('value').enter('');\n           expect(binding('value')).toEqual('');\n           expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if over max', function() {\n           input('value').enter('123');\n           expect(binding('value')).toEqual('');\n           expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'number': numberInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.url\n   *\n   * @description\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n   * valid URL.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'http://google.com';\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           URL: <input type=\"url\" name=\"input\" ng-model=\"text\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n             Not valid url!</span>\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('http://google.com');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if not url', function() {\n            input('text').enter('xxx');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'url': urlInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.email\n   *\n   * @description\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\n   * address.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'me@example.com';\n           }\n         </script>\n           <form name=\"myForm\" ng-controller=\"Ctrl\">\n             Email: <input type=\"email\" name=\"input\" ng-model=\"text\" required>\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n               Not valid email!</span>\n             <tt>text = {{text}}</tt><br/>\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n           </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('me@example.com');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if not email', function() {\n            input('text').enter('xxx');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'email': emailInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.radio\n   *\n   * @description\n   * HTML radio button.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string} value The value to which the expression should be set when selected.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.color = 'blue';\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           <input type=\"radio\" ng-model=\"color\" value=\"red\">  Red <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"green\"> Green <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"blue\"> Blue <br/>\n           <tt>color = {{color}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should change state', function() {\n            expect(binding('color')).toEqual('blue');\n\n            input('color').select('red');\n            expect(binding('color')).toEqual('red');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'radio': radioInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.checkbox\n   *\n   * @description\n   * HTML checkbox.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngTrueValue The value to which the expression should be set when selected.\n   * @param {string=} ngFalseValue The value to which the expression should be set when not selected.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.value1 = true;\n             $scope.value2 = 'YES'\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Value1: <input type=\"checkbox\" ng-model=\"value1\"> <br/>\n           Value2: <input type=\"checkbox\" ng-model=\"value2\"\n                          ng-true-value=\"YES\" ng-false-value=\"NO\"> <br/>\n           <tt>value1 = {{value1}}</tt><br/>\n           <tt>value2 = {{value2}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should change state', function() {\n            expect(binding('value1')).toEqual('true');\n            expect(binding('value2')).toEqual('YES');\n\n            input('value1').check();\n            input('value2').check();\n            expect(binding('value1')).toEqual('false');\n            expect(binding('value2')).toEqual('NO');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'checkbox': checkboxInputType,\n\n  'hidden': noop,\n  'button': noop,\n  'submit': noop,\n  'reset': noop\n};\n\n\nfunction isEmpty(value) {\n  return isUndefined(value) || value === '' || value === null || value !== value;\n}\n\n\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\n  var listener = function() {\n    var value = element.val();\n\n    // By default we will trim the value\n    // If the attribute ng-trim exists we will avoid trimming\n    // e.g. <input ng-model=\"foo\" ng-trim=\"false\">\n    if (toBoolean(attr.ngTrim || 'T')) {\n      value = trim(value);\n    }\n\n    if (ctrl.$viewValue !== value) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(value);\n      });\n    }\n  };\n\n  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n  // input event on backspace, delete or cut\n  if ($sniffer.hasEvent('input')) {\n    element.bind('input', listener);\n  } else {\n    var timeout;\n\n    var deferListener = function() {\n      if (!timeout) {\n        timeout = $browser.defer(function() {\n          listener();\n          timeout = null;\n        });\n      }\n    };\n\n    element.bind('keydown', function(event) {\n      var key = event.keyCode;\n\n      // ignore\n      //    command            modifiers                   arrows\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\n      deferListener();\n    });\n\n    // if user paste into input using mouse, we need \"change\" event to catch it\n    element.bind('change', listener);\n\n    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n    if ($sniffer.hasEvent('paste')) {\n      element.bind('paste cut', deferListener);\n    }\n  }\n\n\n  ctrl.$render = function() {\n    element.val(isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\n  };\n\n  // pattern validator\n  var pattern = attr.ngPattern,\n      patternValidator,\n      match;\n\n  var validate = function(regexp, value) {\n    if (isEmpty(value) || regexp.test(value)) {\n      ctrl.$setValidity('pattern', true);\n      return value;\n    } else {\n      ctrl.$setValidity('pattern', false);\n      return undefined;\n    }\n  };\n\n  if (pattern) {\n    match = pattern.match(/^\\/(.*)\\/([gim]*)$/);\n    if (match) {\n      pattern = new RegExp(match[1], match[2]);\n      patternValidator = function(value) {\n        return validate(pattern, value)\n      };\n    } else {\n      patternValidator = function(value) {\n        var patternObj = scope.$eval(pattern);\n\n        if (!patternObj || !patternObj.test) {\n          throw new Error('Expected ' + pattern + ' to be a RegExp but was ' + patternObj);\n        }\n        return validate(patternObj, value);\n      };\n    }\n\n    ctrl.$formatters.push(patternValidator);\n    ctrl.$parsers.push(patternValidator);\n  }\n\n  // min length validator\n  if (attr.ngMinlength) {\n    var minlength = int(attr.ngMinlength);\n    var minLengthValidator = function(value) {\n      if (!isEmpty(value) && value.length < minlength) {\n        ctrl.$setValidity('minlength', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('minlength', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(minLengthValidator);\n    ctrl.$formatters.push(minLengthValidator);\n  }\n\n  // max length validator\n  if (attr.ngMaxlength) {\n    var maxlength = int(attr.ngMaxlength);\n    var maxLengthValidator = function(value) {\n      if (!isEmpty(value) && value.length > maxlength) {\n        ctrl.$setValidity('maxlength', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('maxlength', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(maxLengthValidator);\n    ctrl.$formatters.push(maxLengthValidator);\n  }\n}\n\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  ctrl.$parsers.push(function(value) {\n    var empty = isEmpty(value);\n    if (empty || NUMBER_REGEXP.test(value)) {\n      ctrl.$setValidity('number', true);\n      return value === '' ? null : (empty ? value : parseFloat(value));\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n\n  ctrl.$formatters.push(function(value) {\n    return isEmpty(value) ? '' : '' + value;\n  });\n\n  if (attr.min) {\n    var min = parseFloat(attr.min);\n    var minValidator = function(value) {\n      if (!isEmpty(value) && value < min) {\n        ctrl.$setValidity('min', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('min', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(minValidator);\n    ctrl.$formatters.push(minValidator);\n  }\n\n  if (attr.max) {\n    var max = parseFloat(attr.max);\n    var maxValidator = function(value) {\n      if (!isEmpty(value) && value > max) {\n        ctrl.$setValidity('max', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('max', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(maxValidator);\n    ctrl.$formatters.push(maxValidator);\n  }\n\n  ctrl.$formatters.push(function(value) {\n\n    if (isEmpty(value) || isNumber(value)) {\n      ctrl.$setValidity('number', true);\n      return value;\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n}\n\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var urlValidator = function(value) {\n    if (isEmpty(value) || URL_REGEXP.test(value)) {\n      ctrl.$setValidity('url', true);\n      return value;\n    } else {\n      ctrl.$setValidity('url', false);\n      return undefined;\n    }\n  };\n\n  ctrl.$formatters.push(urlValidator);\n  ctrl.$parsers.push(urlValidator);\n}\n\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var emailValidator = function(value) {\n    if (isEmpty(value) || EMAIL_REGEXP.test(value)) {\n      ctrl.$setValidity('email', true);\n      return value;\n    } else {\n      ctrl.$setValidity('email', false);\n      return undefined;\n    }\n  };\n\n  ctrl.$formatters.push(emailValidator);\n  ctrl.$parsers.push(emailValidator);\n}\n\nfunction radioInputType(scope, element, attr, ctrl) {\n  // make the name unique, if not defined\n  if (isUndefined(attr.name)) {\n    element.attr('name', nextUid());\n  }\n\n  element.bind('click', function() {\n    if (element[0].checked) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(attr.value);\n      });\n    }\n  });\n\n  ctrl.$render = function() {\n    var value = attr.value;\n    element[0].checked = (value == ctrl.$viewValue);\n  };\n\n  attr.$observe('value', ctrl.$render);\n}\n\nfunction checkboxInputType(scope, element, attr, ctrl) {\n  var trueValue = attr.ngTrueValue,\n      falseValue = attr.ngFalseValue;\n\n  if (!isString(trueValue)) trueValue = true;\n  if (!isString(falseValue)) falseValue = false;\n\n  element.bind('click', function() {\n    scope.$apply(function() {\n      ctrl.$setViewValue(element[0].checked);\n    });\n  });\n\n  ctrl.$render = function() {\n    element[0].checked = ctrl.$viewValue;\n  };\n\n  ctrl.$formatters.push(function(value) {\n    return value === trueValue;\n  });\n\n  ctrl.$parsers.push(function(value) {\n    return value ? trueValue : falseValue;\n  });\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:textarea\n * @restrict E\n *\n * @description\n * HTML textarea element control with angular data-binding. The data-binding and validation\n * properties of this element are exactly the same as those of the\n * {@link ng.directive:input input element}.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:input\n * @restrict E\n *\n * @description\n * HTML input element control with angular data-binding. Input control follows HTML5 input types\n * and polyfills the HTML5 validation behavior for older browsers.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.user = {name: 'guest', last: 'visitor'};\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <form name=\"myForm\">\n           User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n           <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n             Required!</span><br>\n           Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n             ng-minlength=\"3\" ng-maxlength=\"10\">\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n             Too short!</span>\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n             Too long!</span><br>\n         </form>\n         <hr>\n         <tt>user = {{user}}</tt><br/>\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n       </div>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n          expect(binding('user')).toEqual('{\"name\":\"guest\",\"last\":\"visitor\"}');\n          expect(binding('myForm.userName.$valid')).toEqual('true');\n          expect(binding('myForm.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty when required', function() {\n          input('user.name').enter('');\n          expect(binding('user')).toEqual('{\"last\":\"visitor\"}');\n          expect(binding('myForm.userName.$valid')).toEqual('false');\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n\n        it('should be valid if empty when min length is set', function() {\n          input('user.last').enter('');\n          expect(binding('user')).toEqual('{\"name\":\"guest\",\"last\":\"\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('true');\n          expect(binding('myForm.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if less than required min length', function() {\n          input('user.last').enter('xx');\n          expect(binding('user')).toEqual('{\"name\":\"guest\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('false');\n          expect(binding('myForm.lastName.$error')).toMatch(/minlength/);\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n\n        it('should be invalid if longer than max length', function() {\n          input('user.last').enter('some ridiculously long name');\n          expect(binding('user'))\n            .toEqual('{\"name\":\"guest\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('false');\n          expect(binding('myForm.lastName.$error')).toMatch(/maxlength/);\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar inputDirective = ['$browser', '$sniffer', function($browser, $sniffer) {\n  return {\n    restrict: 'E',\n    require: '?ngModel',\n    link: function(scope, element, attr, ctrl) {\n      if (ctrl) {\n        (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer,\n                                                            $browser);\n      }\n    }\n  };\n}];\n\nvar VALID_CLASS = 'ng-valid',\n    INVALID_CLASS = 'ng-invalid',\n    PRISTINE_CLASS = 'ng-pristine',\n    DIRTY_CLASS = 'ng-dirty';\n\n/**\n * @ngdoc object\n * @name ng.directive:ngModel.NgModelController\n *\n * @property {string} $viewValue Actual string value in the view.\n * @property {*} $modelValue The value in the model, that the control is bound to.\n * @property {Array.<Function>} $parsers Whenever the control reads value from the DOM, it executes\n *     all of these functions to sanitize / convert the value as well as validate.\n *\n * @property {Array.<Function>} $formatters Whenever the model value changes, it executes all of\n *     these functions to convert the value as well as validate.\n *\n * @property {Object} $error An object hash with all errors as keys.\n *\n * @property {boolean} $pristine True if user has not interacted with the control yet.\n * @property {boolean} $dirty True if user has already interacted with the control.\n * @property {boolean} $valid True if there is no error.\n * @property {boolean} $invalid True if at least one error on the control.\n *\n * @description\n *\n * `NgModelController` provides API for the `ng-model` directive. The controller contains\n * services for data-binding, validation, CSS update, value formatting and parsing. It\n * specifically does not contain any logic which deals with DOM rendering or listening to\n * DOM events. The `NgModelController` is meant to be extended by other directives where, the\n * directive provides DOM manipulation and the `NgModelController` provides the data-binding.\n *\n * This example shows how to use `NgModelController` with a custom control to achieve\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n * collaborate together to achieve the desired result.\n *\n * <example module=\"customControl\">\n    <file name=\"style.css\">\n      [contenteditable] {\n        border: 1px solid black;\n        background-color: white;\n        min-height: 20px;\n      }\n\n      .ng-invalid {\n        border: 1px solid red;\n      }\n\n    </file>\n    <file name=\"script.js\">\n      angular.module('customControl', []).\n        directive('contenteditable', function() {\n          return {\n            restrict: 'A', // only activate on element attribute\n            require: '?ngModel', // get a hold of NgModelController\n            link: function(scope, element, attrs, ngModel) {\n              if(!ngModel) return; // do nothing if no ng-model\n\n              // Specify how UI should be updated\n              ngModel.$render = function() {\n                element.html(ngModel.$viewValue || '');\n              };\n\n              // Listen for change events to enable binding\n              element.bind('blur keyup change', function() {\n                scope.$apply(read);\n              });\n              read(); // initialize\n\n              // Write data to the model\n              function read() {\n                ngModel.$setViewValue(element.html());\n              }\n            }\n          };\n        });\n    </file>\n    <file name=\"index.html\">\n      <form name=\"myForm\">\n       <div contenteditable\n            name=\"myWidget\" ng-model=\"userContent\"\n            required>Change me!</div>\n        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n       <hr>\n       <textarea ng-model=\"userContent\"></textarea>\n      </form>\n    </file>\n    <file name=\"scenario.js\">\n      it('should data-bind and become invalid', function() {\n        var contentEditable = element('[contenteditable]');\n\n        expect(contentEditable.text()).toEqual('Change me!');\n        input('userContent').enter('');\n        expect(contentEditable.text()).toEqual('');\n        expect(contentEditable.prop('className')).toMatch(/ng-invalid-required/);\n      });\n    </file>\n * </example>\n *\n */\nvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse',\n    function($scope, $exceptionHandler, $attr, $element, $parse) {\n  this.$viewValue = Number.NaN;\n  this.$modelValue = Number.NaN;\n  this.$parsers = [];\n  this.$formatters = [];\n  this.$viewChangeListeners = [];\n  this.$pristine = true;\n  this.$dirty = false;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$name = $attr.name;\n\n  var ngModelGet = $parse($attr.ngModel),\n      ngModelSet = ngModelGet.assign;\n\n  if (!ngModelSet) {\n    throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + $attr.ngModel +\n        ' (' + startingTag($element) + ')');\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$render\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\n   * directive will implement this method.\n   */\n  this.$render = noop;\n\n  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      $error = this.$error = {}; // keep invalid keys here\n\n\n  // Setup initial state of the control\n  $element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    $element.\n      removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).\n      addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setValidity\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Change the validity state, and notifies the form when the control changes validity. (i.e. it\n   * does not notify form if given validator is already marked as invalid).\n   *\n   * This method should be called by validators - i.e. the parser or formatter functions.\n   *\n   * @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign\n   *        to `$error[validationErrorKey]=isValid` so that it is available for data-binding.\n   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n   * @param {boolean} isValid Whether the current state is valid (true) or invalid (false).\n   */\n  this.$setValidity = function(validationErrorKey, isValid) {\n    if ($error[validationErrorKey] === !isValid) return;\n\n    if (isValid) {\n      if ($error[validationErrorKey]) invalidCount--;\n      if (!invalidCount) {\n        toggleValidCss(true);\n        this.$valid = true;\n        this.$invalid = false;\n      }\n    } else {\n      toggleValidCss(false);\n      this.$invalid = true;\n      this.$valid = false;\n      invalidCount++;\n    }\n\n    $error[validationErrorKey] = !isValid;\n    toggleValidCss(isValid, validationErrorKey);\n\n    parentForm.$setValidity(validationErrorKey, isValid, this);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setPristine\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Sets the control to its pristine state.\n   *\n   * This method can be called to remove the 'ng-dirty' class and set the control to its pristine\n   * state (ng-pristine class).\n   */\n  this.$setPristine = function () {\n    this.$dirty = false;\n    this.$pristine = true;\n    $element.removeClass(DIRTY_CLASS).addClass(PRISTINE_CLASS);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setViewValue\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Read a value from view.\n   *\n   * This method should be called from within a DOM event handler.\n   * For example {@link ng.directive:input input} or\n   * {@link ng.directive:select select} directives call it.\n   *\n   * It internally calls all `parsers` and if resulted value is valid, updates the model and\n   * calls all registered change listeners.\n   *\n   * @param {string} value Value from the view.\n   */\n  this.$setViewValue = function(value) {\n    this.$viewValue = value;\n\n    // change to dirty\n    if (this.$pristine) {\n      this.$dirty = true;\n      this.$pristine = false;\n      $element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);\n      parentForm.$setDirty();\n    }\n\n    forEach(this.$parsers, function(fn) {\n      value = fn(value);\n    });\n\n    if (this.$modelValue !== value) {\n      this.$modelValue = value;\n      ngModelSet($scope, value);\n      forEach(this.$viewChangeListeners, function(listener) {\n        try {\n          listener();\n        } catch(e) {\n          $exceptionHandler(e);\n        }\n      })\n    }\n  };\n\n  // model -> value\n  var ctrl = this;\n\n  $scope.$watch(function ngModelWatch() {\n    var value = ngModelGet($scope);\n\n    // if scope model value and ngModel value are out of sync\n    if (ctrl.$modelValue !== value) {\n\n      var formatters = ctrl.$formatters,\n          idx = formatters.length;\n\n      ctrl.$modelValue = value;\n      while(idx--) {\n        value = formatters[idx](value);\n      }\n\n      if (ctrl.$viewValue !== value) {\n        ctrl.$viewValue = value;\n        ctrl.$render();\n      }\n    }\n  });\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngModel\n *\n * @element input\n *\n * @description\n * Is directive that tells Angular to do two-way data binding. It works together with `input`,\n * `select`, `textarea`. You can easily write your own directives to use `ngModel` as well.\n *\n * `ngModel` is responsible for:\n *\n * - binding the view into the model, which other directives such as `input`, `textarea` or `select`\n *   require,\n * - providing validation behavior (i.e. required, number, email, url),\n * - keeping state of the control (valid/invalid, dirty/pristine, validation errors),\n * - setting related css class onto the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`),\n * - register the control with parent {@link ng.directive:form form}.\n *\n * For basic examples, how to use `ngModel`, see:\n *\n *  - {@link ng.directive:input input}\n *    - {@link ng.directive:input.text text}\n *    - {@link ng.directive:input.checkbox checkbox}\n *    - {@link ng.directive:input.radio radio}\n *    - {@link ng.directive:input.number number}\n *    - {@link ng.directive:input.email email}\n *    - {@link ng.directive:input.url url}\n *  - {@link ng.directive:select select}\n *  - {@link ng.directive:textarea textarea}\n *\n */\nvar ngModelDirective = function() {\n  return {\n    require: ['ngModel', '^?form'],\n    controller: NgModelController,\n    link: function(scope, element, attr, ctrls) {\n      // notify others, especially parent forms\n\n      var modelCtrl = ctrls[0],\n          formCtrl = ctrls[1] || nullFormCtrl;\n\n      formCtrl.$addControl(modelCtrl);\n\n      element.bind('$destroy', function() {\n        formCtrl.$removeControl(modelCtrl);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngChange\n * @restrict E\n *\n * @description\n * Evaluate given expression when user changes the input.\n * The expression is not evaluated when the value change is coming from the model.\n *\n * Note, this directive requires `ngModel` to be present.\n *\n * @element input\n *\n * @example\n * <doc:example>\n *   <doc:source>\n *     <script>\n *       function Controller($scope) {\n *         $scope.counter = 0;\n *         $scope.change = function() {\n *           $scope.counter++;\n *         };\n *       }\n *     </script>\n *     <div ng-controller=\"Controller\">\n *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n *       <label for=\"ng-change-example2\">Confirmed</label><br />\n *       debug = {{confirmed}}<br />\n *       counter = {{counter}}\n *     </div>\n *   </doc:source>\n *   <doc:scenario>\n *     it('should evaluate the expression if changing from view', function() {\n *       expect(binding('counter')).toEqual('0');\n *       element('#ng-change-example1').click();\n *       expect(binding('counter')).toEqual('1');\n *       expect(binding('confirmed')).toEqual('true');\n *     });\n *\n *     it('should not evaluate the expression if changing from model', function() {\n *       element('#ng-change-example2').click();\n *       expect(binding('counter')).toEqual('0');\n *       expect(binding('confirmed')).toEqual('true');\n *     });\n *   </doc:scenario>\n * </doc:example>\n */\nvar ngChangeDirective = valueFn({\n  require: 'ngModel',\n  link: function(scope, element, attr, ctrl) {\n    ctrl.$viewChangeListeners.push(function() {\n      scope.$eval(attr.ngChange);\n    });\n  }\n});\n\n\nvar requiredDirective = function() {\n  return {\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n      attr.required = true; // force truthy in case we are on non input element\n\n      var validator = function(value) {\n        if (attr.required && (isEmpty(value) || value === false)) {\n          ctrl.$setValidity('required', false);\n          return;\n        } else {\n          ctrl.$setValidity('required', true);\n          return value;\n        }\n      };\n\n      ctrl.$formatters.push(validator);\n      ctrl.$parsers.unshift(validator);\n\n      attr.$observe('required', function() {\n        validator(ctrl.$viewValue);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngList\n *\n * @description\n * Text input that converts between comma-separated string into an array of strings.\n *\n * @element input\n * @param {string=} ngList optional delimiter that should be used to split the value. If\n *   specified in form `/something/` then the value will be converted into a regular expression.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.names = ['igor', 'misko', 'vojta'];\n         }\n       </script>\n       <form name=\"myForm\" ng-controller=\"Ctrl\">\n         List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n         <span class=\"error\" ng-show=\"myForm.list.$error.required\">\n           Required!</span>\n         <tt>names = {{names}}</tt><br/>\n         <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n         <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n        </form>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n          expect(binding('names')).toEqual('[\"igor\",\"misko\",\"vojta\"]');\n          expect(binding('myForm.namesInput.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty', function() {\n          input('names').enter('');\n          expect(binding('names')).toEqual('[]');\n          expect(binding('myForm.namesInput.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngListDirective = function() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attr, ctrl) {\n      var match = /\\/(.*)\\//.exec(attr.ngList),\n          separator = match && new RegExp(match[1]) || attr.ngList || ',';\n\n      var parse = function(viewValue) {\n        var list = [];\n\n        if (viewValue) {\n          forEach(viewValue.split(separator), function(value) {\n            if (value) list.push(trim(value));\n          });\n        }\n\n        return list;\n      };\n\n      ctrl.$parsers.push(parse);\n      ctrl.$formatters.push(function(value) {\n        if (isArray(value)) {\n          return value.join(', ');\n        }\n\n        return undefined;\n      });\n    }\n  };\n};\n\n\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n\nvar ngValueDirective = function() {\n  return {\n    priority: 100,\n    compile: function(tpl, tplAttr) {\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n        return function(scope, elm, attr) {\n          attr.$set('value', scope.$eval(attr.ngValue));\n        };\n      } else {\n        return function(scope, elm, attr) {\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n            attr.$set('value', value, false);\n          });\n        };\n      }\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBind\n *\n * @description\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n * with the value of a given expression, and to update the text content when the value of that\n * expression changes.\n *\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n * `{{ expression }}` which is similar but less verbose.\n *\n * One scenario in which the use of `ngBind` is preferred over `{{ expression }}` binding is when\n * it's desirable to put bindings into template that is momentarily displayed by the browser in its\n * raw state before Angular compiles it. Since `ngBind` is an element attribute, it makes the\n * bindings invisible to the user while the page is loading.\n *\n * An alternative solution to this problem would be using the\n * {@link ng.directive:ngCloak ngCloak} directive.\n *\n *\n * @element ANY\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n *\n * @example\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.name = 'Whirled';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Enter name: <input type=\"text\" ng-model=\"name\"><br>\n         Hello <span ng-bind=\"name\"></span>!\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-bind', function() {\n         expect(using('.doc-example-live').binding('name')).toBe('Whirled');\n         using('.doc-example-live').input('name').enter('world');\n         expect(using('.doc-example-live').binding('name')).toBe('world');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngBindDirective = ngDirective(function(scope, element, attr) {\n  element.addClass('ng-binding').data('$binding', attr.ngBind);\n  scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n    element.text(value == undefined ? '' : value);\n  });\n});\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBindTemplate\n *\n * @description\n * The `ngBindTemplate` directive specifies that the element\n * text should be replaced with the template in ngBindTemplate.\n * Unlike ngBind the ngBindTemplate can contain multiple `{{` `}}`\n * expressions. (This is required since some HTML elements\n * can not have SPAN elements such as TITLE, or OPTION to name a few.)\n *\n * @element ANY\n * @param {string} ngBindTemplate template of form\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n *\n * @example\n * Try it here: enter text in text box and watch the greeting change.\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.salutation = 'Hello';\n           $scope.name = 'World';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n        Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n        Name: <input type=\"text\" ng-model=\"name\"><br>\n        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-bind', function() {\n         expect(using('.doc-example-live').binding('salutation')).\n           toBe('Hello');\n         expect(using('.doc-example-live').binding('name')).\n           toBe('World');\n         using('.doc-example-live').input('salutation').enter('Greetings');\n         using('.doc-example-live').input('name').enter('user');\n         expect(using('.doc-example-live').binding('salutation')).\n           toBe('Greetings');\n         expect(using('.doc-example-live').binding('name')).\n           toBe('user');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngBindTemplateDirective = ['$interpolate', function($interpolate) {\n  return function(scope, element, attr) {\n    // TODO: move this to scenario runner\n    var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n    element.addClass('ng-binding').data('$binding', interpolateFn);\n    attr.$observe('ngBindTemplate', function(value) {\n      element.text(value);\n    });\n  }\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBindHtmlUnsafe\n *\n * @description\n * Creates a binding that will innerHTML the result of evaluating the `expression` into the current\n * element. *The innerHTML-ed content will not be sanitized!* You should use this directive only if\n * {@link ngSanitize.directive:ngBindHtml ngBindHtml} directive is too\n * restrictive and when you absolutely trust the source of the content you are binding to.\n *\n * See {@link ngSanitize.$sanitize $sanitize} docs for examples.\n *\n * @element ANY\n * @param {expression} ngBindHtmlUnsafe {@link guide/expression Expression} to evaluate.\n */\nvar ngBindHtmlUnsafeDirective = [function() {\n  return function(scope, element, attr) {\n    element.addClass('ng-binding').data('$binding', attr.ngBindHtmlUnsafe);\n    scope.$watch(attr.ngBindHtmlUnsafe, function ngBindHtmlUnsafeWatchAction(value) {\n      element.html(value || '');\n    });\n  };\n}];\n\nfunction classDirective(name, selector) {\n  name = 'ngClass' + name;\n  return ngDirective(function(scope, element, attr) {\n    var oldVal = undefined;\n\n    scope.$watch(attr[name], ngClassWatchAction, true);\n\n    attr.$observe('class', function(value) {\n      var ngClass = scope.$eval(attr[name]);\n      ngClassWatchAction(ngClass, ngClass);\n    });\n\n\n    if (name !== 'ngClass') {\n      scope.$watch('$index', function($index, old$index) {\n        var mod = $index & 1;\n        if (mod !== old$index & 1) {\n          if (mod === selector) {\n            addClass(scope.$eval(attr[name]));\n          } else {\n            removeClass(scope.$eval(attr[name]));\n          }\n        }\n      });\n    }\n\n\n    function ngClassWatchAction(newVal) {\n      if (selector === true || scope.$index % 2 === selector) {\n        if (oldVal && !equals(newVal,oldVal)) {\n          removeClass(oldVal);\n        }\n        addClass(newVal);\n      }\n      oldVal = copy(newVal);\n    }\n\n\n    function removeClass(classVal) {\n      if (isObject(classVal) && !isArray(classVal)) {\n        classVal = map(classVal, function(v, k) { if (v) return k });\n      }\n      element.removeClass(isArray(classVal) ? classVal.join(' ') : classVal);\n    }\n\n\n    function addClass(classVal) {\n      if (isObject(classVal) && !isArray(classVal)) {\n        classVal = map(classVal, function(v, k) { if (v) return k });\n      }\n      if (classVal) {\n        element.addClass(isArray(classVal) ? classVal.join(' ') : classVal);\n      }\n    }\n  });\n}\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClass\n *\n * @description\n * The `ngClass` allows you to set CSS class on HTML element dynamically by databinding an\n * expression that represents all classes to be added.\n *\n * The directive won't add duplicate classes if a particular class was already set.\n *\n * When the expression changes, the previously added classes are removed and only then the\n * new classes are added.\n *\n * @element ANY\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class\n *   names, an array, or a map of class names to boolean values.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n      <input type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n      <br>\n      <span ng-class=\"myVar\">Sample Text</span>\n     </file>\n     <file name=\"style.css\">\n       .my-class {\n         color: red;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class', function() {\n         expect(element('.doc-example-live span').prop('className')).not().\n           toMatch(/my-class/);\n\n         using('.doc-example-live').element(':button:first').click();\n\n         expect(element('.doc-example-live span').prop('className')).\n           toMatch(/my-class/);\n\n         using('.doc-example-live').element(':button:last').click();\n\n         expect(element('.doc-example-live span').prop('className')).not().\n           toMatch(/my-class/);\n       });\n     </file>\n   </example>\n */\nvar ngClassDirective = classDirective('', true);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClassOdd\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except it works in\n * conjunction with `ngRepeat` and takes affect only on odd (even) rows.\n *\n * This directive can be applied only within a scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}}\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element('.doc-example-live li:first span').prop('className')).\n           toMatch(/odd/);\n         expect(element('.doc-example-live li:last span').prop('className')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassOddDirective = classDirective('Odd', 0);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClassEven\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except it works in\n * conjunction with `ngRepeat` and takes affect only on odd (even) rows.\n *\n * This directive can be applied only within a scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n *   result of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}} &nbsp; &nbsp; &nbsp;\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element('.doc-example-live li:first span').prop('className')).\n           toMatch(/odd/);\n         expect(element('.doc-example-live li:last span').prop('className')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassEvenDirective = classDirective('Even', 1);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngCloak\n *\n * @description\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n * directive to avoid the undesirable flicker effect caused by the html template display.\n *\n * The directive can be applied to the `<body>` element, but typically a fine-grained application is\n * preferred in order to benefit from progressive rendering of the browser view.\n *\n * `ngCloak` works in cooperation with a css rule that is embedded within `angular.js` and\n *  `angular.min.js` files. Following is the css rule:\n *\n * <pre>\n * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n *   display: none;\n * }\n * </pre>\n *\n * When this css rule is loaded by the browser, all html elements (including their children) that\n * are tagged with the `ng-cloak` directive are hidden. When Angular comes across this directive\n * during the compilation of the template it deletes the `ngCloak` element attribute, which\n * makes the compiled element visible.\n *\n * For the best result, `angular.js` script must be loaded in the head section of the html file;\n * alternatively, the css rule (above) must be included in the external stylesheet of the\n * application.\n *\n * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\n * cannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\n * class `ngCloak` in addition to `ngCloak` directive as shown in the example below.\n *\n * @element ANY\n *\n * @example\n   <doc:example>\n     <doc:source>\n        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n        <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n     </doc:source>\n     <doc:scenario>\n       it('should remove the template directive and css class', function() {\n         expect(element('.doc-example-live #template1').attr('ng-cloak')).\n           not().toBeDefined();\n         expect(element('.doc-example-live #template2').attr('ng-cloak')).\n           not().toBeDefined();\n       });\n     </doc:scenario>\n   </doc:example>\n *\n */\nvar ngCloakDirective = ngDirective({\n  compile: function(element, attr) {\n    attr.$set('ngCloak', undefined);\n    element.removeClass('ng-cloak');\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngController\n *\n * @description\n * The `ngController` directive assigns behavior to a scope. This is a key aspect of how angular\n * supports the principles behind the Model-View-Controller design pattern.\n *\n * MVC components in angular:\n *\n * * Model — The Model is data in scope properties; scopes are attached to the DOM.\n * * View — The template (HTML with data bindings) is rendered into the View.\n * * Controller — The `ngController` directive specifies a Controller class; the class has\n *   methods that typically express the business logic behind the application.\n *\n * Note that an alternative way to define controllers is via the {@link ng.$route $route} service.\n *\n * @element ANY\n * @scope\n * @param {expression} ngController Name of a globally accessible constructor function or an\n *     {@link guide/expression expression} that on the current scope evaluates to a\n *     constructor function. The controller instance can further be published into the scope\n *     by adding `as localName` the controller name attribute.\n *\n * @example\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n * greeting are methods declared on the controller (see source tab). These methods can\n * easily be called from the angular markup. Notice that the scope becomes the `this` for the\n * controller's instance. This allows for easy access to the view data from the controller. Also\n * notice that any changes to the data are automatically reflected in the View without the need\n * for a manual update. The example is included in two different declaration styles based on\n * your style preferences.\n   <doc:example>\n     <doc:source>\n      <script>\n        function SettingsController() {\n          this.name = \"John Smith\";\n          this.contacts = [\n            {type: 'phone', value: '408 555 1212'},\n            {type: 'email', value: 'john.smith@example.org'} ];\n          };\n\n        SettingsController.prototype.greet = function() {\n          alert(this.name);\n        };\n\n        SettingsController.prototype.addContact = function() {\n          this.contacts.push({type: 'email', value: 'yourname@example.org'});\n        };\n\n        SettingsController.prototype.removeContact = function(contactToRemove) {\n         var index = this.contacts.indexOf(contactToRemove);\n          this.contacts.splice(index, 1);\n        };\n\n        SettingsController.prototype.clearContact = function(contact) {\n          contact.type = 'phone';\n          contact.value = '';\n        };\n      </script>\n      <div ng-controller=\"SettingsController as settings\">\n        Name: <input type=\"text\" ng-model=\"settings.name\"/>\n        [ <a href=\"\" ng-click=\"settings.greet()\">greet</a> ]<br/>\n        Contact:\n        <ul>\n          <li ng-repeat=\"contact in settings.contacts\">\n            <select ng-model=\"contact.type\">\n               <option>phone</option>\n               <option>email</option>\n            </select>\n            <input type=\"text\" ng-model=\"contact.value\"/>\n            [ <a href=\"\" ng-click=\"settings.clearContact(contact)\">clear</a>\n            | <a href=\"\" ng-click=\"settings.removeContact(contact)\">X</a> ]\n          </li>\n          <li>[ <a href=\"\" ng-click=\"settings.addContact()\">add</a> ]</li>\n       </ul>\n      </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check controller', function() {\n         expect(element('.doc-example-live div>:input').val()).toBe('John Smith');\n         expect(element('.doc-example-live li:nth-child(1) input').val())\n           .toBe('408 555 1212');\n         expect(element('.doc-example-live li:nth-child(2) input').val())\n           .toBe('john.smith@example.org');\n\n         element('.doc-example-live li:first a:contains(\"clear\")').click();\n         expect(element('.doc-example-live li:first input').val()).toBe('');\n\n         element('.doc-example-live li:last a:contains(\"add\")').click();\n         expect(element('.doc-example-live li:nth-child(3) input').val())\n           .toBe('yourname@example.org');\n       });\n     </doc:scenario>\n   </doc:example>\n\n\n\n    <doc:example>\n     <doc:source>\n      <script>\n        function SettingsController($scope) {\n          $scope.name = \"John Smith\";\n          $scope.contacts = [\n            {type:'phone', value:'408 555 1212'},\n            {type:'email', value:'john.smith@example.org'} ];\n\n          $scope.greet = function() {\n           alert(this.name);\n          };\n\n          $scope.addContact = function() {\n           this.contacts.push({type:'email', value:'yourname@example.org'});\n          };\n\n          $scope.removeContact = function(contactToRemove) {\n           var index = this.contacts.indexOf(contactToRemove);\n           this.contacts.splice(index, 1);\n          };\n\n          $scope.clearContact = function(contact) {\n           contact.type = 'phone';\n           contact.value = '';\n          };\n        }\n      </script>\n      <div ng-controller=\"SettingsController\">\n        Name: <input type=\"text\" ng-model=\"name\"/>\n        [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n        Contact:\n        <ul>\n          <li ng-repeat=\"contact in contacts\">\n            <select ng-model=\"contact.type\">\n               <option>phone</option>\n               <option>email</option>\n            </select>\n            <input type=\"text\" ng-model=\"contact.value\"/>\n            [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n            | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n          </li>\n          <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n       </ul>\n      </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check controller', function() {\n         expect(element('.doc-example-live div>:input').val()).toBe('John Smith');\n         expect(element('.doc-example-live li:nth-child(1) input').val())\n           .toBe('408 555 1212');\n         expect(element('.doc-example-live li:nth-child(2) input').val())\n           .toBe('john.smith@example.org');\n\n         element('.doc-example-live li:first a:contains(\"clear\")').click();\n         expect(element('.doc-example-live li:first input').val()).toBe('');\n\n         element('.doc-example-live li:last a:contains(\"add\")').click();\n         expect(element('.doc-example-live li:nth-child(3) input').val())\n           .toBe('yourname@example.org');\n       });\n     </doc:scenario>\n   </doc:example>\n\n */\nvar ngControllerDirective = [function() {\n  return {\n    scope: true,\n    controller: '@'\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngCsp\n * @priority 1000\n *\n * @element html\n * @description\n * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n * \n * This is necessary when developing things like Google Chrome Extensions.\n * \n * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\n * For us to be compatible, we just need to implement the \"getterFn\" in $parse without violating\n * any of these restrictions.\n * \n * AngularJS uses `Function(string)` generated functions as a speed optimization. By applying `ngCsp`\n * it is be possible to opt into the CSP compatible mode. When this mode is on AngularJS will\n * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\n * be raised.\n * \n * In order to use this feature put `ngCsp` directive on the root element of the application.\n * \n * @example\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\n   <pre>\n     <!doctype html>\n     <html ng-app ng-csp>\n     ...\n     ...\n     </html>\n   </pre>\n */\n\nvar ngCspDirective = ['$sniffer', function($sniffer) {\n  return {\n    priority: 1000,\n    compile: function() {\n      $sniffer.csp = true;\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClick\n *\n * @description\n * The ngClick allows you to specify custom behavior when\n * element is clicked.\n *\n * @element ANY\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n * click. (Event object is available as `$event`)\n *\n * @example\n   <doc:example>\n     <doc:source>\n      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n        Increment\n      </button>\n      count: {{count}}\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-click', function() {\n         expect(binding('count')).toBe('0');\n         element('.doc-example-live :button').click();\n         expect(binding('count')).toBe('1');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n/*\n * A directive that allows creation of custom onclick handlers that are defined as angular\n * expressions and are compiled and executed within the current scope.\n *\n * Events that are handled via these handler are always configured not to propagate further.\n */\nvar ngEventDirectives = {};\nforEach(\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress'.split(' '),\n  function(name) {\n    var directiveName = directiveNormalize('ng-' + name);\n    ngEventDirectives[directiveName] = ['$parse', function($parse) {\n      return function(scope, element, attr) {\n        var fn = $parse(attr[directiveName]);\n        element.bind(lowercase(name), function(event) {\n          scope.$apply(function() {\n            fn(scope, {$event:event});\n          });\n        });\n      };\n    }];\n  }\n);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngDblclick\n *\n * @description\n * The `ngDblclick` directive allows you to specify custom behavior on dblclick event.\n *\n * @element ANY\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n * dblclick. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMousedown\n *\n * @description\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n *\n * @element ANY\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n * mousedown. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseup\n *\n * @description\n * Specify custom behavior on mouseup event.\n *\n * @element ANY\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n * mouseup. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseover\n *\n * @description\n * Specify custom behavior on mouseover event.\n *\n * @element ANY\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n * mouseover. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseenter\n *\n * @description\n * Specify custom behavior on mouseenter event.\n *\n * @element ANY\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n * mouseenter. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseleave\n *\n * @description\n * Specify custom behavior on mouseleave event.\n *\n * @element ANY\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n * mouseleave. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMousemove\n *\n * @description\n * Specify custom behavior on mousemove event.\n *\n * @element ANY\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n * mousemove. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngKeydown\n *\n * @description\n * Specify custom behavior on keydown event.\n *\n * @element ANY\n * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\n * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngKeyup\n *\n * @description\n * Specify custom behavior on keyup event.\n *\n * @element ANY\n * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\n * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngKeypress\n *\n * @description\n * Specify custom behavior on keypress event.\n *\n * @element ANY\n * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\n * keypress. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSubmit\n *\n * @description\n * Enables binding angular expressions to onsubmit events.\n *\n * Additionally it prevents the default action (which for form means sending the request to the\n * server and reloading the current page).\n *\n * @element form\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\n *\n * @example\n   <doc:example>\n     <doc:source>\n      <script>\n        function Ctrl($scope) {\n          $scope.list = [];\n          $scope.text = 'hello';\n          $scope.submit = function() {\n            if (this.text) {\n              this.list.push(this.text);\n              this.text = '';\n            }\n          };\n        }\n      </script>\n      <form ng-submit=\"submit()\" ng-controller=\"Ctrl\">\n        Enter text and hit enter:\n        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n        <pre>list={{list}}</pre>\n      </form>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-submit', function() {\n         expect(binding('list')).toBe('[]');\n         element('.doc-example-live #submit').click();\n         expect(binding('list')).toBe('[\"hello\"]');\n         expect(input('text').val()).toBe('');\n       });\n       it('should ignore empty strings', function() {\n         expect(binding('list')).toBe('[]');\n         element('.doc-example-live #submit').click();\n         element('.doc-example-live #submit').click();\n         expect(binding('list')).toBe('[\"hello\"]');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngSubmitDirective = ngDirective(function(scope, element, attrs) {\n  element.bind('submit', function() {\n    scope.$apply(attrs.ngSubmit);\n  });\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngIf\n * @restrict A\n *\n * @description\n * The `ngIf` directive removes and recreates a portion of the DOM tree (HTML)\n * conditionally based on **\"falsy\"** and **\"truthy\"** values, respectively, evaluated within\n * an {expression}. In other words, if the expression assigned to **ngIf evaluates to a false\n * value** then **the element is removed from the DOM** and **if true** then **a clone of the\n * element is reinserted into the DOM**.\n *\n * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\n * element in the DOM rather than changing its visibility via the `display` css property.  A common\n * case when this difference is significant is when using css selectors that rely on an element's\n * position within the DOM (HTML), such as the `:first-child` or `:last-child` pseudo-classes.\n *\n * Note that **when an element is removed using ngIf its scope is destroyed** and **a new scope\n * is created when the element is restored**.  The scope created within `ngIf` inherits from \n * its parent scope using\n * {@link https://github.com/angular/angular.js/wiki/The-Nuances-of-Scope-Prototypal-Inheritance prototypal inheritance}.\n * An important implication of this is if `ngModel` is used within `ngIf` to bind to\n * a javascript primitive defined in the parent scope. In this case any modifications made to the\n * variable within the child scope will override (hide) the value in the parent scope.\n *\n * Also, `ngIf` recreates elements using their compiled state. An example scenario of this behavior\n * is if an element's class attribute is directly modified after it's compiled, using something like \n * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\n * the added class will be lost because the original compiled state is used to regenerate the element.\n *\n * Additionally, you can provide animations via the ngAnimate attribute to animate the **enter**\n * and **leave** effects.\n *\n * @animations\n * enter - happens just after the ngIf contents change and a new DOM element is created and injected into the ngIf container\n * leave - happens just before the ngIf contents are removed from the DOM\n *\n * @element ANY\n * @scope\n * @param {expression} ngIf If the {@link guide/expression expression} is falsy then\n *     the element is removed from the DOM tree (HTML).\n *\n * @example\n  <example animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\" ng-init=\"checked=true\" /><br/>\n      Show when checked:\n      <span ng-if=\"checked\" ng-animate=\"'example'\">\n        I'm removed when the checkbox is unchecked.\n      </span>\n    </file>\n    <file name=\"animations.css\">\n      .example-leave, .example-enter {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -moz-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -ms-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -o-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n      }\n\n      .example-enter {\n        opacity:0;\n      }\n      .example-enter.example-enter-active {\n        opacity:1;\n      }\n\n      .example-leave {\n        opacity:1;\n      }\n      .example-leave.example-leave-active {\n        opacity:0;\n      }\n    </file>\n  </example>\n */\nvar ngIfDirective = ['$animator', function($animator) {\n  return {\n    transclude: 'element',\n    priority: 1000,\n    terminal: true,\n    restrict: 'A',\n    compile: function (element, attr, transclude) {\n      return function ($scope, $element, $attr) {\n        var animate = $animator($scope, $attr);\n        var childElement, childScope;\n        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {\n          if (childElement) {\n            animate.leave(childElement);\n            childElement = undefined;\n          }\n          if (childScope) {\n            childScope.$destroy();\n            childScope = undefined;\n          }\n          if (toBoolean(value)) {\n            childScope = $scope.$new();\n            transclude(childScope, function (clone) {\n              childElement = clone;\n              animate.enter(clone, $element.parent(), $element);\n            });\n          }\n        });\n      }\n    }\n  }\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngInclude\n * @restrict ECA\n *\n * @description\n * Fetches, compiles and includes an external HTML fragment.\n *\n * Keep in mind that Same Origin Policy applies to included resources\n * (e.g. ngInclude won't work for cross-domain requests on all browsers and for\n *  file:// access on some browsers).\n *\n * Additionally, you can also provide animations via the ngAnimate attribute to animate the **enter**\n * and **leave** effects.\n *\n * @animations\n * enter - happens just after the ngInclude contents change and a new DOM element is created and injected into the ngInclude container\n * leave - happens just after the ngInclude contents change and just before the former contents are removed from the DOM\n *\n * @scope\n *\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n *                 make sure you wrap it in quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\n *\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\n *\n *                  - If the attribute is not set, disable scrolling.\n *                  - If the attribute is set without value, enable scrolling.\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n *\n * @example\n  <example animations=\"true\">\n    <file name=\"index.html\">\n     <div ng-controller=\"Ctrl\">\n       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n        <option value=\"\">(blank)</option>\n       </select>\n       url of the template: <tt>{{template.url}}</tt>\n       <hr/>\n       <div class=\"example-animate-container\"\n            ng-include=\"template.url\"\n            ng-animate=\"{enter: 'example-enter', leave: 'example-leave'}\"></div>\n     </div>\n    </file>\n    <file name=\"script.js\">\n      function Ctrl($scope) {\n        $scope.templates =\n          [ { name: 'template1.html', url: 'template1.html'}\n          , { name: 'template2.html', url: 'template2.html'} ];\n        $scope.template = $scope.templates[0];\n      }\n     </file>\n    <file name=\"template1.html\">\n      <div>Content of template1.html</div>\n    </file>\n    <file name=\"template2.html\">\n      <div>Content of template2.html</div>\n    </file>\n    <file name=\"animations.css\">\n      .example-leave,\n      .example-enter {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -moz-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -ms-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -o-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n      }\n\n      .example-animate-container > * {\n        display:block;\n        padding:10px;\n      }\n\n      .example-enter {\n        top:-50px;\n      }\n      .example-enter.example-enter-active {\n        top:0;\n      }\n\n      .example-leave {\n        top:0;\n      }\n      .example-leave.example-leave-active {\n        top:50px;\n      }\n    </file>\n    <file name=\"scenario.js\">\n      it('should load template1.html', function() {\n       expect(element('.doc-example-live [ng-include]').text()).\n         toMatch(/Content of template1.html/);\n      });\n      it('should load template2.html', function() {\n       select('template').option('1');\n       expect(element('.doc-example-live [ng-include]').text()).\n         toMatch(/Content of template2.html/);\n      });\n      it('should change to blank', function() {\n       select('template').option('');\n       expect(element('.doc-example-live [ng-include]').text()).toEqual('');\n      });\n    </file>\n  </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngInclude#$includeContentRequested\n * @eventOf ng.directive:ngInclude\n * @eventType emit on the scope ngInclude was declared in\n * @description\n * Emitted every time the ngInclude content is requested.\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngInclude#$includeContentLoaded\n * @eventOf ng.directive:ngInclude\n * @eventType emit on the current ngInclude scope\n * @description\n * Emitted every time the ngInclude content is reloaded.\n */\nvar ngIncludeDirective = ['$http', '$templateCache', '$anchorScroll', '$compile', '$animator',\n                  function($http,   $templateCache,   $anchorScroll,   $compile,   $animator) {\n  return {\n    restrict: 'ECA',\n    terminal: true,\n    compile: function(element, attr) {\n      var srcExp = attr.ngInclude || attr.src,\n          onloadExp = attr.onload || '',\n          autoScrollExp = attr.autoscroll;\n\n      return function(scope, element, attr) {\n        var animate = $animator(scope, attr);\n        var changeCounter = 0,\n            childScope;\n\n        var clearContent = function() {\n          if (childScope) {\n            childScope.$destroy();\n            childScope = null;\n          }\n          animate.leave(element.contents(), element);\n        };\n\n        scope.$watch(srcExp, function ngIncludeWatchAction(src) {\n          var thisChangeId = ++changeCounter;\n\n          if (src) {\n            $http.get(src, {cache: $templateCache}).success(function(response) {\n              if (thisChangeId !== changeCounter) return;\n\n              if (childScope) childScope.$destroy();\n              childScope = scope.$new();\n              animate.leave(element.contents(), element);\n\n              var contents = jqLite('<div/>').html(response).contents();\n\n              animate.enter(contents, element);\n              $compile(contents)(childScope);\n\n              if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\n                $anchorScroll();\n              }\n\n              childScope.$emit('$includeContentLoaded');\n              scope.$eval(onloadExp);\n            }).error(function() {\n              if (thisChangeId === changeCounter) clearContent();\n            });\n            scope.$emit('$includeContentRequested');\n          } else {\n            clearContent();\n          }\n        });\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngInit\n *\n * @description\n * The `ngInit` directive specifies initialization tasks to be executed\n *  before the template enters execution mode during bootstrap.\n *\n * @element ANY\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\n *\n * @example\n   <doc:example>\n     <doc:source>\n    <div ng-init=\"greeting='Hello'; person='World'\">\n      {{greeting}} {{person}}!\n    </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check greeting', function() {\n         expect(binding('greeting')).toBe('Hello');\n         expect(binding('person')).toBe('World');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngInitDirective = ngDirective({\n  compile: function() {\n    return {\n      pre: function(scope, element, attrs) {\n        scope.$eval(attrs.ngInit);\n      }\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngNonBindable\n * @priority 1000\n *\n * @description\n * Sometimes it is necessary to write code which looks like bindings but which should be left alone\n * by angular. Use `ngNonBindable` to make angular ignore a chunk of HTML.\n *\n * @element ANY\n *\n * @example\n * In this example there are two location where a simple binding (`{{}}`) is present, but the one\n * wrapped in `ngNonBindable` is left alone.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <div>Normal: {{1 + 2}}</div>\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n      </doc:source>\n      <doc:scenario>\n       it('should check ng-non-bindable', function() {\n         expect(using('.doc-example-live').binding('1 + 2')).toBe('3');\n         expect(using('.doc-example-live').element('div:last').text()).\n           toMatch(/1 \\+ 2/);\n       });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngPluralize\n * @restrict EA\n *\n * @description\n * # Overview\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n * These rules are bundled with angular.js and the rules can be overridden\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n * by specifying the mappings between\n * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n * plural categories} and the strings to be displayed.\n *\n * # Plural categories and explicit number rules\n * There are two\n * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n * plural categories} in Angular's default en-US locale: \"one\" and \"other\".\n *\n * While a plural category may match many numbers (for example, in en-US locale, \"other\" can match\n * any number that is not 1), an explicit number rule can only match one number. For example, the\n * explicit number rule for \"3\" matches the number 3. You will see the use of plural categories\n * and explicit number rules throughout later parts of this documentation.\n *\n * # Configuring ngPluralize\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n * You can also provide an optional attribute, `offset`.\n *\n * The value of the `count` attribute can be either a string or an {@link guide/expression\n * Angular expression}; these are evaluated on the current scope for its bound value.\n *\n * The `when` attribute specifies the mappings between plural categories and the actual\n * string to be displayed. The value of the attribute should be a JSON object so that Angular\n * can interpret it correctly.\n *\n * The following example shows how to configure ngPluralize:\n *\n * <pre>\n * <ng-pluralize count=\"personCount\"\n                 when=\"{'0': 'Nobody is viewing.',\n *                      'one': '1 person is viewing.',\n *                      'other': '{} people are viewing.'}\">\n * </ng-pluralize>\n *</pre>\n *\n * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n * show \"a dozen people are viewing\".\n *\n * You can use a set of closed braces(`{}`) as a placeholder for the number that you want substituted\n * into pluralized strings. In the previous example, Angular will replace `{}` with\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n * for <span ng-non-bindable>{{numberExpression}}</span>.\n *\n * # Configuring ngPluralize with offset\n * The `offset` attribute allows further customization of pluralized text, which can result in\n * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n * you might display \"John, Kate and 2 others are viewing this document\".\n * The offset attribute allows you to offset a number by any desired value.\n * Let's take a look at an example:\n *\n * <pre>\n * <ng-pluralize count=\"personCount\" offset=2\n *               when=\"{'0': 'Nobody is viewing.',\n *                      '1': '{{person1}} is viewing.',\n *                      '2': '{{person1}} and {{person2}} are viewing.',\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n * </ng-pluralize>\n * </pre>\n *\n * Notice that we are still using two plural categories(one, other), but we added\n * three explicit number rules 0, 1 and 2.\n * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n * When three people view the document, no explicit number rule is found, so\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n * In this case, plural category 'one' is matched and \"John, Marry and one other person are viewing\"\n * is shown.\n *\n * Note that when you specify offsets, you must provide explicit number rules for\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n * plural categories \"one\" and \"other\".\n *\n * @param {string|expression} count The variable to be bounded to.\n * @param {string} when The mapping between plural category to its corresponding strings.\n * @param {number=} offset Offset to deduct from the total number.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n          function Ctrl($scope) {\n            $scope.person1 = 'Igor';\n            $scope.person2 = 'Misko';\n            $scope.personCount = 1;\n          }\n        </script>\n        <div ng-controller=\"Ctrl\">\n          Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n          Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n          Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\n          <!--- Example with simple pluralization rules for en locale --->\n          Without Offset:\n          <ng-pluralize count=\"personCount\"\n                        when=\"{'0': 'Nobody is viewing.',\n                               'one': '1 person is viewing.',\n                               'other': '{} people are viewing.'}\">\n          </ng-pluralize><br>\n\n          <!--- Example with offset --->\n          With Offset(2):\n          <ng-pluralize count=\"personCount\" offset=2\n                        when=\"{'0': 'Nobody is viewing.',\n                               '1': '{{person1}} is viewing.',\n                               '2': '{{person1}} and {{person2}} are viewing.',\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n          </ng-pluralize>\n        </div>\n      </doc:source>\n      <doc:scenario>\n        it('should show correct pluralized string', function() {\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                             toBe('1 person is viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                                                toBe('Igor is viewing.');\n\n          using('.doc-example-live').input('personCount').enter('0');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                               toBe('Nobody is viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                                              toBe('Nobody is viewing.');\n\n          using('.doc-example-live').input('personCount').enter('2');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('2 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor and Misko are viewing.');\n\n          using('.doc-example-live').input('personCount').enter('3');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('3 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor, Misko and one other person are viewing.');\n\n          using('.doc-example-live').input('personCount').enter('4');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('4 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor, Misko and 2 other people are viewing.');\n        });\n\n        it('should show data-binded names', function() {\n          using('.doc-example-live').input('personCount').enter('4');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n              toBe('Igor, Misko and 2 other people are viewing.');\n\n          using('.doc-example-live').input('person1').enter('Di');\n          using('.doc-example-live').input('person2').enter('Vojta');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n              toBe('Di, Vojta and 2 other people are viewing.');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\n  var BRACE = /{}/g;\n  return {\n    restrict: 'EA',\n    link: function(scope, element, attr) {\n      var numberExp = attr.count,\n          whenExp = element.attr(attr.$attr.when), // this is because we have {{}} in attrs\n          offset = attr.offset || 0,\n          whens = scope.$eval(whenExp),\n          whensExpFns = {},\n          startSymbol = $interpolate.startSymbol(),\n          endSymbol = $interpolate.endSymbol();\n\n      forEach(whens, function(expression, key) {\n        whensExpFns[key] =\n          $interpolate(expression.replace(BRACE, startSymbol + numberExp + '-' +\n            offset + endSymbol));\n      });\n\n      scope.$watch(function ngPluralizeWatch() {\n        var value = parseFloat(scope.$eval(numberExp));\n\n        if (!isNaN(value)) {\n          //if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,\n          //check it against pluralization rules in $locale service\n          if (!(value in whens)) value = $locale.pluralCat(value - offset);\n           return whensExpFns[value](scope, element, true);\n        } else {\n          return '';\n        }\n      }, function ngPluralizeWatchAction(newVal) {\n        element.text(newVal);\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngRepeat\n *\n * @description\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n * instance gets its own scope, where the given loop variable is set to the current collection item,\n * and `$index` is set to the item index or key.\n *\n * Special properties are exposed on the local scope of each template instance, including:\n *\n *   * `$index` – `{number}` – iterator offset of the repeated element (0..length-1)\n *   * `$first` – `{boolean}` – true if the repeated element is first in the iterator.\n *   * `$middle` – `{boolean}` – true if the repeated element is between the first and last in the iterator.\n *   * `$last` – `{boolean}` – true if the repeated element is last in the iterator.\n *\n * Additionally, you can also provide animations via the ngAnimate attribute to animate the **enter**,\n * **leave** and **move** effects.\n *\n * @animations\n * enter - when a new item is added to the list or when an item is revealed after a filter\n * leave - when an item is removed from the list or when an item is filtered out\n * move - when an adjacent item is filtered out causing a reorder or when the item contents are reordered\n *\n * @element ANY\n * @scope\n * @priority 1000\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These\n *   formats are currently supported:\n *\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n *     is a scope expression giving the collection to enumerate.\n *\n *     For example: `track in cd.tracks`.\n *\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n *     and `expression` is the scope expression giving the collection to enumerate.\n *\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n *\n *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking function\n *     which can be used to associate the objects in the collection with the DOM elements. If no tractking function\n *     is specified the ng-repeat associates elements by identity in the collection. It is an error to have\n *     more then one tractking function to  resolve to the same key. (This would mean that two distinct objects are\n *     mapped to the same DOM element, which is not possible.)\n *\n *     For example: `item in items` is equivalent to `item in items track by $id(item)'. This implies that the DOM elements\n *     will be associated by item identity in the array.\n *\n *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\n *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\n *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM\n *     element in the same way ian the DOM.\n *\n *     For example: `item in items track by item.id` Is a typical pattern when the items come from the database. In this\n *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`\n *     property is same.\n *\n * @example\n * This example initializes the scope to a list of names and\n * then uses `ngRepeat` to display every person:\n  <example animations=\"true\">\n    <file name=\"index.html\">\n      <div ng-init=\"friends = [\n        {name:'John', age:25, gender:'boy'},\n        {name:'Jessie', age:30, gender:'girl'},\n        {name:'Johanna', age:28, gender:'girl'},\n        {name:'Joy', age:15, gender:'girl'},\n        {name:'Mary', age:28, gender:'girl'},\n        {name:'Peter', age:95, gender:'boy'},\n        {name:'Sebastian', age:50, gender:'boy'},\n        {name:'Erika', age:27, gender:'girl'},\n        {name:'Patrick', age:40, gender:'boy'},\n        {name:'Samantha', age:60, gender:'girl'}\n      ]\">\n        I have {{friends.length}} friends. They are:\n        <input type=\"search\" ng-model=\"q\" placeholder=\"filter friends...\" />\n        <ul>\n          <li ng-repeat=\"friend in friends | filter:q\"\n              ng-animate=\"{enter: 'example-repeat-enter',\n                          leave: 'example-repeat-leave',\n                          move: 'example-repeat-move'}\">\n            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n          </li>\n        </ul>\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .example-repeat-enter,\n      .example-repeat-leave,\n      .example-repeat-move {\n        -webkit-transition:all linear 0.5s;\n        -moz-transition:all linear 0.5s;\n        -ms-transition:all linear 0.5s;\n        -o-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n      }\n\n      .example-repeat-enter {\n        line-height:0;\n        opacity:0;\n      }\n      .example-repeat-enter.example-repeat-enter-active {\n        line-height:20px;\n        opacity:1;\n      }\n\n      .example-repeat-leave {\n        opacity:1;\n        line-height:20px;\n      }\n      .example-repeat-leave.example-repeat-leave-active {\n        opacity:0;\n        line-height:0;\n      }\n\n      .example-repeat-move { }\n      .example-repeat-move.example-repeat-move-active { }\n    </file>\n    <file name=\"scenario.js\">\n       it('should render initial data set', function() {\n         var r = using('.doc-example-live').repeater('ul li');\n         expect(r.count()).toBe(10);\n         expect(r.row(0)).toEqual([\"1\",\"John\",\"25\"]);\n         expect(r.row(1)).toEqual([\"2\",\"Jessie\",\"30\"]);\n         expect(r.row(9)).toEqual([\"10\",\"Samantha\",\"60\"]);\n         expect(binding('friends.length')).toBe(\"10\");\n       });\n\n       it('should update repeater when filter predicate changes', function() {\n         var r = using('.doc-example-live').repeater('ul li');\n         expect(r.count()).toBe(10);\n\n         input('q').enter('ma');\n\n         expect(r.count()).toBe(2);\n         expect(r.row(0)).toEqual([\"1\",\"Mary\",\"28\"]);\n         expect(r.row(1)).toEqual([\"2\",\"Samantha\",\"60\"]);\n       });\n      </file>\n    </example>\n */\nvar ngRepeatDirective = ['$parse', '$animator', function($parse, $animator) {\n  var NG_REMOVED = '$$NG_REMOVED';\n  return {\n    transclude: 'element',\n    priority: 1000,\n    terminal: true,\n    compile: function(element, attr, linker) {\n      return function($scope, $element, $attr){\n        var animate = $animator($scope, $attr);\n        var expression = $attr.ngRepeat;\n        var match = expression.match(/^\\s*(.+)\\s+in\\s+(.*?)\\s*(\\s+track\\s+by\\s+(.+)\\s*)?$/),\n          trackByExp, trackByExpGetter, trackByIdFn, lhs, rhs, valueIdentifier, keyIdentifier,\n          hashFnLocals = {$id: hashKey};\n\n        if (!match) {\n          throw Error(\"Expected ngRepeat in form of '_item_ in _collection_[ track by _id_]' but got '\" +\n            expression + \"'.\");\n        }\n\n        lhs = match[1];\n        rhs = match[2];\n        trackByExp = match[4];\n\n        if (trackByExp) {\n          trackByExpGetter = $parse(trackByExp);\n          trackByIdFn = function(key, value, index) {\n            // assign key, value, and $index to the locals so that they can be used in hash functions\n            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;\n            hashFnLocals[valueIdentifier] = value;\n            hashFnLocals.$index = index;\n            return trackByExpGetter($scope, hashFnLocals);\n          };\n        } else {\n          trackByIdFn = function(key, value) {\n            return hashKey(value);\n          }\n        }\n\n        match = lhs.match(/^(?:([\\$\\w]+)|\\(([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\))$/);\n        if (!match) {\n          throw Error(\"'item' in 'item in collection' should be identifier or (key, value) but got '\" +\n              lhs + \"'.\");\n        }\n        valueIdentifier = match[3] || match[1];\n        keyIdentifier = match[2];\n\n        // Store a list of elements from previous run. This is a hash where key is the item from the\n        // iterator, and the value is objects with following properties.\n        //   - scope: bound scope\n        //   - element: previous element.\n        //   - index: position\n        var lastBlockMap = {};\n\n        //watch props\n        $scope.$watchCollection(rhs, function ngRepeatAction(collection){\n          var index, length,\n              cursor = $element,     // current position of the node\n              nextCursor,\n              // Same as lastBlockMap but it has the current state. It will become the\n              // lastBlockMap on the next iteration.\n              nextBlockMap = {},\n              arrayLength,\n              childScope,\n              key, value, // key/value of iteration\n              trackById,\n              collectionKeys,\n              block,       // last object information {scope, element, id}\n              nextBlockOrder = [];\n\n\n          if (isArrayLike(collection)) {\n            collectionKeys = collection;\n          } else {\n            // if object, extract keys, sort them and use to determine order of iteration over obj props\n            collectionKeys = [];\n            for (key in collection) {\n              if (collection.hasOwnProperty(key) && key.charAt(0) != '$') {\n                collectionKeys.push(key);\n              }\n            }\n            collectionKeys.sort();\n          }\n\n          arrayLength = collectionKeys.length;\n\n          // locate existing items\n          length = nextBlockOrder.length = collectionKeys.length;\n          for(index = 0; index < length; index++) {\n           key = (collection === collectionKeys) ? index : collectionKeys[index];\n           value = collection[key];\n           trackById = trackByIdFn(key, value, index);\n           if(lastBlockMap.hasOwnProperty(trackById)) {\n             block = lastBlockMap[trackById]\n             delete lastBlockMap[trackById];\n             nextBlockMap[trackById] = block;\n             nextBlockOrder[index] = block;\n           } else if (nextBlockMap.hasOwnProperty(trackById)) {\n             // restore lastBlockMap\n             forEach(nextBlockOrder, function(block) {\n               if (block && block.element) lastBlockMap[block.id] = block;\n             });\n             // This is a duplicate and we need to throw an error\n             throw new Error('Duplicates in a repeater are not allowed. Repeater: ' + expression +\n                 ' key: ' + trackById);\n           } else {\n             // new never before seen block\n             nextBlockOrder[index] = { id: trackById };\n             nextBlockMap[trackById] = false;\n           }\n         }\n\n          // remove existing items\n          for (key in lastBlockMap) {\n            if (lastBlockMap.hasOwnProperty(key)) {\n              block = lastBlockMap[key];\n              animate.leave(block.element);\n              block.element[0][NG_REMOVED] = true;\n              block.scope.$destroy();\n            }\n          }\n\n          // we are not using forEach for perf reasons (trying to avoid #call)\n          for (index = 0, length = collectionKeys.length; index < length; index++) {\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\n            value = collection[key];\n            block = nextBlockOrder[index];\n\n            if (block.element) {\n              // if we have already seen this object, then we need to reuse the\n              // associated scope/element\n              childScope = block.scope;\n\n              nextCursor = cursor[0];\n              do {\n                nextCursor = nextCursor.nextSibling;\n              } while(nextCursor && nextCursor[NG_REMOVED]);\n\n              if (block.element[0] == nextCursor) {\n                // do nothing\n                cursor = block.element;\n              } else {\n                // existing item which got moved\n                animate.move(block.element, null, cursor);\n                cursor = block.element;\n              }\n            } else {\n              // new item which we don't know about\n              childScope = $scope.$new();\n            }\n\n            childScope[valueIdentifier] = value;\n            if (keyIdentifier) childScope[keyIdentifier] = key;\n            childScope.$index = index;\n            childScope.$first = (index === 0);\n            childScope.$last = (index === (arrayLength - 1));\n            childScope.$middle = !(childScope.$first || childScope.$last);\n\n            if (!block.element) {\n              linker(childScope, function(clone) {\n                animate.enter(clone, null, cursor);\n                cursor = clone;\n                block.scope = childScope;\n                block.element = clone;\n                nextBlockMap[block.id] = block;\n              });\n            }\n          }\n          lastBlockMap = nextBlockMap;\n        });\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngShow\n *\n * @description\n * The `ngShow` and `ngHide` directives show or hide a portion of the DOM tree (HTML)\n * conditionally based on **\"truthy\"** values evaluated within an {expression}. In other\n * words, if the expression assigned to **ngShow evaluates to a true value** then **the element is set to visible**\n * (via `display:block` in css) and **if false** then **the element is set to hidden** (so display:none).\n * With ngHide this is the reverse whereas true values cause the element itself to become\n * hidden.\n *\n * Additionally, you can also provide animations via the ngAnimate attribute to animate the **show**\n * and **hide** effects.\n *\n * @animations\n * show - happens after the ngShow expression evaluates to a truthy value and the contents are set to visible\n * hide - happens before the ngShow expression evaluates to a non truthy value and just before the contents are set to hidden\n *\n * @element ANY\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy\n *     then the element is shown or hidden respectively.\n *\n * @example\n  <example animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n      <div>\n        Show:\n        <span class=\"check-element\"\n              ng-show=\"checked\"\n              ng-animate=\"{show: 'example-show', hide: 'example-hide'}\">\n          <span class=\"icon-thumbs-up\"></span> I show up when your checkbox is checked.\n        </span>\n      </div>\n      <div>\n        Hide:\n        <span class=\"check-element\"\n              ng-hide=\"checked\"\n              ng-animate=\"{show: 'example-show', hide: 'example-hide'}\">\n          <span class=\"icon-thumbs-down\"></span> I hide when your checkbox is checked.\n        </span>\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .example-show, .example-hide {\n        -webkit-transition:all linear 0.5s;\n        -moz-transition:all linear 0.5s;\n        -ms-transition:all linear 0.5s;\n        -o-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n      }\n\n      .example-show {\n        line-height:0;\n        opacity:0;\n        padding:0 10px;\n      }\n      .example-show-active.example-show-active {\n        line-height:20px;\n        opacity:1;\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n\n      .example-hide {\n        line-height:20px;\n        opacity:1;\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n      .example-hide-active.example-hide-active {\n        line-height:0;\n        opacity:0;\n        padding:0 10px;\n      }\n\n      .check-element {\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n    </file>\n    <file name=\"scenario.js\">\n       it('should check ng-show / ng-hide', function() {\n         expect(element('.doc-example-live span:first:hidden').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:visible').count()).toEqual(1);\n\n         input('checked').check();\n\n         expect(element('.doc-example-live span:first:visible').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:hidden').count()).toEqual(1);\n       });\n    </file>\n  </example>\n */\n//TODO(misko): refactor to remove element from the DOM\nvar ngShowDirective = ['$animator', function($animator) {\n  return function(scope, element, attr) {\n    var animate = $animator(scope, attr);\n    scope.$watch(attr.ngShow, function ngShowWatchAction(value){\n      animate[toBoolean(value) ? 'show' : 'hide'](element);\n    });\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngHide\n *\n * @description\n * The `ngShow` and `ngHide` directives show or hide a portion of the DOM tree (HTML)\n * conditionally based on **\"truthy\"** values evaluated within an {expression}. In other\n * words, if the expression assigned to **ngShow evaluates to a true value** then **the element is set to visible**\n * (via `display:block` in css) and **if false** then **the element is set to hidden** (so display:none).\n * With ngHide this is the reverse whereas true values cause the element itself to become\n * hidden.\n *\n * Additionally, you can also provide animations via the ngAnimate attribute to animate the **show**\n * and **hide** effects.\n *\n * @animations\n * show - happens after the ngHide expression evaluates to a non truthy value and the contents are set to visible\n * hide - happens after the ngHide expression evaluates to a truthy value and just before the contents are set to hidden\n *\n * @element ANY\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\n *     the element is shown or hidden respectively.\n *\n * @example\n  <example animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n      <div>\n        Show:\n        <span class=\"check-element\"\n              ng-show=\"checked\"\n              ng-animate=\"{show: 'example-show', hide: 'example-hide'}\">\n          <span class=\"icon-thumbs-up\"></span> I show up when your checkbox is checked.\n        </span>\n      </div>\n      <div>\n        Hide:\n        <span class=\"check-element\"\n              ng-hide=\"checked\"\n              ng-animate=\"{show: 'example-show', hide: 'example-hide'}\">\n          <span class=\"icon-thumbs-down\"></span> I hide when your checkbox is checked.\n        </span>\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .example-show, .example-hide {\n        -webkit-transition:all linear 0.5s;\n        -moz-transition:all linear 0.5s;\n        -ms-transition:all linear 0.5s;\n        -o-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n      }\n\n      .example-show {\n        line-height:0;\n        opacity:0;\n        padding:0 10px;\n      }\n      .example-show.example-show-active {\n        line-height:20px;\n        opacity:1;\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n\n      .example-hide {\n        line-height:20px;\n        opacity:1;\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n      .example-hide.example-hide-active {\n        line-height:0;\n        opacity:0;\n        padding:0 10px;\n      }\n\n      .check-element {\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n    </file>\n    <file name=\"scenario.js\">\n       it('should check ng-show / ng-hide', function() {\n         expect(element('.doc-example-live .check-element:first:hidden').count()).toEqual(1);\n         expect(element('.doc-example-live .check-element:last:visible').count()).toEqual(1);\n\n         input('checked').check();\n\n         expect(element('.doc-example-live .check-element:first:visible').count()).toEqual(1);\n         expect(element('.doc-example-live .check-element:last:hidden').count()).toEqual(1);\n       });\n    </file>\n  </example>\n */\n//TODO(misko): refactor to remove element from the DOM\nvar ngHideDirective = ['$animator', function($animator) {\n  return function(scope, element, attr) {\n    var animate = $animator(scope, attr);\n    scope.$watch(attr.ngHide, function ngHideWatchAction(value){\n      animate[toBoolean(value) ? 'hide' : 'show'](element);\n    });\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngStyle\n *\n * @description\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n *\n * @element ANY\n * @param {expression} ngStyle {@link guide/expression Expression} which evals to an\n *      object whose keys are CSS style names and values are corresponding values for those CSS\n *      keys.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <input type=\"button\" value=\"set\" ng-click=\"myStyle={color:'red'}\">\n        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n        <br/>\n        <span ng-style=\"myStyle\">Sample Text</span>\n        <pre>myStyle={{myStyle}}</pre>\n     </file>\n     <file name=\"style.css\">\n       span {\n         color: black;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-style', function() {\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(0, 0, 0)');\n         element('.doc-example-live :button[value=set]').click();\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(255, 0, 0)');\n         element('.doc-example-live :button[value=clear]').click();\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(0, 0, 0)');\n       });\n     </file>\n   </example>\n */\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n    if (oldStyles && (newStyles !== oldStyles)) {\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\n    }\n    if (newStyles) element.css(newStyles);\n  }, true);\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSwitch\n * @restrict EA\n *\n * @description\n * The ngSwitch directive is used to conditionally swap DOM structure on your template based on a scope expression.\n * Elements within ngSwitch but without ngSwitchWhen or ngSwitchDefault directives will be preserved at the location\n * as specified in the template.\n *\n * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\n * from the template cache), ngSwitch simply choses one of the nested elements and makes it visible based on which element\n * matches the value obtained from the evaluated expression. In other words, you define a container element\n * (where you place the directive), place an expression on the **on=\"...\" attribute**\n * (or the **ng-switch=\"...\" attribute**), define any inner elements inside of the directive and place\n * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\n * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default\n * attribute is displayed.\n *\n * Additionally, you can also provide animations via the ngAnimate attribute to animate the **enter**\n * and **leave** effects.\n *\n * @animations\n * enter - happens after the ngSwtich contents change and the matched child element is placed inside the container\n * leave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM\n *\n * @usage\n * <ANY ng-switch=\"expression\">\n *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n *   <ANY ng-switch-default>...</ANY>\n * </ANY>\n *\n * @scope\n * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\n * @paramDescription\n * On child elements add:\n *\n * * `ngSwitchWhen`: the case statement to match against. If match then this\n *   case will be displayed. If the same match appears multiple times, all the\n *   elements will be displayed.\n * * `ngSwitchDefault`: the default case when no other case match. If there\n *   are multiple default cases, all of them will be displayed when no other\n *   case match.\n *\n *\n * @example\n  <example animations=\"true\">\n    <file name=\"index.html\">\n      <div ng-controller=\"Ctrl\">\n        <select ng-model=\"selection\" ng-options=\"item for item in items\">\n        </select>\n        <tt>selection={{selection}}</tt>\n        <hr/>\n        <div\n          class=\"example-animate-container\"\n          ng-switch on=\"selection\"\n          ng-animate=\"{enter: 'example-enter', leave: 'example-leave'}\">\n            <div ng-switch-when=\"settings\">Settings Div</div>\n            <div ng-switch-when=\"home\">Home Span</div>\n            <div ng-switch-default>default</div>\n        </div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      function Ctrl($scope) {\n        $scope.items = ['settings', 'home', 'other'];\n        $scope.selection = $scope.items[0];\n      }\n    </file>\n    <file name=\"animations.css\">\n      .example-leave, .example-enter {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -moz-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -ms-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        -o-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n      }\n\n      .example-animate-container > * {\n        display:block;\n        padding:10px;\n      }\n\n      .example-enter {\n        top:-50px;\n      }\n      .example-enter.example-enter-active {\n        top:0;\n      }\n\n      .example-leave {\n        top:0;\n      }\n      .example-leave.example-leave-active {\n        top:50px;\n      }\n    </file>\n    <file name=\"scenario.js\">\n      it('should start in settings', function() {\n        expect(element('.doc-example-live [ng-switch]').text()).toMatch(/Settings Div/);\n      });\n      it('should change to home', function() {\n        select('selection').option('home');\n        expect(element('.doc-example-live [ng-switch]').text()).toMatch(/Home Span/);\n      });\n      it('should select default', function() {\n        select('selection').option('other');\n        expect(element('.doc-example-live [ng-switch]').text()).toMatch(/default/);\n      });\n    </file>\n  </example>\n */\nvar ngSwitchDirective = ['$animator', function($animator) {\n  return {\n    restrict: 'EA',\n    require: 'ngSwitch',\n\n    // asks for $scope to fool the BC controller module\n    controller: ['$scope', function ngSwitchController() {\n     this.cases = {};\n    }],\n    link: function(scope, element, attr, ngSwitchController) {\n      var animate = $animator(scope, attr);\n      var watchExpr = attr.ngSwitch || attr.on,\n          selectedTranscludes,\n          selectedElements,\n          selectedScopes = [];\n\n      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n        for (var i= 0, ii=selectedScopes.length; i<ii; i++) {\n          selectedScopes[i].$destroy();\n          animate.leave(selectedElements[i]);\n        }\n\n        selectedElements = [];\n        selectedScopes = [];\n\n        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {\n          scope.$eval(attr.change);\n          forEach(selectedTranscludes, function(selectedTransclude) {\n            var selectedScope = scope.$new();\n            selectedScopes.push(selectedScope);\n            selectedTransclude.transclude(selectedScope, function(caseElement) {\n              var anchor = selectedTransclude.element;\n\n              selectedElements.push(caseElement);\n              animate.enter(caseElement, anchor.parent(), anchor);\n            });\n          });\n        }\n      });\n    }\n  }\n}];\n\nvar ngSwitchWhenDirective = ngDirective({\n  transclude: 'element',\n  priority: 500,\n  require: '^ngSwitch',\n  compile: function(element, attrs, transclude) {\n    return function(scope, element, attr, ctrl) {\n      ctrl.cases['!' + attrs.ngSwitchWhen] = (ctrl.cases['!' + attrs.ngSwitchWhen] || []);\n      ctrl.cases['!' + attrs.ngSwitchWhen].push({ transclude: transclude, element: element });\n    };\n  }\n});\n\nvar ngSwitchDefaultDirective = ngDirective({\n  transclude: 'element',\n  priority: 500,\n  require: '^ngSwitch',\n  compile: function(element, attrs, transclude) {\n    return function(scope, element, attr, ctrl) {\n      ctrl.cases['?'] = (ctrl.cases['?'] || []);\n      ctrl.cases['?'].push({ transclude: transclude, element: element });\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngTransclude\n *\n * @description\n * Insert the transcluded DOM here.\n *\n * @element ANY\n *\n * @example\n   <doc:example module=\"transclude\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.title = 'Lorem Ipsum';\n           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n         }\n\n         angular.module('transclude', [])\n          .directive('pane', function(){\n             return {\n               restrict: 'E',\n               transclude: true,\n               scope: 'isolate',\n               locals: { title:'bind' },\n               template: '<div style=\"border: 1px solid black;\">' +\n                           '<div style=\"background-color: gray\">{{title}}</div>' +\n                           '<div ng-transclude></div>' +\n                         '</div>'\n             };\n         });\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input ng-model=\"title\"><br>\n         <textarea ng-model=\"text\"></textarea> <br/>\n         <pane title=\"{{title}}\">{{text}}</pane>\n       </div>\n     </doc:source>\n     <doc:scenario>\n        it('should have transcluded', function() {\n          input('title').enter('TITLE');\n          input('text').enter('TEXT');\n          expect(binding('title')).toEqual('TITLE');\n          expect(binding('text')).toEqual('TEXT');\n        });\n     </doc:scenario>\n   </doc:example>\n *\n */\nvar ngTranscludeDirective = ngDirective({\n  controller: ['$transclude', '$element', function($transclude, $element) {\n    $transclude(function(clone) {\n      $element.append(clone);\n    });\n  }]\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngView\n * @restrict ECA\n *\n * @description\n * # Overview\n * `ngView` is a directive that complements the {@link ng.$route $route} service by\n * including the rendered template of the current route into the main layout (`index.html`) file.\n * Every time the current route changes, the included view changes with it according to the\n * configuration of the `$route` service.\n *\n * Additionally, you can also provide animations via the ngAnimate attribute to animate the **enter**\n * and **leave** effects.\n *\n * @animations\n * enter - happens just after the ngView contents are changed (when the new view DOM element is inserted into the DOM)\n * leave - happens just after the current ngView contents change and just before the former contents are removed from the DOM\n *\n * @scope\n * @example\n    <example module=\"ngView\" animations=\"true\">\n      <file name=\"index.html\">\n        <div ng-controller=\"MainCntl as main\">\n          Choose:\n          <a href=\"Book/Moby\">Moby</a> |\n          <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n          <a href=\"Book/Gatsby\">Gatsby</a> |\n          <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n          <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n          <div\n            ng-view\n            class=\"example-animate-container\"\n            ng-animate=\"{enter: 'example-enter', leave: 'example-leave'}\"></div>\n          <hr />\n\n          <pre>$location.path() = {{main.$location.path()}}</pre>\n          <pre>$route.current.templateUrl = {{main.$route.current.templateUrl}}</pre>\n          <pre>$route.current.params = {{main.$route.current.params}}</pre>\n          <pre>$route.current.scope.name = {{main.$route.current.scope.name}}</pre>\n          <pre>$routeParams = {{main.$routeParams}}</pre>\n        </div>\n      </file>\n\n      <file name=\"book.html\">\n        <div>\n          controller: {{book.name}}<br />\n          Book Id: {{book.params.bookId}}<br />\n        </div>\n      </file>\n\n      <file name=\"chapter.html\">\n        <div>\n          controller: {{chapter.name}}<br />\n          Book Id: {{chapter.params.bookId}}<br />\n          Chapter Id: {{chapter.params.chapterId}}\n        </div>\n      </file>\n\n      <file name=\"animations.css\">\n        .example-leave, .example-enter {\n          -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n          -moz-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n          -ms-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n          -o-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n          transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;\n        }\n\n        .example-animate-container {\n          position:relative;\n          height:100px;\n        }\n\n        .example-animate-container > * {\n          display:block;\n          width:100%;\n          border-left:1px solid black;\n\n          position:absolute;\n          top:0;\n          left:0;\n          right:0;\n          bottom:0;\n          padding:10px;\n        }\n\n        .example-enter {\n          left:100%;\n        }\n        .example-enter.example-enter-active {\n          left:0;\n        }\n\n        .example-leave { }\n        .example-leave.example-leave-active {\n          left:-100%;\n        }\n      </file>\n\n      <file name=\"script.js\">\n        angular.module('ngView', [], function($routeProvider, $locationProvider) {\n          $routeProvider.when('/Book/:bookId', {\n            templateUrl: 'book.html',\n            controller: BookCntl,\n            controllerAs: 'book'\n          });\n          $routeProvider.when('/Book/:bookId/ch/:chapterId', {\n            templateUrl: 'chapter.html',\n            controller: ChapterCntl,\n            controllerAs: 'chapter'\n          });\n\n          // configure html5 to get links working on jsfiddle\n          $locationProvider.html5Mode(true);\n        });\n\n        function MainCntl($route, $routeParams, $location) {\n          this.$route = $route;\n          this.$location = $location;\n          this.$routeParams = $routeParams;\n        }\n\n        function BookCntl($routeParams) {\n          this.name = \"BookCntl\";\n          this.params = $routeParams;\n        }\n\n        function ChapterCntl($routeParams) {\n          this.name = \"ChapterCntl\";\n          this.params = $routeParams;\n        }\n      </file>\n\n      <file name=\"scenario.js\">\n        it('should load and compile correct template', function() {\n          element('a:contains(\"Moby: Ch1\")').click();\n          var content = element('.doc-example-live [ng-view]').text();\n          expect(content).toMatch(/controller\\: ChapterCntl/);\n          expect(content).toMatch(/Book Id\\: Moby/);\n          expect(content).toMatch(/Chapter Id\\: 1/);\n\n          element('a:contains(\"Scarlet\")').click();\n          content = element('.doc-example-live [ng-view]').text();\n          expect(content).toMatch(/controller\\: BookCntl/);\n          expect(content).toMatch(/Book Id\\: Scarlet/);\n        });\n      </file>\n    </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngView#$viewContentLoaded\n * @eventOf ng.directive:ngView\n * @eventType emit on the current ngView scope\n * @description\n * Emitted every time the ngView content is reloaded.\n */\nvar ngViewDirective = ['$http', '$templateCache', '$route', '$anchorScroll', '$compile',\n                       '$controller', '$animator',\n               function($http,   $templateCache,   $route,   $anchorScroll,   $compile,\n                        $controller,  $animator) {\n  return {\n    restrict: 'ECA',\n    terminal: true,\n    link: function(scope, element, attr) {\n      var lastScope,\n          onloadExp = attr.onload || '',\n          animate = $animator(scope, attr);\n\n      scope.$on('$routeChangeSuccess', update);\n      update();\n\n\n      function destroyLastScope() {\n        if (lastScope) {\n          lastScope.$destroy();\n          lastScope = null;\n        }\n      }\n\n      function clearContent() {\n        animate.leave(element.contents(), element);\n        destroyLastScope();\n      }\n\n      function update() {\n        var locals = $route.current && $route.current.locals,\n            template = locals && locals.$template;\n\n        if (template) {\n          clearContent();\n          var enterElements = jqLite('<div></div>').html(template).contents();\n          animate.enter(enterElements, element);\n\n          var link = $compile(enterElements),\n              current = $route.current,\n              controller;\n\n          lastScope = current.scope = scope.$new();\n          if (current.controller) {\n            locals.$scope = lastScope;\n            controller = $controller(current.controller, locals);\n            if (current.controllerAs) {\n              lastScope[current.controllerAs] = controller;\n            }\n            element.children().data('$ngControllerController', controller);\n          }\n\n          link(lastScope);\n          lastScope.$emit('$viewContentLoaded');\n          lastScope.$eval(onloadExp);\n\n          // $anchorScroll might listen on event...\n          $anchorScroll();\n        } else {\n          clearContent();\n        }\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:script\n *\n * @description\n * Load content of a script tag, with type `text/ng-template`, into `$templateCache`, so that the\n * template can be used by `ngInclude`, `ngView` or directive templates.\n *\n * @restrict E\n * @param {'text/ng-template'} type must be set to `'text/ng-template'`\n *\n * @example\n  <doc:example>\n    <doc:source>\n      <script type=\"text/ng-template\" id=\"/tpl.html\">\n        Content of the template.\n      </script>\n\n      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n    </doc:source>\n    <doc:scenario>\n      it('should load template defined inside script tag', function() {\n        element('#tpl-link').click();\n        expect(element('#tpl-content').text()).toMatch(/Content of the template/);\n      });\n    </doc:scenario>\n  </doc:example>\n */\nvar scriptDirective = ['$templateCache', function($templateCache) {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element, attr) {\n      if (attr.type == 'text/ng-template') {\n        var templateUrl = attr.id,\n            // IE is not consistent, in scripts we have to read .text but in other nodes we have to read .textContent\n            text = element[0].text;\n\n        $templateCache.put(templateUrl, text);\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:select\n * @restrict E\n *\n * @description\n * HTML `SELECT` element with angular data-binding.\n *\n * # `ngOptions`\n *\n * Optionally `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n * elements for a `<select>` element using an array or an object obtained by evaluating the\n * `ngOptions` expression.\n *˝˝\n * When an item in the select menu is select, the value of array element or object property\n * represented by the selected option will be bound to the model identified by the `ngModel`\n * directive of the parent select element.\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * Note: `ngOptions` provides iterator facility for `<option>` element which should be used instead\n * of {@link ng.directive:ngRepeat ngRepeat} when you want the\n * `select` model to be bound to a non-string value. This is because an option element can currently\n * be bound to string values only.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required The control is considered valid only if value is entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {comprehension_expression=} ngOptions in one of the following forms:\n *\n *   * for array data sources:\n *     * `label` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n *   * for object data sources:\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`group by`** `group`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *\n * Where:\n *\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n *   * `value`: local variable which will refer to each item in the `array` or each property value\n *      of `object` during iteration.\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\n *   * `label`: The result of this expression will be the label for `<option>` element. The\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n *      element. If not specified, `select` expression will default to `value`.\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n *      DOM element.\n *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n *      used to identify the objects in the array. The `trackexpr` will most likely refer to the\n *     `value` variable (e.g. `value.propertyName`).\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n        function MyCntrl($scope) {\n          $scope.colors = [\n            {name:'black', shade:'dark'},\n            {name:'white', shade:'light'},\n            {name:'red', shade:'dark'},\n            {name:'blue', shade:'dark'},\n            {name:'yellow', shade:'light'}\n          ];\n          $scope.color = $scope.colors[2]; // red\n        }\n        </script>\n        <div ng-controller=\"MyCntrl\">\n          <ul>\n            <li ng-repeat=\"color in colors\">\n              Name: <input ng-model=\"color.name\">\n              [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n            </li>\n            <li>\n              [<a href ng-click=\"colors.push({})\">add</a>]\n            </li>\n          </ul>\n          <hr/>\n          Color (null not allowed):\n          <select ng-model=\"color\" ng-options=\"c.name for c in colors\"></select><br>\n\n          Color (null allowed):\n          <span  class=\"nullable\">\n            <select ng-model=\"color\" ng-options=\"c.name for c in colors\">\n              <option value=\"\">-- chose color --</option>\n            </select>\n          </span><br/>\n\n          Color grouped by shade:\n          <select ng-model=\"color\" ng-options=\"c.name group by c.shade for c in colors\">\n          </select><br/>\n\n\n          Select <a href ng-click=\"color={name:'not in list'}\">bogus</a>.<br>\n          <hr/>\n          Currently selected: {{ {selected_color:color}  }}\n          <div style=\"border:solid 1px black; height:20px\"\n               ng-style=\"{'background-color':color.name}\">\n          </div>\n        </div>\n      </doc:source>\n      <doc:scenario>\n         it('should check ng-options', function() {\n           expect(binding('{selected_color:color}')).toMatch('red');\n           select('color').option('0');\n           expect(binding('{selected_color:color}')).toMatch('black');\n           using('.nullable').select('color').option('');\n           expect(binding('{selected_color:color}')).toMatch('null');\n         });\n      </doc:scenario>\n    </doc:example>\n */\n\nvar ngOptionsDirective = valueFn({ terminal: true });\nvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\n                         //0000111110000000000022220000000000000000000000333300000000000000444444444444444440000000005555555555555555500000006666666666666666600000000000000007777000000000000000000088888\n  var NG_OPTIONS_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*)|(?:\\(\\s*([\\$\\w][\\$\\w\\d]*)\\s*,\\s*([\\$\\w][\\$\\w\\d]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/,\n      nullModelCtrl = {$setViewValue: noop};\n\n  return {\n    restrict: 'E',\n    require: ['select', '?ngModel'],\n    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\n      var self = this,\n          optionsMap = {},\n          ngModelCtrl = nullModelCtrl,\n          nullOption,\n          unknownOption;\n\n\n      self.databound = $attrs.ngModel;\n\n\n      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\n        ngModelCtrl = ngModelCtrl_;\n        nullOption = nullOption_;\n        unknownOption = unknownOption_;\n      }\n\n\n      self.addOption = function(value) {\n        optionsMap[value] = true;\n\n        if (ngModelCtrl.$viewValue == value) {\n          $element.val(value);\n          if (unknownOption.parent()) unknownOption.remove();\n        }\n      };\n\n\n      self.removeOption = function(value) {\n        if (this.hasOption(value)) {\n          delete optionsMap[value];\n          if (ngModelCtrl.$viewValue == value) {\n            this.renderUnknownOption(value);\n          }\n        }\n      };\n\n\n      self.renderUnknownOption = function(val) {\n        var unknownVal = '? ' + hashKey(val) + ' ?';\n        unknownOption.val(unknownVal);\n        $element.prepend(unknownOption);\n        $element.val(unknownVal);\n        unknownOption.prop('selected', true); // needed for IE\n      }\n\n\n      self.hasOption = function(value) {\n        return optionsMap.hasOwnProperty(value);\n      }\n\n      $scope.$on('$destroy', function() {\n        // disable unknown option so that we don't do work when the whole select is being destroyed\n        self.renderUnknownOption = noop;\n      });\n    }],\n\n    link: function(scope, element, attr, ctrls) {\n      // if ngModel is not defined, we don't need to do anything\n      if (!ctrls[1]) return;\n\n      var selectCtrl = ctrls[0],\n          ngModelCtrl = ctrls[1],\n          multiple = attr.multiple,\n          optionsExp = attr.ngOptions,\n          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\n          emptyOption,\n          // we can't just jqLite('<option>') since jqLite is not smart enough\n          // to create it in <select> and IE barfs otherwise.\n          optionTemplate = jqLite(document.createElement('option')),\n          optGroupTemplate =jqLite(document.createElement('optgroup')),\n          unknownOption = optionTemplate.clone();\n\n      // find \"null\" option\n      for(var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\n        if (children[i].value == '') {\n          emptyOption = nullOption = children.eq(i);\n          break;\n        }\n      }\n\n      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\n\n      // required validator\n      if (multiple && (attr.required || attr.ngRequired)) {\n        var requiredValidator = function(value) {\n          ngModelCtrl.$setValidity('required', !attr.required || (value && value.length));\n          return value;\n        };\n\n        ngModelCtrl.$parsers.push(requiredValidator);\n        ngModelCtrl.$formatters.unshift(requiredValidator);\n\n        attr.$observe('required', function() {\n          requiredValidator(ngModelCtrl.$viewValue);\n        });\n      }\n\n      if (optionsExp) Options(scope, element, ngModelCtrl);\n      else if (multiple) Multiple(scope, element, ngModelCtrl);\n      else Single(scope, element, ngModelCtrl, selectCtrl);\n\n\n      ////////////////////////////\n\n\n\n      function Single(scope, selectElement, ngModelCtrl, selectCtrl) {\n        ngModelCtrl.$render = function() {\n          var viewValue = ngModelCtrl.$viewValue;\n\n          if (selectCtrl.hasOption(viewValue)) {\n            if (unknownOption.parent()) unknownOption.remove();\n            selectElement.val(viewValue);\n            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\n          } else {\n            if (isUndefined(viewValue) && emptyOption) {\n              selectElement.val('');\n            } else {\n              selectCtrl.renderUnknownOption(viewValue);\n            }\n          }\n        };\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            if (unknownOption.parent()) unknownOption.remove();\n            ngModelCtrl.$setViewValue(selectElement.val());\n          });\n        });\n      }\n\n      function Multiple(scope, selectElement, ctrl) {\n        var lastView;\n        ctrl.$render = function() {\n          var items = new HashMap(ctrl.$viewValue);\n          forEach(selectElement.find('option'), function(option) {\n            option.selected = isDefined(items.get(option.value));\n          });\n        };\n\n        // we have to do it on each watch since ngModel watches reference, but\n        // we need to work of an array, so we need to see if anything was inserted/removed\n        scope.$watch(function selectMultipleWatch() {\n          if (!equals(lastView, ctrl.$viewValue)) {\n            lastView = copy(ctrl.$viewValue);\n            ctrl.$render();\n          }\n        });\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            var array = [];\n            forEach(selectElement.find('option'), function(option) {\n              if (option.selected) {\n                array.push(option.value);\n              }\n            });\n            ctrl.$setViewValue(array);\n          });\n        });\n      }\n\n      function Options(scope, selectElement, ctrl) {\n        var match;\n\n        if (! (match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n          throw Error(\n            \"Expected ngOptions in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_ (track by _expr_)?'\" +\n            \" but got '\" + optionsExp + \"'.\");\n        }\n\n        var displayFn = $parse(match[2] || match[1]),\n            valueName = match[4] || match[6],\n            keyName = match[5],\n            groupByFn = $parse(match[3] || ''),\n            valueFn = $parse(match[2] ? match[1] : valueName),\n            valuesFn = $parse(match[7]),\n            track = match[8],\n            trackFn = track ? $parse(match[8]) : null,\n            // This is an array of array of existing option groups in DOM. We try to reuse these if possible\n            // optionGroupsCache[0] is the options with no option group\n            // optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\n            optionGroupsCache = [[{element: selectElement, label:''}]];\n\n        if (nullOption) {\n          // compile the element since there might be bindings in it\n          $compile(nullOption)(scope);\n\n          // remove the class, which is added automatically because we recompile the element and it\n          // becomes the compilation root\n          nullOption.removeClass('ng-scope');\n\n          // we need to remove it before calling selectElement.html('') because otherwise IE will\n          // remove the label from the element. wtf?\n          nullOption.remove();\n        }\n\n        // clear contents, we'll add what's needed based on the model\n        selectElement.html('');\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            var optionGroup,\n                collection = valuesFn(scope) || [],\n                locals = {},\n                key, value, optionElement, index, groupIndex, length, groupLength;\n\n            if (multiple) {\n              value = [];\n              for (groupIndex = 0, groupLength = optionGroupsCache.length;\n                   groupIndex < groupLength;\n                   groupIndex++) {\n                // list of options for that group. (first item has the parent)\n                optionGroup = optionGroupsCache[groupIndex];\n\n                for(index = 1, length = optionGroup.length; index < length; index++) {\n                  if ((optionElement = optionGroup[index].element)[0].selected) {\n                    key = optionElement.val();\n                    if (keyName) locals[keyName] = key;\n                    if (trackFn) {\n                      for (var trackIndex = 0; trackIndex < collection.length; trackIndex++) {\n                        locals[valueName] = collection[trackIndex];\n                        if (trackFn(scope, locals) == key) break;\n                      } \n                    } else {\n                      locals[valueName] = collection[key];\n                    }\n                    value.push(valueFn(scope, locals));\n                  }\n                }\n              }\n            } else {\n              key = selectElement.val();\n              if (key == '?') {\n                value = undefined;\n              } else if (key == ''){\n                value = null;\n              } else {\n                if (trackFn) {\n                  for (var trackIndex = 0; trackIndex < collection.length; trackIndex++) {\n                    locals[valueName] = collection[trackIndex];\n                    if (trackFn(scope, locals) == key) {\n                      value = valueFn(scope, locals);\n                      break;\n                    }\n                  }\n                } else {\n                  locals[valueName] = collection[key];\n                  if (keyName) locals[keyName] = key;\n                  value = valueFn(scope, locals);\n                }\n              }\n            }\n            ctrl.$setViewValue(value);\n          });\n        });\n\n        ctrl.$render = render;\n\n        // TODO(vojta): can't we optimize this ?\n        scope.$watch(render);\n\n        function render() {\n          var optionGroups = {'':[]}, // Temporary location for the option groups before we render them\n              optionGroupNames = [''],\n              optionGroupName,\n              optionGroup,\n              option,\n              existingParent, existingOptions, existingOption,\n              modelValue = ctrl.$modelValue,\n              values = valuesFn(scope) || [],\n              keys = keyName ? sortedKeys(values) : values,\n              groupLength, length,\n              groupIndex, index,\n              locals = {},\n              selected,\n              selectedSet = false, // nothing is selected yet\n              lastElement,\n              element,\n              label;\n\n          if (multiple) {\n            if (trackFn && isArray(modelValue)) {\n              selectedSet = new HashMap([]);\n              for (var trackIndex = 0; trackIndex < modelValue.length; trackIndex++) {\n                locals[valueName] = modelValue[trackIndex];\n                selectedSet.put(trackFn(scope, locals), modelValue[trackIndex]);\n              }\n            } else {\n              selectedSet = new HashMap(modelValue);\n            }\n          }\n\n          // We now build up the list of options we need (we merge later)\n          for (index = 0; length = keys.length, index < length; index++) {\n               locals[valueName] = values[keyName ? locals[keyName]=keys[index]:index];\n               optionGroupName = groupByFn(scope, locals) || '';\n            if (!(optionGroup = optionGroups[optionGroupName])) {\n              optionGroup = optionGroups[optionGroupName] = [];\n              optionGroupNames.push(optionGroupName);\n            }\n            if (multiple) {\n              selected = selectedSet.remove(trackFn ? trackFn(scope, locals) : valueFn(scope, locals)) != undefined;\n            } else {\n              if (trackFn) {\n                var modelCast = {};\n                modelCast[valueName] = modelValue;\n                selected = trackFn(scope, modelCast) === trackFn(scope, locals);\n              } else {\n                selected = modelValue === valueFn(scope, locals);\n              }\n              selectedSet = selectedSet || selected; // see if at least one item is selected\n            }\n            label = displayFn(scope, locals); // what will be seen by the user\n            label = label === undefined ? '' : label; // doing displayFn(scope, locals) || '' overwrites zero values\n            optionGroup.push({\n              id: trackFn ? trackFn(scope, locals) : (keyName ? keys[index] : index),   // either the index into array or key from object\n              label: label,\n              selected: selected                   // determine if we should be selected\n            });\n          }\n          if (!multiple) {\n            if (nullOption || modelValue === null) {\n              // insert null option if we have a placeholder, or the model is null\n              optionGroups[''].unshift({id:'', label:'', selected:!selectedSet});\n            } else if (!selectedSet) {\n              // option could not be found, we have to insert the undefined item\n              optionGroups[''].unshift({id:'?', label:'', selected:true});\n            }\n          }\n\n          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\n          for (groupIndex = 0, groupLength = optionGroupNames.length;\n               groupIndex < groupLength;\n               groupIndex++) {\n            // current option group name or '' if no group\n            optionGroupName = optionGroupNames[groupIndex];\n\n            // list of options for that group. (first item has the parent)\n            optionGroup = optionGroups[optionGroupName];\n\n            if (optionGroupsCache.length <= groupIndex) {\n              // we need to grow the optionGroups\n              existingParent = {\n                element: optGroupTemplate.clone().attr('label', optionGroupName),\n                label: optionGroup.label\n              };\n              existingOptions = [existingParent];\n              optionGroupsCache.push(existingOptions);\n              selectElement.append(existingParent.element);\n            } else {\n              existingOptions = optionGroupsCache[groupIndex];\n              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\n\n              // update the OPTGROUP label if not the same.\n              if (existingParent.label != optionGroupName) {\n                existingParent.element.attr('label', existingParent.label = optionGroupName);\n              }\n            }\n\n            lastElement = null;  // start at the beginning\n            for(index = 0, length = optionGroup.length; index < length; index++) {\n              option = optionGroup[index];\n              if ((existingOption = existingOptions[index+1])) {\n                // reuse elements\n                lastElement = existingOption.element;\n                if (existingOption.label !== option.label) {\n                  lastElement.text(existingOption.label = option.label);\n                }\n                if (existingOption.id !== option.id) {\n                  lastElement.val(existingOption.id = option.id);\n                }\n                // lastElement.prop('selected') provided by jQuery has side-effects\n                if (lastElement[0].selected !== option.selected) {\n                  lastElement.prop('selected', (existingOption.selected = option.selected));\n                }\n              } else {\n                // grow elements\n\n                // if it's a null option\n                if (option.id === '' && nullOption) {\n                  // put back the pre-compiled element\n                  element = nullOption;\n                } else {\n                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\n                  // in this version of jQuery on some browser the .text() returns a string\n                  // rather then the element.\n                  (element = optionTemplate.clone())\n                      .val(option.id)\n                      .attr('selected', option.selected)\n                      .text(option.label);\n                }\n\n                existingOptions.push(existingOption = {\n                    element: element,\n                    label: option.label,\n                    id: option.id,\n                    selected: option.selected\n                });\n                if (lastElement) {\n                  lastElement.after(element);\n                } else {\n                  existingParent.element.append(element);\n                }\n                lastElement = element;\n              }\n            }\n            // remove any excessive OPTIONs in a group\n            index++; // increment since the existingOptions[0] is parent element not OPTION\n            while(existingOptions.length > index) {\n              existingOptions.pop().element.remove();\n            }\n          }\n          // remove any excessive OPTGROUPs from select\n          while(optionGroupsCache.length > groupIndex) {\n            optionGroupsCache.pop()[0].element.remove();\n          }\n        }\n      }\n    }\n  }\n}];\n\nvar optionDirective = ['$interpolate', function($interpolate) {\n  var nullSelectCtrl = {\n    addOption: noop,\n    removeOption: noop\n  };\n\n  return {\n    restrict: 'E',\n    priority: 100,\n    compile: function(element, attr) {\n      if (isUndefined(attr.value)) {\n        var interpolateFn = $interpolate(element.text(), true);\n        if (!interpolateFn) {\n          attr.$set('value', element.text());\n        }\n      }\n\n      return function (scope, element, attr) {\n        var selectCtrlName = '$selectController',\n            parent = element.parent(),\n            selectCtrl = parent.data(selectCtrlName) ||\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\n        if (selectCtrl && selectCtrl.databound) {\n          // For some reason Opera defaults to true and if not overridden this messes up the repeater.\n          // We don't want the view to drive the initialization of the model anyway.\n          element.prop('selected', false);\n        } else {\n          selectCtrl = nullSelectCtrl;\n        }\n\n        if (interpolateFn) {\n          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\n            attr.$set('value', newVal);\n            if (newVal !== oldVal) selectCtrl.removeOption(oldVal);\n            selectCtrl.addOption(newVal);\n          });\n        } else {\n          selectCtrl.addOption(attr.value);\n        }\n\n        element.bind('$destroy', function() {\n          selectCtrl.removeOption(attr.value);\n        });\n      };\n    }\n  }\n}];\n\nvar styleDirective = valueFn({\n  restrict: 'E',\n  terminal: true\n});\n\n  //try to bind to jquery now so that one can write angular.element().read()\n  //but we will rebind on bootstrap again.\n  bindJQuery();\n\n  publishExternalAPI(angular);\n\n  jqLite(document).ready(function() {\n    angularInit(document, bootstrap);\n  });\n\n})(window, document);\nangular.element(document).find('head').append('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak{display:none;}ng\\\\:form{display:block;}</style>');","// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function (con) {\n  'use strict';\n  var prop, method;\n  var empty = {};\n  var dummy = function() {};\n  var properties = 'memory'.split(',');\n  var methods = ('assert,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,' +\n     'time,timeEnd,trace,warn').split(',');\n  while (prop = properties.pop()) con[prop] = con[prop] || empty;\n  while (method = methods.pop()) con[method] = con[method] || dummy;\n})(window.console = window.console || {});\n","/*!\n * jQuery JavaScript Library v2.0.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-07-03T13:30Z\n */\n(function( window, undefined ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\"use strict\";\nvar\n\t// A central reference to the root jQuery(document)\n\trootjQuery,\n\n\t// The deferred used on DOM ready\n\treadyList,\n\n\t// Support: IE9\n\t// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`\n\tcore_strundefined = typeof undefined,\n\n\t// Use the correct document accordingly with window argument (sandbox)\n\tlocation = window.location,\n\tdocument = window.document,\n\tdocElem = document.documentElement,\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$,\n\n\t// [[Class]] -> type pairs\n\tclass2type = {},\n\n\t// List of deleted data cache ids, so we can reuse them\n\tcore_deletedIds = [],\n\n\tcore_version = \"2.0.3\",\n\n\t// Save a reference to some core methods\n\tcore_concat = core_deletedIds.concat,\n\tcore_push = core_deletedIds.push,\n\tcore_slice = core_deletedIds.slice,\n\tcore_indexOf = core_deletedIds.indexOf,\n\tcore_toString = class2type.toString,\n\tcore_hasOwn = class2type.hasOwnProperty,\n\tcore_trim = core_version.trim,\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\n\t},\n\n\t// Used for matching numbers\n\tcore_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n\n\t// Used for splitting on whitespace\n\tcore_rnotwhite = /\\S+/g,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\t// Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t},\n\n\t// The ready event handler and self cleanup method\n\tcompleted = function() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\t\twindow.removeEventListener( \"load\", completed, false );\n\t\tjQuery.ready();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: core_version,\n\n\tconstructor: jQuery,\n\tinit: function( selector, context, rootjQuery ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn rootjQuery.ready( selector );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t},\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn core_slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num == null ?\n\n\t\t\t// Return a 'clean' array\n\t\t\tthis.toArray() :\n\n\t\t\t// Return just the object\n\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tready: function( fn ) {\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done( fn );\n\n\t\treturn this;\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( core_slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: core_push,\n\tsort: [].sort,\n\tsplice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length === i ) {\n\t\ttarget = this;\n\t\t--i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( core_version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\tnoConflict: function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\n\t\treturn jQuery;\n\t},\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.trigger ) {\n\t\t\tjQuery( document ).trigger(\"ready\").off(\"ready\");\n\t\t}\n\t},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\treturn !isNaN( parseFloat(obj) ) && isFinite( obj );\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn String( obj );\n\t\t}\n\t\t// Support: Safari <= 5.1 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ core_toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Support: Firefox <20\n\t\t// The try/catch suppresses exceptions thrown when attempting to access\n\t\t// the \"constructor\" property of certain host objects, ie. |window.location|\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n\t\ttry {\n\t\t\tif ( obj.constructor &&\n\t\t\t\t\t!core_hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\t// data: string of html\n\t// context (optional): If specified, the fragment will be created in this context, defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tparseHTML: function( data, context, keepScripts ) {\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\tcontext = context || document;\n\n\t\tvar parsed = rsingleTag.exec( data ),\n\t\t\tscripts = !keepScripts && [];\n\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[1] ) ];\n\t\t}\n\n\t\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\t\tif ( scripts ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t},\n\n\tparseJSON: JSON.parse,\n\n\t// Cross-browser xml parsing\n\tparseXML: function( data ) {\n\t\tvar xml, tmp;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Support: IE9\n\t\ttry {\n\t\t\ttmp = new DOMParser();\n\t\t\txml = tmp.parseFromString( data , \"text/xml\" );\n\t\t} catch ( e ) {\n\t\t\txml = undefined;\n\t\t}\n\n\t\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t},\n\n\tnoop: function() {},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\ttrim: function( text ) {\n\t\treturn text == null ? \"\" : core_trim.call( text );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcore_push.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : core_indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar l = second.length,\n\t\t\ti = first.length,\n\t\t\tj = 0;\n\n\t\tif ( typeof l === \"number\" ) {\n\t\t\tfor ( ; j < l; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\t} else {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, inv ) {\n\t\tvar retVal,\n\t\t\tret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length;\n\t\tinv = !!inv;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tretVal = !!callback( elems[ i ], i );\n\t\t\tif ( inv !== retVal ) {\n\t\t\t\tret.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn core_concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = core_slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\taccess: function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlength = elems.length,\n\t\t\tbulk = key == null;\n\n\t\t// Sets many values\n\t\tif ( jQuery.type( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t\t}\n\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\n\t\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\n\t\t\tif ( bulk ) {\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn chainable ?\n\t\t\telems :\n\n\t\t\t// Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call( elems ) :\n\t\t\t\tlength ? fn( elems[0], key ) : emptyGet;\n\t},\n\n\tnow: Date.now,\n\n\t// A method for quickly swapping in/out CSS properties to get correct calculations.\n\t// Note: this method belongs to the css module but it's needed here for the support module.\n\t// If support gets modularized, this method should be moved back to the css module.\n\tswap: function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\n\t\tret = callback.apply( elem, args || [] );\n\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\n\t\treturn ret;\n\t}\n});\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || type !== \"function\" &&\n\t\t( length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\n}\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n/*!\n * Sizzle CSS Selector Engine v1.9.4-pre\n * http://sizzlejs.com/\n *\n * Copyright 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-06-03\n */\n(function( window, undefined ) {\n\nvar i,\n\tsupport,\n\tcachedruns,\n\tExpr,\n\tgetText,\n\tisXML,\n\tcompile,\n\toutermostContext,\n\tsortInput,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + -(new Date()),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\thasDuplicate = false,\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tstrundefined = typeof undefined,\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf if we can't use a native one\n\tindexOf = arr.indexOf || function( elem ) {\n\t\tvar i = 0,\n\t\t\tlen = this.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( this[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\n\t\t\"*(?:([*^$|!~]?=)\" + whitespace + \"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\n\n\t// Prefer arguments quoted,\n\t//   then not containing pseudos/brackets,\n\t//   then attribute selectors/non-parenthetical expressions,\n\t//   then anything else\n\t// These preferences are here to reduce the number of selectors\n\t//   needing tokenize in the PSEUDO preFilter\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes.replace( 3, 8 ) + \")*)|.*)\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trsibling = new RegExp( whitespace + \"*[+~]\" ),\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\t// BMP codepoint\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\n\tif ( documentIsHTML && !seed ) {\n\n\t\t// Shortcuts\n\t\tif ( (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType === 9 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && context.parentNode || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key += \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect xml\n * @param {Element|Object} elem An element or a document\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar doc = node ? node.ownerDocument || node : preferredDoc,\n\t\tparent = doc.defaultView;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\n\t// Support tests\n\tdocumentIsHTML = !isXML( doc );\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent.attachEvent && parent !== parent.top ) {\n\t\tparent.attachEvent( \"onbeforeunload\", function() {\n\t\t\tsetDocument();\n\t\t});\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Check if getElementsByClassName can be trusted\n\tsupport.getElementsByClassName = assert(function( div ) {\n\t\tdiv.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n\n\t\t// Support: Safari<4\n\t\t// Catch class over-caching\n\t\tdiv.firstChild.className = \"i\";\n\t\t// Support: Opera<10\n\t\t// Catch gEBCN failure to find non-leading classes\n\t\treturn div.getElementsByClassName(\"i\").length === 2;\n\t});\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [m] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\t\t\t}\n\t\t} :\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdiv.innerHTML = \"<select><option selected=''></option></select>\";\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\n\t\t\t// Support: Opera 10-12/IE8\n\t\t\t// ^= $= *= and empty values\n\t\t\t// Should not select anything\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type attribute is restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"t\", \"\" );\n\n\t\t\tif ( div.querySelectorAll(\"[t^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = docElem.compareDocumentPosition ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );\n\n\t\tif ( compare ) {\n\t\t\t// Disconnected nodes\n\t\t\tif ( compare & 1 ||\n\t\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t\tif ( a === doc || contains(preferredDoc, a) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === doc || contains(preferredDoc, b) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\t// Maintain original order\n\t\t\t\treturn sortInput ?\n\t\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\t\t}\n\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t}\n\n\t\t// Not directly comparable, sort on existence of method\n\t\treturn a.compareDocumentPosition ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\t} else if ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch(e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [elem] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val === undefined ?\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull :\n\t\tval;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\tfor ( ; (node = elem[i]); i++ ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (see #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[5] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] && match[4] !== undefined ) {\n\t\t\t\tmatch[2] = match[4];\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\n\t\t\t//   not comment, processing instructions, or others\n\t\t\t// Thanks to Diego Perini for the nodeName shortcut\n\t\t\t//   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeName > \"@\" || elem.nodeType === 3 || elem.nodeType === 4 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\t// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n\t\t\t// use getAttribute instead to test this case\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === elem.type );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\nfunction tokenize( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( tokens = [] );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n}\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar data, cache, outerCache,\n\t\t\t\tdirkey = dirruns + \" \" + doneName;\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {\n\t\t\t\t\t\t\tif ( (data = cache[1]) === true || data === cachedruns ) {\n\t\t\t\t\t\t\t\treturn data === true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcache = outerCache[ dir ] = [ dirkey ];\n\t\t\t\t\t\t\tcache[1] = matcher( elem, context, xml ) || cachedruns;\n\t\t\t\t\t\t\tif ( cache[1] === true ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t// A counter to specify which element is currently being matched\n\tvar matcherCachedRuns = 0,\n\t\tbySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, expandContext ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tsetMatched = [],\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\toutermost = expandContext != null,\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t\tcachedruns = matcherCachedRuns;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\tcachedruns = ++matcherCachedRuns;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !group ) {\n\t\t\tgroup = tokenize( selector );\n\t\t}\n\t\ti = group.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( group[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t}\n\treturn cached;\n};\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction select( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tmatch = tokenize( selector );\n\n\tif ( !seed ) {\n\t\t// Try to minimize operations if there is only one group\n\t\tif ( match.length === 1 ) {\n\n\t\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && context.parentNode || context\n\t\t\t\t\t)) ) {\n\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\tcompile( selector, match )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector )\n\t);\n\treturn results;\n}\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome<14\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn (val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\telem[ name ] === true ? name.toLowerCase() : null;\n\t\t}\n\t});\n}\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n})( window );\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar action = tuple[ 0 ],\n\t\t\t\t\t\t\t\tfn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ action + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = core_slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\n\t\t\t\t\tif( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\njQuery.support = (function( support ) {\n\tvar input = document.createElement(\"input\"),\n\t\tfragment = document.createDocumentFragment(),\n\t\tdiv = document.createElement(\"div\"),\n\t\tselect = document.createElement(\"select\"),\n\t\topt = select.appendChild( document.createElement(\"option\") );\n\n\t// Finish early in limited environments\n\tif ( !input.type ) {\n\t\treturn support;\n\t}\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// Check the default checkbox/radio value (\"\" on old WebKit; \"on\" elsewhere)\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Must access the parent to make an option select properly\n\t// Support: IE9, IE10\n\tsupport.optSelected = opt.selected;\n\n\t// Will be defined later\n\tsupport.reliableMarginRight = true;\n\tsupport.boxSizingReliable = true;\n\tsupport.pixelPosition = false;\n\n\t// Make sure checked status is properly cloned\n\t// Support: IE9, IE10\n\tinput.checked = true;\n\tsupport.noCloneChecked = input.cloneNode( true ).checked;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Check if an input maintains its value after becoming a radio\n\t// Support: IE9, IE10\n\tinput = document.createElement(\"input\");\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\tinput.setAttribute( \"checked\", \"t\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tfragment.appendChild( input );\n\n\t// Support: Safari 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: Firefox, Chrome, Safari\n\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\n\tsupport.focusinBubbles = \"onfocusin\" in window;\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\t// Run tests that need a body at doc ready\n\tjQuery(function() {\n\t\tvar container, marginDiv,\n\t\t\t// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).\n\t\t\tdivReset = \"padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box\",\n\t\t\tbody = document.getElementsByTagName(\"body\")[ 0 ];\n\n\t\tif ( !body ) {\n\t\t\t// Return for frameset docs that don't have a body\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer = document.createElement(\"div\");\n\t\tcontainer.style.cssText = \"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\";\n\n\t\t// Check box-sizing and margin behavior.\n\t\tbody.appendChild( container ).appendChild( div );\n\t\tdiv.innerHTML = \"\";\n\t\t// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).\n\t\tdiv.style.cssText = \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%\";\n\n\t\t// Workaround failing boxSizing test due to offsetWidth returning wrong value\n\t\t// with some non-1 values of body zoom, ticket #13543\n\t\tjQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {\n\t\t\tsupport.boxSizing = div.offsetWidth === 4;\n\t\t});\n\n\t\t// Use window.getComputedStyle because jsdom on node.js will break without it.\n\t\tif ( window.getComputedStyle ) {\n\t\t\tsupport.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\n\t\t\tsupport.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\tmarginDiv = div.appendChild( document.createElement(\"div\") );\n\t\t\tmarginDiv.style.cssText = div.style.cssText = divReset;\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\n\t\t\tsupport.reliableMarginRight =\n\t\t\t\t!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\n\t\t}\n\n\t\tbody.removeChild( container );\n\t});\n\n\treturn support;\n})( {} );\n\n/*\n\tImplementation Summary\n\n\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t2. Improve the module's maintainability by reducing the storage\n\t\tpaths to a single mechanism.\n\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n*/\nvar data_user, data_priv,\n\trbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction Data() {\n\t// Support: Android < 4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Math.random();\n}\n\nData.uid = 1;\n\nData.accepts = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType ?\n\t\towner.nodeType === 1 || owner.nodeType === 9 : true;\n};\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android < 4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( core_rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\n\n// These may be used throughout the jQuery core codebase\ndata_user = new Data();\ndata_priv = new Data();\n\n\njQuery.extend({\n\tacceptData: Data.accepts,\n\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar attrs, name,\n\t\t\telem = this[ 0 ],\n\t\t\ti = 0,\n\t\t\tdata = null;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\tattrs = elem.attributes;\n\t\t\t\t\tfor ( ; i < attrs.length; i++ ) {\n\t\t\t\t\t\tname = attrs[ i ].name;\n\n\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? JSON.parse( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tdelay: function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t};\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar nodeHook, boolHook,\n\trclass = /[\\t\\r\\n\\f]/g,\n\trreturn = /\\r/g,\n\trfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t},\n\n\tprop: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t},\n\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = jQuery.trim( cur );\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( core_rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === core_strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map(val, function ( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// attributes.value is undefined in Blackberry 4.7 but\n\t\t\t\t// uses .value. See #6932\n\t\t\t\tvar val = elem.attributes.value;\n\t\t\t\treturn !val || val.specified ? elem.value : elem.text;\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t},\n\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === core_strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( core_rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;\n\n\tjQuery.expr.attrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar fn = jQuery.expr.attrHandle[ name ],\n\t\t\tret = isXML ?\n\t\t\t\tundefined :\n\t\t\t\t/* jshint eqeqeq: false */\n\t\t\t\t// Temporarily disable this handler to check existence\n\t\t\t\t(jQuery.expr.attrHandle[ name ] = undefined) !=\n\t\t\t\t\tgetter( elem, name, isXML ) ?\n\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\n\t\t// Restore handler\n\t\tjQuery.expr.attrHandle[ name ] = fn;\n\n\t\treturn ret;\n\t};\n});\n\n// Support: IE9+\n// Selectedness for an option in an optgroup can be inaccurate\nif ( !jQuery.support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !jQuery.support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t// Support: Webkit\n\t\t\t// \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\nvar rkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n\t\t\t\t\tundefined;\n\t\t\t};\n\t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n\t\t\teventHandle.elem = elem;\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = core_hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = core_hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = core_slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome < 28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = ( src.defaultPrevented ||\n\t\t\tsrc.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Create \"bubbling\" focus and blur events\n// Support: Firefox, Chrome, Safari\nif ( !jQuery.support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler while someone wants focusin/focusout\n\t\tvar attaches = 0,\n\t\t\thandler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tif ( attaches++ === 0 ) {\n\t\t\t\t\tdocument.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tif ( --attaches === 0 ) {\n\t\t\t\t\tdocument.removeEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\nvar isSimple = /^.[^:#\\[\\.,]*$/,\n\trparentsprev = /^(?:parents|prev(?:Until|All))/,\n\trneedsContext = jQuery.expr.match.needsContext,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tret = [],\n\t\t\tself = this,\n\t\t\tlen = self.length;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = ( rneedsContext.test( selectors ) || typeof selectors !== \"string\" ) ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tcur = matched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn core_indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn core_indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\tvar set = typeof selector === \"string\" ?\n\t\t\t\tjQuery( selector, context ) :\n\t\t\t\tjQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\n\t\t\tall = jQuery.merge( this.get(), set );\n\n\t\treturn this.pushStack( jQuery.unique(all) );\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\n\njQuery.extend({\n\tfilter: function( expr, elems, not ) {\n\t\tvar elem = elems[ 0 ];\n\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\n\t\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\t\treturn elem.nodeType === 1;\n\t\t\t}));\n\t},\n\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( isSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( core_indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\nvar rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\tmanipulation_rcheckableType = /^(?:checkbox|radio)$/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE 9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE 9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().append( ( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value ) );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\t// keepData is for internal use only--do not document\n\tremove: function( selector, keepData ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function () {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar\n\t\t\t// Snapshot the DOM in case .domManip sweeps something relevant into its fragment\n\t\t\targs = jQuery.map( this, function( elem ) {\n\t\t\t\treturn [ elem.nextSibling, elem.parentNode ];\n\t\t\t}),\n\t\t\ti = 0;\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\tvar next = args[ i++ ],\n\t\t\t\tparent = args[ i++ ];\n\n\t\t\tif ( parent ) {\n\t\t\t\t// Don't use the snapshot next if it has moved (#13810)\n\t\t\t\tif ( next && next.parentNode !== parent ) {\n\t\t\t\t\tnext = this.nextSibling;\n\t\t\t\t}\n\t\t\t\tjQuery( this ).remove();\n\t\t\t\tparent.insertBefore( elem, next );\n\t\t\t}\n\t\t// Allow new content to include elements from the context set\n\t\t}, true );\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn i ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback, allowIntersection ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = core_concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction || !( l <= 1 || typeof value !== \"string\" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback, allowIntersection );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Hope ajax is available...\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because core_push.apply(_, arraylike) throws\n\t\t\tcore_push.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Support: IE >= 9\n\t\t// Fix Cloning issues\n\t\tif ( !jQuery.support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\ti = 0,\n\t\t\tl = elems.length,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [];\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [\"\", \"\"] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Fixes #12346\n\t\t\t\t\t// Support: Webkit, IE\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, events, type, key, j,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( Data.accepts( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tevents = Object.keys( data.events || {} );\n\t\t\t\t\tif ( events.length ) {\n\t\t\t\t\t\tfor ( j = 0; (type = events[j]) !== undefined; j++ ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t},\n\n\t_evalUrl: function( url ) {\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"script\",\n\t\t\tasync: false,\n\t\t\tglobal: false,\n\t\t\t\"throws\": true\n\t\t});\n\t}\n});\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar l = elems.length,\n\t\ti = 0;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Support: IE >= 9\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && manipulation_rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\nvar curCSS, iframe,\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trmargin = /^margin/,\n\trnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\n\trnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + core_pnum + \")\", \"i\" ),\n\telemdisplay = { BODY: \"block\" },\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: 0,\n\t\tfontWeight: 400\n\t},\n\n\tcssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name.charAt(0).toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction isHidden( elem, el ) {\n\t// isHidden might be called from jQuery#filter function;\n\t// in that case, element will be second argument\n\telem = el || elem;\n\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n}\n\n// NOTE: we've included the \"window\" in window.getComputedStyle\n// because jsdom on node.js will break without it.\nfunction getStyles( elem ) {\n\treturn window.getComputedStyle( elem, null );\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\n\t\t\tif ( !values[ index ] ) {\n\t\t\t\thidden = isHidden( elem );\n\n\t\t\t\tif ( display && display !== \"none\" || !hidden ) {\n\t\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn jQuery.access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that NaN and null values aren't set. See: #7116\n\t\t\tif ( value == null || type === \"number\" && isNaN( value ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !jQuery.support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\ncurCSS = function( elem, name, _computed ) {\n\tvar width, minWidth, maxWidth,\n\t\tcomputed = _computed || getStyles( elem ),\n\n\t\t// Support: IE9\n\t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,\n\t\tstyle = elem.style;\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: Safari 5.1\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\n// Try to determine the default display value of an element\nfunction css_defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe ||\n\t\t\t\tjQuery(\"<iframe frameborder='0' width='0' height='0'/>\")\n\t\t\t\t.css( \"cssText\", \"display:block !important\" )\n\t\t\t).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;\n\t\t\tdoc.write(\"<!doctype html><html><body>\");\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\n// Called ONLY from within css_defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\t\tdisplay = jQuery.css( elem[0], \"display\" );\n\telem.remove();\n\treturn display;\n}\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, \"display\" ) ) ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// These hooks cannot be added until DOM ready because the support test\n// for it is not run until after DOM ready\njQuery(function() {\n\t// Support: Android 2.3\n\tif ( !jQuery.support.reliableMarginRight ) {\n\t\tjQuery.cssHooks.marginRight = {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// Support: Android 2.3\n\t\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// getComputedStyle returns percent when specified for top/left/bottom/right\n\t// rather than make the css module depend on the offset module, we just check for it here\n\tif ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\n\t\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\t\tjQuery.cssHooks[ prop ] = {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\t\tcomputed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n});\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.hidden = function( elem ) {\n\t\t// Support: Opera <= 12.12\n\t\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n\t};\n\n\tjQuery.expr.filters.visible = function( elem ) {\n\t\treturn !jQuery.expr.filters.hidden( elem );\n\t};\n}\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\tvar type = this.type;\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !manipulation_rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ){\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ){\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n//Serialize an array of form elements or a set of\n//key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\n\tajax_nonce = jQuery.now(),\n\n\tajax_rquery = /\\?/,\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t// Keep a copy of the old load method\n\t_load = jQuery.fn.load,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = url.slice( off );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ){\n\tjQuery.fn[ type ] = function( fn ){\n\t\treturn this.on( type, fn );\n\t};\n});\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( core_rnotwhite ) || [\"\"];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\tfireGlobals = s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + ajax_nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ajax_nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( ajax_nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( ajax_rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrSupported = jQuery.ajaxSettings.xhr(),\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\t// Support: IE9\n\t// We need to keep track of outbound xhr and abort them manually\n\t// because IE is not smart enough to do it all by itself\n\txhrId = 0,\n\txhrCallbacks = {};\n\nif ( window.ActiveXObject ) {\n\tjQuery( window ).on( \"unload\", function() {\n\t\tfor( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t\txhrCallbacks = undefined;\n\t});\n}\n\njQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\njQuery.support.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( jQuery.support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i, id,\n\t\t\t\t\txhr = options.xhr();\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file protocol always yields status 0, assume 404\n\t\t\t\t\t\t\t\t\txhr.status || 404,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// #11426: When requesting binary data, IE9 will throw an exception\n\t\t\t\t\t\t\t\t\t// on any attempt to access responseText\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[( id = xhrId++ )] = callback(\"abort\");\n\t\t\t\t// Do send the request\n\t\t\t\t// This may raise an exception which is actually\n\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar fxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t}]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tif ( jQuery.css( elem, \"display\" ) === \"inline\" &&\n\t\t\t\tjQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\tattrs = { height: type },\n\t\ti = 0;\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth? 1 : 0;\n\tfor( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p*Math.PI ) / 2;\n\t}\n};\n\njQuery.timers = [];\njQuery.fx = Tween.prototype.init;\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ttimers = jQuery.timers,\n\t\ti = 0;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tif ( timer() && jQuery.timers.push( timer ) ) {\n\t\tjQuery.fx.start();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.animated = function( elem ) {\n\t\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t}).length;\n\t};\n}\njQuery.fn.offset = function( options ) {\n\tif ( arguments.length ) {\n\t\treturn options === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t}\n\n\tvar docElem, win,\n\t\telem = this[ 0 ],\n\t\tbox = { top: 0, left: 0 },\n\t\tdoc = elem && elem.ownerDocument;\n\n\tif ( !doc ) {\n\t\treturn;\n\t}\n\n\tdocElem = doc.documentElement;\n\n\t// Make sure it's not a disconnected DOM node\n\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\treturn box;\n\t}\n\n\t// If we don't have gBCR, just use 0,0 rather than error\n\t// BlackBerry 5, iOS 3 (original iPhone)\n\tif ( typeof elem.getBoundingClientRect !== core_strundefined ) {\n\t\tbox = elem.getBoundingClientRect();\n\t}\n\twin = getWindow( doc );\n\treturn {\n\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t};\n};\n\njQuery.offset = {\n\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && ( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\n\njQuery.fn.extend({\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// We assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\") === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n\n// Create scrollLeft and scrollTop methods\njQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn jQuery.access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n// Limit scope pollution from any deprecated API\n// (function() {\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n// })();\nif ( typeof module === \"object\" && module && typeof module.exports === \"object\" ) {\n\t// Expose jQuery as module.exports in loaders that implement the Node\n\t// module pattern (including browserify). Do not create the global, since\n\t// the user will be storing it themselves locally, and globals are frowned\n\t// upon in the Node module world.\n\tmodule.exports = jQuery;\n} else {\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( \"jquery\", [], function () { return jQuery; } );\n\t}\n}\n\n// If there is a window object, that at least has a document property,\n// define jQuery and $ identifiers\nif ( typeof window === \"object\" && typeof window.document === \"object\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n})( window );\n","angular.module(\"ui.bootstrap\", [\"ui.bootstrap.tpls\", \"ui.bootstrap.transition\",\"ui.bootstrap.collapse\",\"ui.bootstrap.accordion\",\"ui.bootstrap.alert\",\"ui.bootstrap.buttons\",\"ui.bootstrap.carousel\",\"ui.bootstrap.datepicker\",\"ui.bootstrap.dialog\",\"ui.bootstrap.dropdownToggle\",\"ui.bootstrap.modal\",\"ui.bootstrap.pagination\",\"ui.bootstrap.position\",\"ui.bootstrap.tooltip\",\"ui.bootstrap.popover\",\"ui.bootstrap.progressbar\",\"ui.bootstrap.rating\",\"ui.bootstrap.tabs\",\"ui.bootstrap.timepicker\",\"ui.bootstrap.typeahead\"]);\nangular.module(\"ui.bootstrap.tpls\", [\"template/accordion/accordion-group.html\",\"template/accordion/accordion.html\",\"template/alert/alert.html\",\"template/carousel/carousel.html\",\"template/carousel/slide.html\",\"template/datepicker/datepicker.html\",\"template/dialog/message.html\",\"template/pagination/pager.html\",\"template/pagination/pagination.html\",\"template/tooltip/tooltip-html-unsafe-popup.html\",\"template/tooltip/tooltip-popup.html\",\"template/popover/popover.html\",\"template/progressbar/bar.html\",\"template/progressbar/progress.html\",\"template/rating/rating.html\",\"template/tabs/tab.html\",\"template/tabs/tabset.html\",\"template/timepicker/timepicker.html\",\"template/typeahead/typeahead.html\"]);\nangular.module('ui.bootstrap.transition', [])\n\n/**\n * $transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.\n * @param  {DOMElement} element  The DOMElement that will be animated.\n * @param  {string|object|function} trigger  The thing that will cause the transition to start:\n *   - As a string, it represents the css class to be added to the element.\n *   - As an object, it represents a hash of style attributes to be applied to the element.\n *   - As a function, it represents a function to be called that will cause the transition to occur.\n * @return {Promise}  A promise that is resolved when the transition finishes.\n */\n.factory('$transition', ['$q', '$timeout', '$rootScope', function($q, $timeout, $rootScope) {\n\n  var $transition = function(element, trigger, options) {\n    options = options || {};\n    var deferred = $q.defer();\n    var endEventName = $transition[options.animation ? \"animationEndEventName\" : \"transitionEndEventName\"];\n\n    var transitionEndHandler = function(event) {\n      $rootScope.$apply(function() {\n        element.unbind(endEventName, transitionEndHandler);\n        deferred.resolve(element);\n      });\n    };\n\n    if (endEventName) {\n      element.bind(endEventName, transitionEndHandler);\n    }\n\n    // Wrap in a timeout to allow the browser time to update the DOM before the transition is to occur\n    $timeout(function() {\n      if ( angular.isString(trigger) ) {\n        element.addClass(trigger);\n      } else if ( angular.isFunction(trigger) ) {\n        trigger(element);\n      } else if ( angular.isObject(trigger) ) {\n        element.css(trigger);\n      }\n      //If browser does not support transitions, instantly resolve\n      if ( !endEventName ) {\n        deferred.resolve(element);\n      }\n    });\n\n    // Add our custom cancel function to the promise that is returned\n    // We can call this if we are about to run a new transition, which we know will prevent this transition from ending,\n    // i.e. it will therefore never raise a transitionEnd event for that transition\n    deferred.promise.cancel = function() {\n      if ( endEventName ) {\n        element.unbind(endEventName, transitionEndHandler);\n      }\n      deferred.reject('Transition cancelled');\n    };\n\n    return deferred.promise;\n  };\n\n  // Work out the name of the transitionEnd event\n  var transElement = document.createElement('trans');\n  var transitionEndEventNames = {\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'transition': 'transitionend'\n  };\n  var animationEndEventNames = {\n    'WebkitTransition': 'webkitAnimationEnd',\n    'MozTransition': 'animationend',\n    'OTransition': 'oAnimationEnd',\n    'transition': 'animationend'\n  };\n  function findEndEventName(endEventNames) {\n    for (var name in endEventNames){\n      if (transElement.style[name] !== undefined) {\n        return endEventNames[name];\n      }\n    }\n  }\n  $transition.transitionEndEventName = findEndEventName(transitionEndEventNames);\n  $transition.animationEndEventName = findEndEventName(animationEndEventNames);\n  return $transition;\n}]);\n\nangular.module('ui.bootstrap.collapse',['ui.bootstrap.transition'])\n\n// The collapsible directive indicates a block of html that will expand and collapse\n.directive('collapse', ['$transition', function($transition) {\n  // CSS transitions don't work with height: auto, so we have to manually change the height to a\n  // specific value and then once the animation completes, we can reset the height to auto.\n  // Unfortunately if you do this while the CSS transitions are specified (i.e. in the CSS class\n  // \"collapse\") then you trigger a change to height 0 in between.\n  // The fix is to remove the \"collapse\" CSS class while changing the height back to auto - phew!\n  var fixUpHeight = function(scope, element, height) {\n    // We remove the collapse CSS class to prevent a transition when we change to height: auto\n    element.removeClass('collapse');\n    element.css({ height: height });\n    // It appears that  reading offsetWidth makes the browser realise that we have changed the\n    // height already :-/\n    var x = element[0].offsetWidth;\n    element.addClass('collapse');\n  };\n\n  return {\n    link: function(scope, element, attrs) {\n\n      var isCollapsed;\n      var initialAnimSkip = true;\n      scope.$watch(function (){ return element[0].scrollHeight; }, function (value) {\n        //The listener is called when scollHeight changes\n        //It actually does on 2 scenarios: \n        // 1. Parent is set to display none\n        // 2. angular bindings inside are resolved\n        //When we have a change of scrollHeight we are setting again the correct height if the group is opened\n        if (element[0].scrollHeight !== 0) {\n          if (!isCollapsed) {\n            if (initialAnimSkip) {\n              fixUpHeight(scope, element, element[0].scrollHeight + 'px');\n            } else {\n              fixUpHeight(scope, element, 'auto');\n            }\n          }\n        }\n      });\n      \n      scope.$watch(attrs.collapse, function(value) {\n        if (value) {\n          collapse();\n        } else {\n          expand();\n        }\n      });\n      \n\n      var currentTransition;\n      var doTransition = function(change) {\n        if ( currentTransition ) {\n          currentTransition.cancel();\n        }\n        currentTransition = $transition(element,change);\n        currentTransition.then(\n          function() { currentTransition = undefined; },\n          function() { currentTransition = undefined; }\n        );\n        return currentTransition;\n      };\n\n      var expand = function() {\n        if (initialAnimSkip) {\n          initialAnimSkip = false;\n          if ( !isCollapsed ) {\n            fixUpHeight(scope, element, 'auto');\n          }\n        } else {\n          doTransition({ height : element[0].scrollHeight + 'px' })\n          .then(function() {\n            // This check ensures that we don't accidentally update the height if the user has closed\n            // the group while the animation was still running\n            if ( !isCollapsed ) {\n              fixUpHeight(scope, element, 'auto');\n            }\n          });\n        }\n        isCollapsed = false;\n      };\n      \n      var collapse = function() {\n        isCollapsed = true;\n        if (initialAnimSkip) {\n          initialAnimSkip = false;\n          fixUpHeight(scope, element, 0);\n        } else {\n          fixUpHeight(scope, element, element[0].scrollHeight + 'px');\n          doTransition({'height':'0'});\n        }\n      };\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse'])\n\n.constant('accordionConfig', {\n  closeOthers: true\n})\n\n.controller('AccordionController', ['$scope', '$attrs', 'accordionConfig', function ($scope, $attrs, accordionConfig) {\n  \n  // This array keeps track of the accordion groups\n  this.groups = [];\n\n  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n  this.closeOthers = function(openGroup) {\n    var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n    if ( closeOthers ) {\n      angular.forEach(this.groups, function (group) {\n        if ( group !== openGroup ) {\n          group.isOpen = false;\n        }\n      });\n    }\n  };\n  \n  // This is called from the accordion-group directive to add itself to the accordion\n  this.addGroup = function(groupScope) {\n    var that = this;\n    this.groups.push(groupScope);\n\n    groupScope.$on('$destroy', function (event) {\n      that.removeGroup(groupScope);\n    });\n  };\n\n  // This is called from the accordion-group directive when to remove itself\n  this.removeGroup = function(group) {\n    var index = this.groups.indexOf(group);\n    if ( index !== -1 ) {\n      this.groups.splice(this.groups.indexOf(group), 1);\n    }\n  };\n\n}])\n\n// The accordion directive simply sets up the directive controller\n// and adds an accordion CSS class to itself element.\n.directive('accordion', function () {\n  return {\n    restrict:'EA',\n    controller:'AccordionController',\n    transclude: true,\n    replace: false,\n    templateUrl: 'template/accordion/accordion.html'\n  };\n})\n\n// The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n.directive('accordionGroup', ['$parse', '$transition', '$timeout', function($parse, $transition, $timeout) {\n  return {\n    require:'^accordion',         // We need this directive to be inside an accordion\n    restrict:'EA',\n    transclude:true,              // It transcludes the contents of the directive into the template\n    replace: true,                // The element containing the directive will be replaced with the template\n    templateUrl:'template/accordion/accordion-group.html',\n    scope:{ heading:'@' },        // Create an isolated scope and interpolate the heading attribute onto this scope\n    controller: ['$scope', function($scope) {\n      this.setHeading = function(element) {\n        this.heading = element;\n      };\n    }],\n    link: function(scope, element, attrs, accordionCtrl) {\n      var getIsOpen, setIsOpen;\n\n      accordionCtrl.addGroup(scope);\n\n      scope.isOpen = false;\n      \n      if ( attrs.isOpen ) {\n        getIsOpen = $parse(attrs.isOpen);\n        setIsOpen = getIsOpen.assign;\n\n        scope.$watch(\n          function watchIsOpen() { return getIsOpen(scope.$parent); },\n          function updateOpen(value) { scope.isOpen = value; }\n        );\n        \n        scope.isOpen = getIsOpen ? getIsOpen(scope.$parent) : false;\n      }\n\n      scope.$watch('isOpen', function(value) {\n        if ( value ) {\n          accordionCtrl.closeOthers(scope);\n        }\n        if ( setIsOpen ) {\n          setIsOpen(scope.$parent, value);\n        }\n      });\n    }\n  };\n}])\n\n// Use accordion-heading below an accordion-group to provide a heading containing HTML\n// <accordion-group>\n//   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n// </accordion-group>\n.directive('accordionHeading', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,   // Grab the contents to be used as the heading\n    template: '',       // In effect remove this element!\n    replace: true,\n    require: '^accordionGroup',\n    compile: function(element, attr, transclude) {\n      return function link(scope, element, attr, accordionGroupCtrl) {\n        // Pass the heading to the accordion-group controller\n        // so that it can be transcluded into the right place in the template\n        // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n        accordionGroupCtrl.setHeading(transclude(scope, function() {}));\n      };\n    }\n  };\n})\n\n// Use in the accordion-group template to indicate where you want the heading to be transcluded\n// You must provide the property on the accordion-group controller that will hold the transcluded element\n// <div class=\"accordion-group\">\n//   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n//   ...\n// </div>\n.directive('accordionTransclude', function() {\n  return {\n    require: '^accordionGroup',\n    link: function(scope, element, attr, controller) {\n      scope.$watch(function() { return controller[attr.accordionTransclude]; }, function(heading) {\n        if ( heading ) {\n          element.html('');\n          element.append(heading);\n        }\n      });\n    }\n  };\n});\n\nangular.module(\"ui.bootstrap.alert\", []).directive('alert', function () {\n  return {\n    restrict:'EA',\n    templateUrl:'template/alert/alert.html',\n    transclude:true,\n    replace:true,\n    scope: {\n      type: '=',\n      close: '&'\n    },\n    link: function(scope, iElement, iAttrs, controller) {\n      scope.closeable = \"close\" in iAttrs;\n    }\n  };\n});\n\nangular.module('ui.bootstrap.buttons', [])\n\n  .constant('buttonConfig', {\n    activeClass:'active',\n    toggleEvent:'click'\n  })\n\n  .directive('btnRadio', ['buttonConfig', function (buttonConfig) {\n  var activeClass = buttonConfig.activeClass || 'active';\n  var toggleEvent = buttonConfig.toggleEvent || 'click';\n\n  return {\n\n    require:'ngModel',\n    link:function (scope, element, attrs, ngModelCtrl) {\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n      };\n\n      //ui->model\n      element.bind(toggleEvent, function () {\n        if (!element.hasClass(activeClass)) {\n          scope.$apply(function () {\n            ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n    }\n  };\n}])\n\n  .directive('btnCheckbox', ['buttonConfig', function (buttonConfig) {\n\n  var activeClass = buttonConfig.activeClass || 'active';\n  var toggleEvent = buttonConfig.toggleEvent || 'click';\n\n  return {\n    require:'ngModel',\n    link:function (scope, element, attrs, ngModelCtrl) {\n\n      var trueValue = scope.$eval(attrs.btnCheckboxTrue);\n      var falseValue = scope.$eval(attrs.btnCheckboxFalse);\n\n      trueValue = angular.isDefined(trueValue) ? trueValue : true;\n      falseValue = angular.isDefined(falseValue) ? falseValue : false;\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, trueValue));\n      };\n\n      //ui->model\n      element.bind(toggleEvent, function () {\n        scope.$apply(function () {\n          ngModelCtrl.$setViewValue(element.hasClass(activeClass) ? falseValue : trueValue);\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n}]);\n/**\n* @ngdoc overview\n* @name ui.bootstrap.carousel\n* \n* @description\n* AngularJS version of an image carousel.\n*\n*/\nangular.module('ui.bootstrap.carousel', ['ui.bootstrap.transition'])\n.controller('CarouselController', ['$scope', '$timeout', '$transition', '$q', function ($scope, $timeout, $transition, $q) {\n  var self = this,\n    slides = self.slides = [],\n    currentIndex = -1,\n    currentTimeout, isPlaying;\n  self.currentSlide = null;\n\n  /* direction: \"prev\" or \"next\" */\n  self.select = function(nextSlide, direction) {\n    var nextIndex = slides.indexOf(nextSlide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > currentIndex ? \"next\" : \"prev\";\n    }\n    if (nextSlide && nextSlide !== self.currentSlide) {\n      if ($scope.$currentTransition) {\n        $scope.$currentTransition.cancel();\n        //Timeout so ng-class in template has time to fix classes for finished slide\n        $timeout(goNext);\n      } else {\n        goNext();\n      }\n    }\n    function goNext() {\n      //If we have a slide to transition from and we have a transition type and we're allowed, go\n      if (self.currentSlide && angular.isString(direction) && !$scope.noTransition && nextSlide.$element) { \n        //We shouldn't do class manip in here, but it's the same weird thing bootstrap does. need to fix sometime\n        nextSlide.$element.addClass(direction);\n        nextSlide.$element[0].offsetWidth = nextSlide.$element[0].offsetWidth; //force reflow\n\n        //Set all other slides to stop doing their stuff for the new transition\n        angular.forEach(slides, function(slide) {\n          angular.extend(slide, {direction: '', entering: false, leaving: false, active: false});\n        });\n        angular.extend(nextSlide, {direction: direction, active: true, entering: true});\n        angular.extend(self.currentSlide||{}, {direction: direction, leaving: true});\n\n        $scope.$currentTransition = $transition(nextSlide.$element, {});\n        //We have to create new pointers inside a closure since next & current will change\n        (function(next,current) {\n          $scope.$currentTransition.then(\n            function(){ transitionDone(next, current); },\n            function(){ transitionDone(next, current); }\n          );\n        }(nextSlide, self.currentSlide));\n      } else {\n        transitionDone(nextSlide, self.currentSlide);\n      }\n      self.currentSlide = nextSlide;\n      currentIndex = nextIndex;\n      //every time you change slides, reset the timer\n      restartTimer();\n    }\n    function transitionDone(next, current) {\n      angular.extend(next, {direction: '', active: true, leaving: false, entering: false});\n      angular.extend(current||{}, {direction: '', active: false, leaving: false, entering: false});\n      $scope.$currentTransition = null;\n    }\n  };\n\n  /* Allow outside people to call indexOf on slides array */\n  self.indexOfSlide = function(slide) {\n    return slides.indexOf(slide);\n  };\n\n  $scope.next = function() {\n    var newIndex = (currentIndex + 1) % slides.length;\n    \n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(slides[newIndex], 'next');\n    }\n  };\n\n  $scope.prev = function() {\n    var newIndex = currentIndex - 1 < 0 ? slides.length - 1 : currentIndex - 1;\n    \n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(slides[newIndex], 'prev');\n    }\n  };\n\n  $scope.select = function(slide) {\n    self.select(slide);\n  };\n\n  $scope.isActive = function(slide) {\n     return self.currentSlide === slide;\n  };\n\n  $scope.slides = function() {\n    return slides;\n  };\n\n  $scope.$watch('interval', restartTimer);\n  function restartTimer() {\n    if (currentTimeout) {\n      $timeout.cancel(currentTimeout);\n    }\n    function go() {\n      if (isPlaying) {\n        $scope.next();\n        restartTimer();\n      } else {\n        $scope.pause();\n      }\n    }\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval>=0) {\n      currentTimeout = $timeout(go, interval);\n    }\n  }\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      if (currentTimeout) {\n        $timeout.cancel(currentTimeout);\n      }\n    }\n  };\n\n  self.addSlide = function(slide, element) {\n    slide.$element = element;\n    slides.push(slide);\n    //if this is the first slide or the slide is set to active, select it\n    if(slides.length === 1 || slide.active) {\n      self.select(slides[slides.length-1]);\n      if (slides.length == 1) {\n        $scope.play();\n      }\n    } else {\n      slide.active = false;\n    }\n  };\n\n  self.removeSlide = function(slide) {\n    //get the index of the slide inside the carousel\n    var index = slides.indexOf(slide);\n    slides.splice(index, 1);\n    if (slides.length > 0 && slide.active) {\n      if (index >= slides.length) {\n        self.select(slides[index-1]);\n      } else {\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:carousel\n * @restrict EA\n *\n * @description\n * Carousel is the outer container for a set of image 'slides' to showcase.\n *\n * @param {number=} interval The time, in milliseconds, that it will take the carousel to go to the next slide.\n * @param {boolean=} noTransition Whether to disable transitions on the carousel.\n * @param {boolean=} noPause Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <carousel>\n      <slide>\n        <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>Beautiful!</p>\n        </div>\n      </slide>\n      <slide>\n        <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>D'aww!</p>\n        </div>\n      </slide>\n    </carousel>\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n */\n.directive('carousel', [function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    controller: 'CarouselController',\n    require: 'carousel',\n    templateUrl: 'template/carousel/carousel.html',\n    scope: {\n      interval: '=',\n      noTransition: '=',\n      noPause: '='\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:slide\n * @restrict EA\n *\n * @description\n * Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.\n *\n * @param {boolean=} active Model binding, whether or not this slide is currently active.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n  <carousel>\n    <slide ng-repeat=\"slide in slides\" active=\"slide.active\">\n      <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n      <div class=\"carousel-caption\">\n        <h4>Slide {{$index}}</h4>\n        <p>{{slide.text}}</p>\n      </div>\n    </slide>\n  </carousel>\n  <div class=\"row-fluid\">\n    <div class=\"span6\">\n      <ul>\n        <li ng-repeat=\"slide in slides\">\n          <button class=\"btn btn-mini\" ng-class=\"{'btn-info': !slide.active, 'btn-success': slide.active}\" ng-disabled=\"slide.active\" ng-click=\"slide.active = true\">select</button>\n          {{$index}}: {{slide.text}}\n        </li>\n      </ul>\n      <a class=\"btn\" ng-click=\"addSlide()\">Add Slide</a>\n    </div>\n    <div class=\"span6\">\n      Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n      <br />Enter a negative number to stop the interval.\n    </div>\n  </div>\n</div>\n  </file>\n  <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n  $scope.myInterval = 5000;\n  var slides = $scope.slides = [];\n  $scope.addSlide = function() {\n    var newWidth = 200 + ((slides.length + (25 * slides.length)) % 150);\n    slides.push({\n      image: 'http://placekitten.com/' + newWidth + '/200',\n      text: ['More','Extra','Lots of','Surplus'][slides.length % 4] + ' '\n        ['Cats', 'Kittys', 'Felines', 'Cutes'][slides.length % 4]\n    });\n  };\n  for (var i=0; i<4; i++) $scope.addSlide();\n}\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n*/\n\n.directive('slide', ['$parse', function($parse) {\n  return {\n    require: '^carousel',\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    templateUrl: 'template/carousel/slide.html',\n    scope: {\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      //Set up optional 'active' = binding\n      if (attrs.active) {\n        var getActive = $parse(attrs.active);\n        var setActive = getActive.assign;\n        var lastValue = scope.active = getActive(scope.$parent);\n        scope.$watch(function parentActiveWatch() {\n          var parentActive = getActive(scope.$parent);\n          \n          if (parentActive !== scope.active) {\n            // we are out of sync and need to copy\n            if (parentActive !== lastValue) {\n              // parent changed and it has precedence\n              lastValue = scope.active = parentActive;\n            } else {\n              // if the parent can be assigned then do so\n              setActive(scope.$parent, parentActive = lastValue = scope.active);\n            }\n          }\n          return parentActive;\n        });\n      }\n\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        if (active) {\n          carouselCtrl.select(scope);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.datepicker', [])\n\n.constant('datepickerConfig', {\n  dayFormat: 'dd',\n  monthFormat: 'MMMM',\n  yearFormat: 'yyyy',\n  dayHeaderFormat: 'EEE',\n  dayTitleFormat: 'MMMM yyyy',\n  monthTitleFormat: 'yyyy',\n  showWeeks: true,\n  startingDay: 0,\n  yearRange: 20\n})\n\n.directive( 'datepicker', ['dateFilter', '$parse', 'datepickerConfig', function (dateFilter, $parse, datepickerConfig) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: {\n      model: '=ngModel',\n      dateDisabled: '&'\n    },\n    templateUrl: 'template/datepicker/datepicker.html',\n    link: function(scope, element, attrs) {\n      scope.mode = 'day'; // Initial mode\n\n      // Configuration parameters\n      var selected = new Date(), showWeeks, minDate, maxDate, format = {};\n      format.day   = angular.isDefined(attrs.dayFormat) ? scope.$eval(attrs.dayFormat) : datepickerConfig.dayFormat;\n      format.month = angular.isDefined(attrs.monthFormat) ? scope.$eval(attrs.monthFormat) : datepickerConfig.monthFormat;\n      format.year  = angular.isDefined(attrs.yearFormat) ? scope.$eval(attrs.yearFormat) : datepickerConfig.yearFormat;\n      format.dayHeader  = angular.isDefined(attrs.dayHeaderFormat) ? scope.$eval(attrs.dayHeaderFormat) : datepickerConfig.dayHeaderFormat;\n      format.dayTitle   = angular.isDefined(attrs.dayTitleFormat) ? scope.$eval(attrs.dayTitleFormat) : datepickerConfig.dayTitleFormat;\n      format.monthTitle = angular.isDefined(attrs.monthTitleFormat) ? scope.$eval(attrs.monthTitleFormat) : datepickerConfig.monthTitleFormat;\n      var startingDay   = angular.isDefined(attrs.startingDay) ? scope.$eval(attrs.startingDay) : datepickerConfig.startingDay;\n      var yearRange = angular.isDefined(attrs.yearRange) ? scope.$eval(attrs.yearRange) : datepickerConfig.yearRange;\n\n      if (attrs.showWeeks) {\n        scope.$parent.$watch($parse(attrs.showWeeks), function(value) {\n          showWeeks = !! value;\n          updateShowWeekNumbers();\n        });\n      } else {\n        showWeeks = datepickerConfig.showWeeks;\n        updateShowWeekNumbers();\n      }\n\n      if (attrs.min) {\n        scope.$parent.$watch($parse(attrs.min), function(value) {\n          minDate = new Date(value);\n          refill();\n        });\n      }\n      if (attrs.max) {\n        scope.$parent.$watch($parse(attrs.max), function(value) {\n          maxDate = new Date(value);\n          refill();\n        });\n      }\n\n      function updateCalendar (rows, labels, title) {\n        scope.rows = rows;\n        scope.labels = labels;\n        scope.title = title;\n      }\n\n      // Define whether the week number are visible\n      function updateShowWeekNumbers() {\n        scope.showWeekNumbers = ( scope.mode === 'day' && showWeeks );\n      }\n\n      function compare( date1, date2 ) {\n        if ( scope.mode === 'year') {\n          return date2.getFullYear() - date1.getFullYear();\n        } else if ( scope.mode === 'month' ) {\n          return new Date( date2.getFullYear(), date2.getMonth() ) - new Date( date1.getFullYear(), date1.getMonth() );\n        } else if ( scope.mode === 'day' ) {\n          return (new Date( date2.getFullYear(), date2.getMonth(), date2.getDate() ) - new Date( date1.getFullYear(), date1.getMonth(), date1.getDate() ) );\n        }\n      }\n\n      function isDisabled(date) {\n        return ((minDate && compare(date, minDate) > 0) || (maxDate && compare(date, maxDate) < 0) || (scope.dateDisabled && scope.dateDisabled({ date: date, mode: scope.mode })));\n      }\n\n      // Split array into smaller arrays\n      var split = function(a, size) {\n        var arrays = [];\n        while (a.length > 0) {\n          arrays.push(a.splice(0, size));\n        }\n        return arrays;\n      };\n      var getDaysInMonth = function( year, month ) {\n        return new Date(year, month + 1, 0).getDate();\n      };\n\n      var fill = {\n        day: function() {\n          var days = [], labels = [], lastDate = null;\n\n          function addDays( dt, n, isCurrentMonth ) {\n            for (var i =0; i < n; i ++) {\n              days.push( {date: new Date(dt), isCurrent: isCurrentMonth, isSelected: isSelected(dt), label: dateFilter(dt, format.day), disabled: isDisabled(dt) } );\n              dt.setDate( dt.getDate() + 1 );\n            }\n            lastDate = dt;\n          }\n\n          var d = new Date(selected);\n          d.setDate(1);\n\n          var difference = startingDay - d.getDay();\n          var numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : - difference;\n\n          if ( numDisplayedFromPreviousMonth > 0 ) {\n            d.setDate( - numDisplayedFromPreviousMonth + 1 );\n            addDays(d, numDisplayedFromPreviousMonth, false);\n          }\n          addDays(lastDate || d, getDaysInMonth(selected.getFullYear(), selected.getMonth()), true);\n          addDays(lastDate, (7 - days.length % 7) % 7, false);\n\n          // Day labels\n          for (i = 0; i < 7; i++) {\n            labels.push(  dateFilter(days[i].date, format.dayHeader) );\n          }\n          updateCalendar( split( days, 7 ), labels, dateFilter(selected, format.dayTitle) );\n        },\n        month: function() {\n          var months = [], i = 0, year = selected.getFullYear();\n          while ( i < 12 ) {\n            var dt = new Date(year, i++, 1);\n            months.push( {date: dt, isCurrent: true, isSelected: isSelected(dt), label: dateFilter(dt, format.month), disabled: isDisabled(dt)} );\n          }\n          updateCalendar( split( months, 3 ), [], dateFilter(selected, format.monthTitle) );\n        },\n        year: function() {\n          var years = [], year = parseInt((selected.getFullYear() - 1) / yearRange, 10) * yearRange + 1;\n          for ( var i = 0; i < yearRange; i++ ) {\n            var dt = new Date(year + i, 0, 1);\n            years.push( {date: dt, isCurrent: true, isSelected: isSelected(dt), label: dateFilter(dt, format.year), disabled: isDisabled(dt)} );\n          }\n          var title = years[0].label + ' - ' + years[years.length - 1].label;\n          updateCalendar( split( years, 5 ), [], title );\n        }\n      };\n      var refill = function() {\n        fill[scope.mode]();\n      };\n      var isSelected = function( dt ) {\n        if ( scope.model && scope.model.getFullYear() === dt.getFullYear() ) {\n          if ( scope.mode === 'year' ) {\n            return true;\n          }\n          if ( scope.model.getMonth() === dt.getMonth() ) {\n            return ( scope.mode === 'month' || (scope.mode === 'day' && scope.model.getDate() === dt.getDate()) );\n          }\n        }\n        return false;\n      };\n\n      scope.$watch('model', function ( dt, olddt ) {\n        if ( angular.isDate(dt) ) {\n          selected = angular.copy(dt);\n        }\n\n        if ( ! angular.equals(dt, olddt) ) {\n          refill();\n        }\n      });\n      scope.$watch('mode', function() {\n        updateShowWeekNumbers();\n        refill();\n      });\n\n      scope.select = function( dt ) {\n        selected = new Date(dt);\n\n        if ( scope.mode === 'year' ) {\n          scope.mode = 'month';\n          selected.setFullYear( dt.getFullYear() );\n        } else if ( scope.mode === 'month' ) {\n          scope.mode = 'day';\n          selected.setMonth( dt.getMonth() );\n        } else if ( scope.mode === 'day' ) {\n          scope.model = new Date(selected);\n        }\n      };\n      scope.move = function(step) {\n        if (scope.mode === 'day') {\n          selected.setMonth( selected.getMonth() + step );\n        } else if (scope.mode === 'month') {\n          selected.setFullYear( selected.getFullYear() + step );\n        } else if (scope.mode === 'year') {\n          selected.setFullYear( selected.getFullYear() + step * yearRange );\n        }\n        refill();\n      };\n      scope.toggleMode = function() {\n        scope.mode = ( scope.mode === 'day' ) ? 'month' : ( scope.mode === 'month' ) ? 'year' : 'day';\n      };\n      scope.getWeekNumber = function(row) {\n        if ( scope.mode !== 'day' || ! scope.showWeekNumbers || row.length !== 7 ) {\n          return;\n        }\n\n        var index = ( startingDay > 4 ) ? 11 - startingDay : 4 - startingDay; // Thursday\n        var d = new Date( row[ index ].date );\n        d.setHours(0, 0, 0);\n        return Math.ceil((((d - new Date(d.getFullYear(), 0, 1)) / 86400000) + 1) / 7); // 86400000 = 1000*60*60*24;\n      };\n    }\n  };\n}]);\n// The `$dialogProvider` can be used to configure global defaults for your\n// `$dialog` service.\nvar dialogModule = angular.module('ui.bootstrap.dialog', ['ui.bootstrap.transition']);\n\ndialogModule.controller('MessageBoxController', ['$scope', 'dialog', 'model', function($scope, dialog, model){\n  $scope.title = model.title;\n  $scope.message = model.message;\n  $scope.buttons = model.buttons;\n  $scope.close = function(res){\n    dialog.close(res);\n  };\n}]);\n\ndialogModule.provider(\"$dialog\", function(){\n\n  // The default options for all dialogs.\n  var defaults = {\n    backdrop: true,\n    dialogClass: 'modal',\n    backdropClass: 'modal-backdrop',\n    transitionClass: 'fade',\n    triggerClass: 'in',\n    resolve:{},\n    backdropFade: false,\n    dialogFade:false,\n    keyboard: true, // close with esc key\n    backdropClick: true // only in conjunction with backdrop=true\n    /* other options: template, templateUrl, controller */\n\t};\n\n\tvar globalOptions = {};\n\n  var activeBackdrops = {value : 0};\n\n  // The `options({})` allows global configuration of all dialogs in the application.\n  //\n  //      var app = angular.module('App', ['ui.bootstrap.dialog'], function($dialogProvider){\n  //        // don't close dialog when backdrop is clicked by default\n  //        $dialogProvider.options({backdropClick: false});\n  //      });\n\tthis.options = function(value){\n\t\tglobalOptions = value;\n\t};\n\n  // Returns the actual `$dialog` service that is injected in controllers\n\tthis.$get = [\"$http\", \"$document\", \"$compile\", \"$rootScope\", \"$controller\", \"$templateCache\", \"$q\", \"$transition\", \"$injector\",\n  function ($http, $document, $compile, $rootScope, $controller, $templateCache, $q, $transition, $injector) {\n\n\t\tvar body = $document.find('body');\n\n\t\tfunction createElement(clazz) {\n\t\t\tvar el = angular.element(\"<div>\");\n\t\t\tel.addClass(clazz);\n\t\t\treturn el;\n\t\t}\n\n    // The `Dialog` class represents a modal dialog. The dialog class can be invoked by providing an options object\n    // containing at lest template or templateUrl and controller:\n    //\n    //     var d = new Dialog({templateUrl: 'foo.html', controller: 'BarController'});\n    //\n    // Dialogs can also be created using templateUrl and controller as distinct arguments:\n    //\n    //     var d = new Dialog('path/to/dialog.html', MyDialogController);\n\t\tfunction Dialog(opts) {\n\n      var self = this, options = this.options = angular.extend({}, defaults, globalOptions, opts);\n      this._open = false;\n\n      this.backdropEl = createElement(options.backdropClass);\n      if(options.backdropFade){\n        this.backdropEl.addClass(options.transitionClass);\n        this.backdropEl.removeClass(options.triggerClass);\n      }\n\n      this.modalEl = createElement(options.dialogClass);\n      if(options.dialogFade){\n        this.modalEl.addClass(options.transitionClass);\n        this.modalEl.removeClass(options.triggerClass);\n      }\n\n      this.handledEscapeKey = function(e) {\n        if (e.which === 27) {\n          self.close();\n          e.preventDefault();\n          self.$scope.$apply();\n        }\n      };\n\n      this.handleBackDropClick = function(e) {\n        self.close();\n        e.preventDefault();\n        self.$scope.$apply();\n      };\n\n      this.handleLocationChange = function() {\n        self.close();\n      };\n    }\n\n    // The `isOpen()` method returns wether the dialog is currently visible.\n    Dialog.prototype.isOpen = function(){\n      return this._open;\n    };\n\n    // The `open(templateUrl, controller)` method opens the dialog.\n    // Use the `templateUrl` and `controller` arguments if specifying them at dialog creation time is not desired.\n    Dialog.prototype.open = function(templateUrl, controller){\n      var self = this, options = this.options;\n\n      if(templateUrl){\n        options.templateUrl = templateUrl;\n      }\n      if(controller){\n        options.controller = controller;\n      }\n\n      if(!(options.template || options.templateUrl)) {\n        throw new Error('Dialog.open expected template or templateUrl, neither found. Use options or open method to specify them.');\n      }\n\n      this._loadResolves().then(function(locals) {\n        var $scope = locals.$scope = self.$scope = locals.$scope ? locals.$scope : $rootScope.$new();\n\n        self.modalEl.html(locals.$template);\n\n        if (self.options.controller) {\n          var ctrl = $controller(self.options.controller, locals);\n          self.modalEl.children().data('ngControllerController', ctrl);\n        }\n\n        $compile(self.modalEl)($scope);\n        self._addElementsToDom();\n\n        // trigger tranisitions\n        setTimeout(function(){\n          if(self.options.dialogFade){ self.modalEl.addClass(self.options.triggerClass); }\n          if(self.options.backdropFade){ self.backdropEl.addClass(self.options.triggerClass); }\n        });\n\n        self._bindEvents();\n      });\n\n      this.deferred = $q.defer();\n      return this.deferred.promise;\n    };\n\n    // closes the dialog and resolves the promise returned by the `open` method with the specified result.\n    Dialog.prototype.close = function(result){\n      var self = this;\n      var fadingElements = this._getFadingElements();\n\n      if(fadingElements.length > 0){\n        for (var i = fadingElements.length - 1; i >= 0; i--) {\n          $transition(fadingElements[i], removeTriggerClass).then(onCloseComplete);\n        }\n        return;\n      }\n\n      this._onCloseComplete(result);\n\n      function removeTriggerClass(el){\n        el.removeClass(self.options.triggerClass);\n      }\n\n      function onCloseComplete(){\n        if(self._open){\n          self._onCloseComplete(result);\n        }\n      }\n    };\n\n    Dialog.prototype._getFadingElements = function(){\n      var elements = [];\n      if(this.options.dialogFade){\n        elements.push(this.modalEl);\n      }\n      if(this.options.backdropFade){\n        elements.push(this.backdropEl);\n      }\n\n      return elements;\n    };\n\n    Dialog.prototype._bindEvents = function() {\n      if(this.options.keyboard){ body.bind('keydown', this.handledEscapeKey); }\n      if(this.options.backdrop && this.options.backdropClick){ this.backdropEl.bind('click', this.handleBackDropClick); }\n    };\n\n    Dialog.prototype._unbindEvents = function() {\n      if(this.options.keyboard){ body.unbind('keydown', this.handledEscapeKey); }\n      if(this.options.backdrop && this.options.backdropClick){ this.backdropEl.unbind('click', this.handleBackDropClick); }\n    };\n\n    Dialog.prototype._onCloseComplete = function(result) {\n      this._removeElementsFromDom();\n      this._unbindEvents();\n\n      this.deferred.resolve(result);\n    };\n\n    Dialog.prototype._addElementsToDom = function(){\n      body.append(this.modalEl);\n\n      if(this.options.backdrop) { \n        if (activeBackdrops.value === 0) {\n          body.append(this.backdropEl); \n        }\n        activeBackdrops.value++;\n      }\n\n      this._open = true;\n    };\n\n    Dialog.prototype._removeElementsFromDom = function(){\n      this.modalEl.remove();\n\n      if(this.options.backdrop) { \n        activeBackdrops.value--;\n        if (activeBackdrops.value === 0) {\n          this.backdropEl.remove(); \n        }\n      }\n      this._open = false;\n    };\n\n    // Loads all `options.resolve` members to be used as locals for the controller associated with the dialog.\n    Dialog.prototype._loadResolves = function(){\n      var values = [], keys = [], templatePromise, self = this;\n\n      if (this.options.template) {\n        templatePromise = $q.when(this.options.template);\n      } else if (this.options.templateUrl) {\n        templatePromise = $http.get(this.options.templateUrl, {cache:$templateCache})\n        .then(function(response) { return response.data; });\n      }\n\n      angular.forEach(this.options.resolve || [], function(value, key) {\n        keys.push(key);\n        values.push(angular.isString(value) ? $injector.get(value) : $injector.invoke(value));\n      });\n\n      keys.push('$template');\n      values.push(templatePromise);\n\n      return $q.all(values).then(function(values) {\n        var locals = {};\n        angular.forEach(values, function(value, index) {\n          locals[keys[index]] = value;\n        });\n        locals.dialog = self;\n        return locals;\n      });\n    };\n\n    // The actual `$dialog` service that is injected in controllers.\n    return {\n      // Creates a new `Dialog` with the specified options.\n      dialog: function(opts){\n        return new Dialog(opts);\n      },\n      // creates a new `Dialog` tied to the default message box template and controller.\n      //\n      // Arguments `title` and `message` are rendered in the modal header and body sections respectively.\n      // The `buttons` array holds an object with the following members for each button to include in the\n      // modal footer section:\n      //\n      // * `result`: the result to pass to the `close` method of the dialog when the button is clicked\n      // * `label`: the label of the button\n      // * `cssClass`: additional css class(es) to apply to the button for styling\n      messageBox: function(title, message, buttons){\n        return new Dialog({templateUrl: 'template/dialog/message.html', controller: 'MessageBoxController', resolve:\n          {model: function() {\n            return {\n              title: title,\n              message: message,\n              buttons: buttons\n            };\n          }\n        }});\n      }\n    };\n  }];\n});\n\n/*\n * dropdownToggle - Provides dropdown menu functionality in place of bootstrap js\n * @restrict class or attribute\n * @example:\n   <li class=\"dropdown\">\n     <a class=\"dropdown-toggle\">My Dropdown Menu</a>\n     <ul class=\"dropdown-menu\">\n       <li ng-repeat=\"choice in dropChoices\">\n         <a ng-href=\"{{choice.href}}\">{{choice.text}}</a>\n       </li>\n     </ul>\n   </li>\n */\n\nangular.module('ui.bootstrap.dropdownToggle', []).directive('dropdownToggle', ['$document', '$location', function ($document, $location) {\n  var openElement = null,\n      closeMenu   = angular.noop;\n  return {\n    restrict: 'CA',\n    link: function(scope, element, attrs) {\n      scope.$watch('$location.path', function() { closeMenu(); });\n      element.parent().bind('click', function() { closeMenu(); });\n      element.bind('click', function (event) {\n\n        var elementWasOpen = (element === openElement);\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!!openElement) {\n          closeMenu();\n        }\n\n        if (!elementWasOpen) {\n          element.parent().addClass('open');\n          openElement = element;\n          closeMenu = function (event) {\n            if (event) {\n              event.preventDefault();\n              event.stopPropagation();\n            }\n            $document.unbind('click', closeMenu);\n            element.parent().removeClass('open');\n            closeMenu = angular.noop;\n            openElement = null;\n          };\n          $document.bind('click', closeMenu);\n        }\n      });\n    }\n  };\n}]);\nangular.module('ui.bootstrap.modal', ['ui.bootstrap.dialog'])\n.directive('modal', ['$parse', '$dialog', function($parse, $dialog) {\n  return {\n    restrict: 'EA',\n    terminal: true,\n    link: function(scope, elm, attrs) {\n      var opts = angular.extend({}, scope.$eval(attrs.uiOptions || attrs.bsOptions || attrs.options));\n      var shownExpr = attrs.modal || attrs.show;\n      var setClosed;\n\n      // Create a dialog with the template as the contents of the directive\n      // Add the current scope as the resolve in order to make the directive scope as a dialog controller scope\n      opts = angular.extend(opts, {\n        template: elm.html(), \n        resolve: { $scope: function() { return scope; } }\n      });\n      var dialog = $dialog.dialog(opts);\n\n      elm.remove();\n\n      if (attrs.close) {\n        setClosed = function() {\n          $parse(attrs.close)(scope);\n        };\n      } else {\n        setClosed = function() {         \n          if (angular.isFunction($parse(shownExpr).assign)) {\n            $parse(shownExpr).assign(scope, false); \n          }\n        };\n      }\n\n      scope.$watch(shownExpr, function(isShown, oldShown) {\n        if (isShown) {\n          dialog.open().then(function(){\n            setClosed();\n          });\n        } else {\n          //Make sure it is not opened\n          if (dialog.isOpen()){\n            dialog.close();\n          }\n        }\n      });\n    }\n  };\n}]);\nangular.module('ui.bootstrap.pagination', [])\n\n.controller('PaginationController', ['$scope', function (scope) {\n\n  scope.noPrevious = function() {\n    return scope.currentPage === 1;\n  };\n  scope.noNext = function() {\n    return scope.currentPage === scope.numPages;\n  };\n\n  scope.isActive = function(page) {\n    return scope.currentPage === page;\n  };\n\n  scope.selectPage = function(page) {\n    if ( ! scope.isActive(page) && page > 0 && page <= scope.numPages) {\n      scope.currentPage = page;\n      scope.onSelectPage({ page: page });\n    }\n  };\n}])\n\n.constant('paginationConfig', {\n  boundaryLinks: false,\n  directionLinks: true,\n  firstText: 'First',\n  previousText: 'Previous',\n  nextText: 'Next',\n  lastText: 'Last',\n  rotate: true\n})\n\n.directive('pagination', ['paginationConfig', function(paginationConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      numPages: '=',\n      currentPage: '=',\n      maxSize: '=',\n      onSelectPage: '&'\n    },\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pagination.html',\n    replace: true,\n    link: function(scope, element, attrs) {\n\n      // Setup configuration parameters\n      var boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n      var directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n      var firstText = angular.isDefined(attrs.firstText) ? scope.$parent.$eval(attrs.firstText) : paginationConfig.firstText;\n      var previousText = angular.isDefined(attrs.previousText) ? scope.$parent.$eval(attrs.previousText) : paginationConfig.previousText;\n      var nextText = angular.isDefined(attrs.nextText) ? scope.$parent.$eval(attrs.nextText) : paginationConfig.nextText;\n      var lastText = angular.isDefined(attrs.lastText) ? scope.$parent.$eval(attrs.lastText) : paginationConfig.lastText;\n      var rotate = angular.isDefined(attrs.rotate) ? scope.$eval(attrs.rotate) : paginationConfig.rotate;\n\n      // Create page object used in template\n      function makePage(number, text, isActive, isDisabled) {\n        return {\n          number: number,\n          text: text,\n          active: isActive,\n          disabled: isDisabled\n        };\n      }\n\n      scope.$watch('numPages + currentPage + maxSize', function() {\n        scope.pages = [];\n        \n        // Default page limits\n        var startPage = 1, endPage = scope.numPages;\n        var isMaxSized = ( angular.isDefined(scope.maxSize) && scope.maxSize < scope.numPages );\n\n        // recompute if maxSize\n        if ( isMaxSized ) {\n          if ( rotate ) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(scope.currentPage - Math.floor(scope.maxSize/2), 1);\n            endPage   = startPage + scope.maxSize - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > scope.numPages) {\n              endPage   = scope.numPages;\n              startPage = endPage - scope.maxSize + 1;\n            }\n          } else {\n            // Visible pages are paginated with maxSize\n            startPage = ((Math.ceil(scope.currentPage / scope.maxSize) - 1) * scope.maxSize) + 1;\n\n            // Adjust last page if limit is exceeded\n            endPage = Math.min(startPage + scope.maxSize - 1, scope.numPages);\n          }\n        }\n\n        // Add page number links\n        for (var number = startPage; number <= endPage; number++) {\n          var page = makePage(number, number, scope.isActive(number), false);\n          scope.pages.push(page);\n        }\n\n        // Add links to move between page sets\n        if ( isMaxSized && ! rotate ) {\n          if ( startPage > 1 ) {\n            var previousPageSet = makePage(startPage - 1, '...', false, false);\n            scope.pages.unshift(previousPageSet);\n          }\n\n          if ( endPage < scope.numPages ) {\n            var nextPageSet = makePage(endPage + 1, '...', false, false);\n            scope.pages.push(nextPageSet);\n          }\n        }\n\n        // Add previous & next links\n        if (directionLinks) {\n          var previousPage = makePage(scope.currentPage - 1, previousText, false, scope.noPrevious());\n          scope.pages.unshift(previousPage);\n\n          var nextPage = makePage(scope.currentPage + 1, nextText, false, scope.noNext());\n          scope.pages.push(nextPage);\n        }\n\n        // Add first & last links\n        if (boundaryLinks) {\n          var firstPage = makePage(1, firstText, false, scope.noPrevious());\n          scope.pages.unshift(firstPage);\n\n          var lastPage = makePage(scope.numPages, lastText, false, scope.noNext());\n          scope.pages.push(lastPage);\n        }\n\n        if ( scope.currentPage > scope.numPages ) {\n          scope.selectPage(scope.numPages);\n        }\n      });\n    }\n  };\n}])\n\n.constant('pagerConfig', {\n  previousText: '« Previous',\n  nextText: 'Next »',\n  align: true\n})\n\n.directive('pager', ['pagerConfig', function(config) {\n  return {\n    restrict: 'EA',\n    scope: {\n      numPages: '=',\n      currentPage: '=',\n      onSelectPage: '&'\n    },\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pager.html',\n    replace: true,\n    link: function(scope, element, attrs, paginationCtrl) {\n\n      // Setup configuration parameters\n      var previousText = angular.isDefined(attrs.previousText) ? scope.$parent.$eval(attrs.previousText) : config.previousText;\n      var nextText = angular.isDefined(attrs.nextText) ? scope.$parent.$eval(attrs.nextText) : config.nextText;\n      var align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : config.align;\n\n      // Create page object used in template\n      function makePage(number, text, isDisabled, isPrevious, isNext) {\n        return {\n          number: number,\n          text: text,\n          disabled: isDisabled,\n          previous: ( align && isPrevious ),\n          next: ( align && isNext )\n        };\n      }\n\n      scope.$watch('numPages + currentPage', function() {\n        scope.pages = [];\n\n        // Add previous & next links\n        var previousPage = makePage(scope.currentPage - 1, previousText, scope.noPrevious(), true, false);\n        scope.pages.unshift(previousPage);\n\n        var nextPage = makePage(scope.currentPage + 1, nextText, scope.noNext(), false, true);\n        scope.pages.push(nextPage);\n\n        if ( scope.currentPage > scope.numPages ) {\n          scope.selectPage(scope.numPages);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods that can be use to retrieve position of DOM elements.\n * It is meant to be used where we need to absolute-position DOM elements in\n * relation to other, existing elements (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$position', ['$document', '$window', function ($document, $window) {\n\n    var mouseX, mouseY;\n\n    $document.bind('mousemove', function mouseMoved(event) {\n      mouseX = event.pageX;\n      mouseY = event.pageY;\n    });\n\n    function getStyle(el, cssprop) {\n      if (el.currentStyle) { //IE\n        return el.currentStyle[cssprop];\n      } else if ($window.getComputedStyle) {\n        return $window.getComputedStyle(el)[cssprop];\n      }\n      // finally try and get inline style\n      return el.style[cssprop];\n    }\n\n    /**\n     * Checks if a given element is statically positioned\n     * @param element - raw DOM element\n     */\n    function isStaticPositioned(element) {\n      return (getStyle(element, \"position\") || 'static' ) === 'static';\n    }\n\n    /**\n     * returns the closest, non-statically positioned parentOffset of a given element\n     * @param element\n     */\n    var parentOffsetEl = function (element) {\n      var docDomEl = $document[0];\n      var offsetParent = element.offsetParent || docDomEl;\n      while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent) ) {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docDomEl;\n    };\n\n    return {\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/\n       */\n      position: function (element) {\n        var elBCR = this.offset(element);\n        var offsetParentBCR = { top: 0, left: 0 };\n        var offsetParentEl = parentOffsetEl(element[0]);\n        if (offsetParentEl != $document[0]) {\n          offsetParentBCR = this.offset(angular.element(offsetParentEl));\n          offsetParentBCR.top += offsetParentEl.clientTop;\n          offsetParentBCR.left += offsetParentEl.clientLeft;\n        }\n\n        return {\n          width: element.prop('offsetWidth'),\n          height: element.prop('offsetHeight'),\n          top: elBCR.top - offsetParentBCR.top,\n          left: elBCR.left - offsetParentBCR.left\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/\n       */\n      offset: function (element) {\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: element.prop('offsetWidth'),\n          height: element.prop('offsetHeight'),\n          top: boundingClientRect.top + ($window.pageYOffset || $document[0].body.scrollTop),\n          left: boundingClientRect.left + ($window.pageXOffset || $document[0].body.scrollLeft)\n        };\n      },\n\n      /**\n       * Provides the coordinates of the mouse\n       */\n      mouse: function () {\n        return {x: mouseX, y: mouseY};\n      }\n    };\n  }]);\n\n/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module( 'ui.bootstrap.tooltip', [ 'ui.bootstrap.position' ] )\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider( '$tooltip', function () {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    animation: true,\n    popupDelay: 0\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'focus': 'blur'\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n  \n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function( value ) {\n\t\tangular.extend( globalOptions, value );\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n   */\n  this.setTriggers = function setTriggers ( triggers ) {\n    angular.extend( triggerMap, triggers );\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake-case.\n   */\n  function snake_case(name){\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = [ '$window', '$compile', '$timeout', '$parse', '$document', '$position', '$interpolate', function ( $window, $compile, $timeout, $parse, $document, $position, $interpolate ) {\n    return function $tooltip ( type, prefix, defaultTriggerShow ) {\n      var options = angular.extend( {}, defaultOptions, globalOptions );\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function setTriggers ( trigger ) {\n        var show, hide;\n       \n        show = trigger || options.trigger || defaultTriggerShow;\n        if ( angular.isDefined ( options.trigger ) ) {\n          hide = triggerMap[options.trigger] || show;\n        } else {\n          hide = triggerMap[show] || show;\n        }\n\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case( type );\n      var triggers = setTriggers( undefined );\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template = \n        '<'+ directiveName +'-popup '+\n          'title=\"'+startSym+'tt_title'+endSym+'\" '+\n          'content=\"'+startSym+'tt_content'+endSym+'\" '+\n          'placement=\"'+startSym+'tt_placement'+endSym+'\" '+\n          'animation=\"tt_animation()\" '+\n          'is-open=\"tt_isOpen\"'+\n          '>'+\n        '</'+ directiveName +'-popup>';\n\n      return {\n        restrict: 'EA',\n        scope: true,\n        link: function link ( scope, element, attrs ) {\n          var tooltip = $compile( template )( scope );\n          var transitionTimeout;\n          var popupTimeout;\n          var $body;\n          var appendToBody = angular.isDefined( options.appendToBody ) ? options.appendToBody : false;\n\n          // By default, the tooltip is not open.\n          // TODO add ability to start tooltip opened\n          scope.tt_isOpen = false;\n\n          function toggleTooltipBind () {\n            if ( ! scope.tt_isOpen ) {\n              showTooltipBind();\n            } else {\n              hideTooltipBind();\n            }\n          }\n          \n          // Show the tooltip with delay if specified, otherwise show it immediately\n          function showTooltipBind() {\n            if ( scope.tt_popupDelay ) {\n              popupTimeout = $timeout( show, scope.tt_popupDelay );\n            } else {\n              scope.$apply( show );\n            }\n          }\n\n          function hideTooltipBind () {\n            scope.$apply(function () {\n              hide();\n            });\n          }\n          \n          // Show the tooltip popup element.\n          function show() {\n            var position,\n                ttWidth,\n                ttHeight,\n                ttPosition;\n\n            // Don't show empty tooltips.\n            if ( ! scope.tt_content ) {\n              return;\n            }\n\n            // If there is a pending remove transition, we must cancel it, lest the\n            // tooltip be mysteriously removed.\n            if ( transitionTimeout ) {\n              $timeout.cancel( transitionTimeout );\n            }\n            \n            // Set the initial positioning.\n            tooltip.css({ top: 0, left: 0, display: 'block' });\n            \n            // Now we add it to the DOM because need some info about it. But it's not \n            // visible yet anyway.\n            if ( appendToBody ) {\n                $body = $body || $document.find( 'body' );\n                $body.append( tooltip );\n            } else {\n              element.after( tooltip );\n            }\n\n            // Get the position of the directive element.\n            position = options.appendToBody ? $position.offset( element ) : $position.position( element );\n\n            // Get the height and width of the tooltip so we can center it.\n            ttWidth = tooltip.prop( 'offsetWidth' );\n            ttHeight = tooltip.prop( 'offsetHeight' );\n            \n            // Calculate the tooltip's top and left coordinates to center it with\n            // this directive.\n            switch ( scope.tt_placement ) {\n              case 'mouse':\n                var mousePos = $position.mouse();\n                ttPosition = {\n                  top: mousePos.y,\n                  left: mousePos.x\n                };\n                break;\n              case 'right':\n                ttPosition = {\n                  top: position.top + position.height / 2 - ttHeight / 2,\n                  left: position.left + position.width\n                };\n                break;\n              case 'bottom':\n                ttPosition = {\n                  top: position.top + position.height,\n                  left: position.left + position.width / 2 - ttWidth / 2\n                };\n                break;\n              case 'left':\n                ttPosition = {\n                  top: position.top + position.height / 2 - ttHeight / 2,\n                  left: position.left - ttWidth\n                };\n                break;\n              default:\n                ttPosition = {\n                  top: position.top - ttHeight,\n                  left: position.left + position.width / 2 - ttWidth / 2\n                };\n                break;\n            }\n\n            ttPosition.top += 'px';\n            ttPosition.left += 'px';\n\n            // Now set the calculated positioning.\n            tooltip.css( ttPosition );\n              \n            // And show the tooltip.\n            scope.tt_isOpen = true;\n          }\n          \n          // Hide the tooltip popup element.\n          function hide() {\n            // First things first: we don't show it anymore.\n            scope.tt_isOpen = false;\n\n            //if tooltip is going to be shown after delay, we must cancel this\n            $timeout.cancel( popupTimeout );\n            \n            // And now we remove it from the DOM. However, if we have animation, we \n            // need to wait for it to expire beforehand.\n            // FIXME: this is a placeholder for a port of the transitions library.\n            if ( angular.isDefined( scope.tt_animation ) && scope.tt_animation() ) {\n              transitionTimeout = $timeout( function () { tooltip.remove(); }, 500 );\n            } else {\n              tooltip.remove();\n            }\n          }\n\n          /**\n           * Observe the relevant attributes.\n           */\n          attrs.$observe( type, function ( val ) {\n            scope.tt_content = val;\n          });\n\n          attrs.$observe( prefix+'Title', function ( val ) {\n            scope.tt_title = val;\n          });\n\n          attrs.$observe( prefix+'Placement', function ( val ) {\n            scope.tt_placement = angular.isDefined( val ) ? val : options.placement;\n          });\n\n          attrs.$observe( prefix+'Animation', function ( val ) {\n            scope.tt_animation = angular.isDefined( val ) ? $parse( val ) : function(){ return options.animation; };\n          });\n\n          attrs.$observe( prefix+'PopupDelay', function ( val ) {\n            var delay = parseInt( val, 10 );\n            scope.tt_popupDelay = ! isNaN(delay) ? delay : options.popupDelay;\n          });\n\n          attrs.$observe( prefix+'Trigger', function ( val ) {\n            element.unbind( triggers.show );\n            element.unbind( triggers.hide );\n\n            triggers = setTriggers( val );\n\n            if ( triggers.show === triggers.hide ) {\n              element.bind( triggers.show, toggleTooltipBind );\n            } else {\n              element.bind( triggers.show, showTooltipBind );\n              element.bind( triggers.hide, hideTooltipBind );\n            }\n          });\n\n          attrs.$observe( prefix+'AppendToBody', function ( val ) {\n            appendToBody = angular.isDefined( val ) ? $parse( val )( scope ) : appendToBody;\n          });\n\n          // if a tooltip is attached to <body> we need to remove it on\n          // location change as its parent scope will probably not be destroyed\n          // by the change.\n          if ( appendToBody ) {\n            scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess () {\n            if ( scope.tt_isOpen ) {\n              hide();\n            }\n          });\n          }\n\n          // Make sure tooltip is destroyed and removed.\n          scope.$on('$destroy', function onDestroyTooltip() {\n            if ( scope.tt_isOpen ) {\n              hide();\n            } else {\n              tooltip.remove();\n            }\n          });\n        }\n      };\n    };\n  }];\n})\n\n.directive( 'tooltipPopup', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: { content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-popup.html'\n  };\n})\n\n.directive( 'tooltip', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltip', 'tooltip', 'mouseenter' );\n}])\n\n.directive( 'tooltipHtmlUnsafePopup', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: { content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n  };\n})\n\n.directive( 'tooltipHtmlUnsafe', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltipHtmlUnsafe', 'tooltip', 'mouseenter' );\n}]);\n\n/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html popovers, and selector delegatation.\n */\nangular.module( 'ui.bootstrap.popover', [ 'ui.bootstrap.tooltip' ] )\n.directive( 'popoverPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { title: '@', content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover.html'\n  };\n})\n.directive( 'popover', [ '$compile', '$timeout', '$parse', '$window', '$tooltip', function ( $compile, $timeout, $parse, $window, $tooltip ) {\n  return $tooltip( 'popover', 'popover', 'click' );\n}]);\n\n\nangular.module('ui.bootstrap.progressbar', ['ui.bootstrap.transition'])\n\n.constant('progressConfig', {\n  animate: true,\n  autoType: false,\n  stackedTypes: ['success', 'info', 'warning', 'danger']\n})\n\n.controller('ProgressBarController', ['$scope', '$attrs', 'progressConfig', function($scope, $attrs, progressConfig) {\n\n    // Whether bar transitions should be animated\n    var animate = angular.isDefined($attrs.animate) ? $scope.$eval($attrs.animate) : progressConfig.animate;\n    var autoType = angular.isDefined($attrs.autoType) ? $scope.$eval($attrs.autoType) : progressConfig.autoType;\n    var stackedTypes = angular.isDefined($attrs.stackedTypes) ? $scope.$eval('[' + $attrs.stackedTypes + ']') : progressConfig.stackedTypes;\n\n    // Create bar object\n    this.makeBar = function(newBar, oldBar, index) {\n        var newValue = (angular.isObject(newBar)) ? newBar.value : (newBar || 0);\n        var oldValue =  (angular.isObject(oldBar)) ? oldBar.value : (oldBar || 0);\n        var type = (angular.isObject(newBar) && angular.isDefined(newBar.type)) ? newBar.type : (autoType) ? getStackedType(index || 0) : null;\n\n        return {\n            from: oldValue,\n            to: newValue,\n            type: type,\n            animate: animate\n        };\n    };\n\n    function getStackedType(index) {\n        return stackedTypes[index];\n    }\n\n    this.addBar = function(bar) {\n        $scope.bars.push(bar);\n        $scope.totalPercent += bar.to;\n    };\n\n    this.clearBars = function() {\n        $scope.bars = [];\n        $scope.totalPercent = 0;\n    };\n    this.clearBars();\n}])\n\n.directive('progress', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        controller: 'ProgressBarController',\n        scope: {\n            value: '=percent',\n            onFull: '&',\n            onEmpty: '&'\n        },\n        templateUrl: 'template/progressbar/progress.html',\n        link: function(scope, element, attrs, controller) {\n            scope.$watch('value', function(newValue, oldValue) {\n                controller.clearBars();\n\n                if (angular.isArray(newValue)) {\n                    // Stacked progress bar\n                    for (var i=0, n=newValue.length; i < n; i++) {\n                        controller.addBar(controller.makeBar(newValue[i], oldValue[i], i));\n                    }\n                } else {\n                    // Simple bar\n                    controller.addBar(controller.makeBar(newValue, oldValue));\n                }\n            }, true);\n\n            // Total percent listeners\n            scope.$watch('totalPercent', function(value) {\n              if (value >= 100) {\n                scope.onFull();\n              } else if (value <= 0) {\n                scope.onEmpty();\n              }\n            }, true);\n        }\n    };\n})\n\n.directive('progressbar', ['$transition', function($transition) {\n    return {\n        restrict: 'EA',\n        replace: true,\n        scope: {\n            width: '=',\n            old: '=',\n            type: '=',\n            animate: '='\n        },\n        templateUrl: 'template/progressbar/bar.html',\n        link: function(scope, element) {\n            scope.$watch('width', function(value) {\n                if (scope.animate) {\n                    element.css('width', scope.old + '%');\n                    $transition(element, {width: value + '%'});\n                } else {\n                    element.css('width', value + '%');\n                }\n            });\n        }\n    };\n}]);\nangular.module('ui.bootstrap.rating', [])\n\n.constant('ratingConfig', {\n  max: 5\n})\n\n.directive('rating', ['ratingConfig', '$parse', function(ratingConfig, $parse) {\n  return {\n    restrict: 'EA',\n    scope: {\n      value: '='\n    },\n    templateUrl: 'template/rating/rating.html',\n    replace: true,\n    link: function(scope, element, attrs) {\n\n      var maxRange = angular.isDefined(attrs.max) ? scope.$eval(attrs.max) : ratingConfig.max;\n\n      scope.range = [];\n      for (var i = 1; i <= maxRange; i++) {\n          scope.range.push(i);\n      }\n\n      scope.rate = function(value) {\n          if ( ! scope.readonly ) {\n              scope.value = value;\n          }\n      };\n\n      scope.enter = function(value) {\n          if ( ! scope.readonly ) {\n              scope.val = value;\n          }\n      };\n\n      scope.reset = function() {\n          scope.val = angular.copy(scope.value);\n      };\n      scope.reset();\n\n      scope.$watch('value', function(value) {\n          scope.val = value;\n      });\n\n      scope.readonly = false;\n      if (attrs.readonly) {\n          scope.$parent.$watch($parse(attrs.readonly), function(value) {\n              scope.readonly = !!value;\n          });\n      }\n    }\n  };\n}]);\n\n/**\n * @ngdoc overview\n * @name ui.bootstrap.tabs\n *\n * @description\n * AngularJS version of the tabs directive.\n */\n\nangular.module('ui.bootstrap.tabs', [])\n\n.directive('tabs', function() {\n  return function() {\n    throw new Error(\"The `tabs` directive is deprecated, please migrate to `tabset`. Instructions can be found at http://github.com/angular-ui/bootstrap/tree/master/CHANGELOG.md\");\n  };\n})\n\n.controller('TabsetController', ['$scope', '$element', \nfunction TabsetCtrl($scope, $element) {\n  var ctrl = this,\n    tabs = ctrl.tabs = $scope.tabs = [];\n\n  ctrl.select = function(tab) {\n    angular.forEach(tabs, function(tab) {\n      tab.active = false;\n    });  \n    tab.active = true;\n  };\n\n  ctrl.addTab = function addTab(tab) {\n    tabs.push(tab);\n    if (tabs.length == 1) {\n      ctrl.select(tab);\n    }\n  };\n\n  ctrl.removeTab = function removeTab(tab) { \n    var index = tabs.indexOf(tab);\n    //Select a new tab if the tab to be removed is selected\n    if (tab.active && tabs.length > 1) {\n      //If this is the last tab, select the previous tab. else, the next tab.\n      var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n      ctrl.select(tabs[newActiveIndex]);\n    }\n    tabs.splice(index, 1);\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabset\n * @restrict EA\n *\n * @description\n * Tabset is the outer container for the tabs directive\n *\n * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab heading=\"Vertical Tab 1\"><b>First</b> Content!</tab>\n      <tab heading=\"Vertical Tab 2\"><i>Second</i> Content!</tab>\n    </tabset>\n    <hr />\n    <tabset vertical=\"true\">\n      <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n      <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tabset', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    scope: {},\n    controller: 'TabsetController',\n    templateUrl: 'template/tabs/tabset.html',\n    link: function(scope, element, attrs) {\n      scope.vertical = angular.isDefined(attrs.vertical) ? scope.$eval(attrs.vertical) : false;\n      scope.type = angular.isDefined(attrs.type) ? scope.$parent.$eval(attrs.type) : 'tabs';\n    }\n  };\n})\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tab\n * @restrict EA\n *\n * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.\n * @param {string=} select An expression to evaluate when the tab is selected.\n * @param {boolean=} active A binding, telling whether or not this tab is selected.\n * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n *\n * @description \n * Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <div ng-controller=\"TabsDemoCtrl\">\n      <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n        Select item 1, using active binding\n      </button>\n      <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n        Enable/disable item 2, using disabled binding\n      </button>\n      <br />\n      <tabset>\n        <tab heading=\"Tab 1\">First Tab</tab>\n        <tab select=\"alertMe()\">\n          <tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n          Second Tab, with alert callback and html heading!\n        </tab>\n        <tab ng-repeat=\"item in items\"\n          heading=\"{{item.title}}\"\n          disabled=\"item.disabled\"\n          active=\"item.active\">\n          {{item.content}}\n        </tab>\n      </tabset>\n    </div>\n  </file>\n  <file name=\"script.js\">\n    function TabsDemoCtrl($scope) {\n      $scope.items = [\n        { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n        { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n      ];\n\n      $scope.alertMe = function() {\n        setTimeout(function() {\n          alert(\"You've selected the alert tab!\");\n        });\n      };\n    };\n  </file>\n</example>\n */\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabHeading\n * @restrict EA\n *\n * @description\n * Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab>\n        <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n        And some content, too!\n      </tab>\n      <tab>\n        <tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n        That's right.\n      </tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tab', ['$parse', '$http', '$templateCache', '$compile',\nfunction($parse, $http, $templateCache, $compile) {\n  return {\n    require: '^tabset',\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/tabs/tab.html',\n    transclude: true,\n    scope: {\n      heading: '@',\n      onSelect: '&select' //This callback is called in contentHeadingTransclude\n                          //once it inserts the tab's content into the dom\n    },\n    controller: function() {\n      //Empty controller so other directives can require being 'under' a tab\n    },\n    compile: function(elm, attrs, transclude) {\n      return function postLink(scope, elm, attrs, tabsetCtrl) {\n        var getActive, setActive;\n        scope.active = false; // default value\n        if (attrs.active) {\n          getActive = $parse(attrs.active);\n          setActive = getActive.assign;\n          scope.$parent.$watch(getActive, function updateActive(value) {\n            if ( !!value && scope.disabled ) {\n              setActive(scope.$parent, false); // Prevent active assignment\n            } else {\n              scope.active = !!value;\n            }\n          });\n        } else {\n          setActive = getActive = angular.noop;\n        }\n\n        scope.$watch('active', function(active) {\n          setActive(scope.$parent, active);\n          if (active) {\n            tabsetCtrl.select(scope);\n            scope.onSelect();\n          }\n        });\n\n        scope.disabled = false;\n        if ( attrs.disabled ) {\n          scope.$parent.$watch($parse(attrs.disabled), function(value) {\n            scope.disabled = !! value;\n          });\n        }\n\n        scope.select = function() {\n          if ( ! scope.disabled ) {\n            scope.active = true;\n          }\n        };\n\n        tabsetCtrl.addTab(scope);\n        scope.$on('$destroy', function() {\n          tabsetCtrl.removeTab(scope);\n        });\n        //If the tabset sets this tab to active, set the parent scope's active\n        //binding too.  We do this so the watch for the parent's initial active\n        //value won't overwrite what is initially set by the tabset\n        if (scope.active) {\n          setActive(scope.$parent, true);\n        } \n\n        //Transclude the collection of sibling elements. Use forEach to find\n        //the heading if it exists. We don't use a directive for tab-heading\n        //because it is problematic. Discussion @ http://git.io/MSNPwQ\n        transclude(scope.$parent, function(clone) {\n          //Look at every element in the clone collection. If it's tab-heading,\n          //mark it as that.  If it's not tab-heading, mark it as tab contents\n          var contents = [], heading;\n          angular.forEach(clone, function(el) {\n            //See if it's a tab-heading attr or element directive\n            //First make sure it's a normal element, one that has a tagName\n            if (el.tagName &&\n                (el.hasAttribute(\"tab-heading\") || \n                 el.hasAttribute(\"data-tab-heading\") ||\n                 el.tagName.toLowerCase() == \"tab-heading\" ||\n                 el.tagName.toLowerCase() == \"data-tab-heading\"\n                )) {\n              heading = el;\n            } else {\n              contents.push(el);\n            }\n          });\n          //Share what we found on the scope, so our tabHeadingTransclude and\n          //tabContentTransclude directives can find out what the heading and\n          //contents are.\n          if (heading) { \n            scope.headingElement = angular.element(heading);\n          }\n          scope.contentElement = angular.element(contents);\n        });\n      };\n    }\n  };\n}])\n\n.directive('tabHeadingTransclude', [function() {\n  return {\n    restrict: 'A',\n    require: '^tab', \n    link: function(scope, elm, attrs, tabCtrl) {\n      scope.$watch('headingElement', function updateHeadingElement(heading) {\n        if (heading) {\n          elm.html('');\n          elm.append(heading);\n        }\n      });\n    }\n  };\n}])\n\n.directive('tabContentTransclude', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    require: '^tabset',\n    link: function(scope, elm, attrs, tabsetCtrl) {\n      scope.$watch($parse(attrs.tabContentTransclude), function(tab) {\n        elm.html('');\n        if (tab) {\n          elm.append(tab.contentElement);\n        }\n      });\n    }\n  };\n}])\n\n;\n\n\nangular.module('ui.bootstrap.timepicker', [])\n\n.filter('pad', function() {\n  return function(input) {\n    if ( angular.isDefined(input) && input.toString().length < 2 ) {\n      input = '0' + input;\n    }\n    return input;\n  };\n})\n\n.constant('timepickerConfig', {\n  hourStep: 1,\n  minuteStep: 1,\n  showMeridian: true,\n  meridians: ['AM', 'PM'],\n  readonlyInput: false,\n  mousewheel: true\n})\n\n.directive('timepicker', ['padFilter', '$parse', 'timepickerConfig', function (padFilter, $parse, timepickerConfig) {\n  return {\n    restrict: 'EA',\n    require:'ngModel',\n    replace: true,\n    templateUrl: 'template/timepicker/timepicker.html',\n    scope: {\n        model: '=ngModel'\n    },\n    link: function(scope, element, attrs, ngModelCtrl) {\n      var selected = new Date(), meridians = timepickerConfig.meridians;\n\n      var hourStep = timepickerConfig.hourStep;\n      if (attrs.hourStep) {\n        scope.$parent.$watch($parse(attrs.hourStep), function(value) {\n          hourStep = parseInt(value, 10);\n        });\n      }\n\n      var minuteStep = timepickerConfig.minuteStep;\n      if (attrs.minuteStep) {\n        scope.$parent.$watch($parse(attrs.minuteStep), function(value) {\n          minuteStep = parseInt(value, 10);\n        });\n      }\n\n      // 12H / 24H mode\n      scope.showMeridian = timepickerConfig.showMeridian;\n      if (attrs.showMeridian) {\n        scope.$parent.$watch($parse(attrs.showMeridian), function(value) {\n          scope.showMeridian = !! value;\n\n          if ( ! scope.model ) {\n            // Reset\n            var dt = new Date( selected );\n            var hours = getScopeHours();\n            if (angular.isDefined( hours )) {\n              dt.setHours( hours );\n            }\n            scope.model = new Date( dt );\n          } else {\n            refreshTemplate();\n          }\n        });\n      }\n\n      // Get scope.hours in 24H mode if valid\n      function getScopeHours ( ) {\n        var hours = parseInt( scope.hours, 10 );\n        var valid = ( scope.showMeridian ) ? (hours > 0 && hours < 13) : (hours >= 0 && hours < 24);\n        if ( !valid ) {\n          return;\n        }\n\n        if ( scope.showMeridian ) {\n          if ( hours === 12 ) {\n            hours = 0;\n          }\n          if ( scope.meridian === meridians[1] ) {\n            hours = hours + 12;\n          }\n        }\n        return hours;\n      }\n\n      // Input elements\n      var inputs = element.find('input');\n      var hoursInputEl = inputs.eq(0), minutesInputEl = inputs.eq(1);\n\n      // Respond on mousewheel spin\n      var mousewheel = (angular.isDefined(attrs.mousewheel)) ? scope.$eval(attrs.mousewheel) : timepickerConfig.mousewheel;\n      if ( mousewheel ) {\n\n        var isScrollingUp = function(e) {\n          if (e.originalEvent) {\n            e = e.originalEvent;\n          }\n          return (e.detail || e.wheelDelta > 0);\n        };\n\n        hoursInputEl.bind('mousewheel', function(e) {\n          scope.$apply( (isScrollingUp(e)) ? scope.incrementHours() : scope.decrementHours() );\n          e.preventDefault();\n        });\n\n        minutesInputEl.bind('mousewheel', function(e) {\n          scope.$apply( (isScrollingUp(e)) ? scope.incrementMinutes() : scope.decrementMinutes() );\n          e.preventDefault();\n        });\n      }\n\n      var keyboardChange = false;\n      scope.readonlyInput = (angular.isDefined(attrs.readonlyInput)) ? scope.$eval(attrs.readonlyInput) : timepickerConfig.readonlyInput;\n      if ( ! scope.readonlyInput ) {\n        scope.updateHours = function() {\n          var hours = getScopeHours();\n\n          if ( angular.isDefined(hours) ) {\n              keyboardChange = 'h';\n              if ( scope.model === null ) {\n                 scope.model = new Date( selected );\n              }\n              scope.model.setHours( hours );\n          } else {\n              scope.model = null;\n              scope.validHours = false;\n          }\n        };\n\n        hoursInputEl.bind('blur', function(e) {\n          if ( scope.validHours && scope.hours < 10) {\n            scope.$apply( function() {\n              scope.hours = padFilter( scope.hours );\n            });\n          }\n        });\n\n        scope.updateMinutes = function() {\n          var minutes = parseInt(scope.minutes, 10);\n          if ( minutes >= 0 && minutes < 60 ) {\n            keyboardChange = 'm';\n            if ( scope.model === null ) {\n              scope.model = new Date( selected );\n            }\n            scope.model.setMinutes( minutes );\n          } else {\n            scope.model = null;\n            scope.validMinutes = false;\n          }\n        };\n\n        minutesInputEl.bind('blur', function(e) {\n          if ( scope.validMinutes && scope.minutes < 10 ) {\n            scope.$apply( function() {\n              scope.minutes = padFilter( scope.minutes );\n            });\n          }\n        });\n      } else {\n        scope.updateHours = angular.noop;\n        scope.updateMinutes = angular.noop;\n      }\n\n      scope.$watch( function getModelTimestamp() {\n        return +scope.model;\n      }, function( timestamp ) {\n        if ( !isNaN( timestamp ) && timestamp > 0 ) {\n          selected = new Date( timestamp );\n          refreshTemplate();\n        }\n      });\n\n      function refreshTemplate() {\n        var hours = selected.getHours();\n        if ( scope.showMeridian ) {\n          // Convert 24 to 12 hour system\n          hours = ( hours === 0 || hours === 12 ) ? 12 : hours % 12;\n        }\n        scope.hours =  ( keyboardChange === 'h' ) ? hours : padFilter(hours);\n        scope.validHours = true;\n\n        var minutes = selected.getMinutes();\n        scope.minutes = ( keyboardChange === 'm' ) ? minutes : padFilter(minutes);\n        scope.validMinutes = true;\n\n        scope.meridian = ( scope.showMeridian ) ? (( selected.getHours() < 12 ) ? meridians[0] : meridians[1]) : '';\n\n        keyboardChange = false;\n      }\n\n      function addMinutes( minutes ) {\n        var dt = new Date( selected.getTime() + minutes * 60000 );\n        if ( dt.getDate() !== selected.getDate()) {\n          dt.setDate( dt.getDate() - 1 );\n        }\n        selected.setTime( dt.getTime() );\n        scope.model = new Date( selected );\n      }\n\n      scope.incrementHours = function() {\n        addMinutes( hourStep * 60 );\n      };\n      scope.decrementHours = function() {\n        addMinutes( - hourStep * 60 );\n      };\n      scope.incrementMinutes = function() {\n        addMinutes( minuteStep );\n      };\n      scope.decrementMinutes = function() {\n        addMinutes( - minuteStep );\n      };\n      scope.toggleMeridian = function() {\n        addMinutes( 12 * 60 * (( selected.getHours() < 12 ) ? 1 : -1) );\n      };\n    }\n  };\n}]);\nangular.module('ui.bootstrap.typeahead', ['ui.bootstrap.position'])\n\n/**\n * A helper service that can parse typeahead's syntax (string provided by users)\n * Extracted to a separate service for ease of unit testing\n */\n  .factory('typeaheadParser', ['$parse', function ($parse) {\n\n  //                      00000111000000000000022200000000000000003333333333333330000000000044000\n  var TYPEAHEAD_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+(.*)$/;\n\n  return {\n    parse:function (input) {\n\n      var match = input.match(TYPEAHEAD_REGEXP), modelMapper, viewMapper, source;\n      if (!match) {\n        throw new Error(\n          \"Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_'\" +\n            \" but got '\" + input + \"'.\");\n      }\n\n      return {\n        itemName:match[3],\n        source:$parse(match[4]),\n        viewMapper:$parse(match[2] || match[1]),\n        modelMapper:$parse(match[1])\n      };\n    }\n  };\n}])\n\n  .directive('typeahead', ['$compile', '$parse', '$q', '$timeout', '$document', '$position', 'typeaheadParser', function ($compile, $parse, $q, $timeout, $document, $position, typeaheadParser) {\n\n  var HOT_KEYS = [9, 13, 27, 38, 40];\n\n  return {\n    require:'ngModel',\n    link:function (originalScope, element, attrs, modelCtrl) {\n\n      var selected;\n\n      //minimal no of characters that needs to be entered before typeahead kicks-in\n      var minSearch = originalScope.$eval(attrs.typeaheadMinLength) || 1;\n\n      //minimal wait time after last character typed before typehead kicks-in\n      var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n      //expressions used by typeahead\n      var parserResult = typeaheadParser.parse(attrs.typeahead);\n\n      //should it restrict model values to the ones selected from the popup only?\n      var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n      var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n      var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n      //pop-up element used to display matches\n      var popUpEl = angular.element('<typeahead-popup></typeahead-popup>');\n      popUpEl.attr({\n        matches: 'matches',\n        active: 'activeIdx',\n        select: 'select(activeIdx)',\n        query: 'query',\n        position: 'position'\n      });\n\n      //create a child scope for the typeahead directive so we are not polluting original scope\n      //with typeahead-specific data (matches, query etc.)\n      var scope = originalScope.$new();\n      originalScope.$on('$destroy', function(){\n        scope.$destroy();\n      });\n\n      var resetMatches = function() {\n        scope.matches = [];\n        scope.activeIdx = -1;\n      };\n\n      var getMatchesAsync = function(inputValue) {\n\n        var locals = {$viewValue: inputValue};\n        isLoadingSetter(originalScope, true);\n        $q.when(parserResult.source(scope, locals)).then(function(matches) {\n\n          //it might happen that several async queries were in progress if a user were typing fast\n          //but we are interested only in responses that correspond to the current view value\n          if (inputValue === modelCtrl.$viewValue) {\n            if (matches.length > 0) {\n\n              scope.activeIdx = 0;\n              scope.matches.length = 0;\n\n              //transform labels\n              for(var i=0; i<matches.length; i++) {\n                locals[parserResult.itemName] = matches[i];\n                scope.matches.push({\n                  label: parserResult.viewMapper(scope, locals),\n                  model: matches[i]\n                });\n              }\n\n              scope.query = inputValue;\n              //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n              //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n              //due to other elements being rendered\n              scope.position = $position.position(element);\n              scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n            } else {\n              resetMatches();\n            }\n            isLoadingSetter(originalScope, false);\n          }\n        }, function(){\n          resetMatches();\n          isLoadingSetter(originalScope, false);\n        });\n      };\n\n      resetMatches();\n\n      //we need to propagate user's query so we can higlight matches\n      scope.query = undefined;\n\n      //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n      //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n      modelCtrl.$parsers.push(function (inputValue) {\n\n        var timeoutId;\n\n        resetMatches();\n        if (selected) {\n          return inputValue;\n        } else {\n          if (inputValue && inputValue.length >= minSearch) {\n            if (waitTime > 0) {\n              if (timeoutId) {\n                $timeout.cancel(timeoutId);//cancel previous timeout\n              }\n              timeoutId = $timeout(function () {\n                getMatchesAsync(inputValue);\n              }, waitTime);\n            } else {\n              getMatchesAsync(inputValue);\n            }\n          }\n        }\n\n        return isEditable ? inputValue : undefined;\n      });\n\n      modelCtrl.$render = function () {\n        var locals = {};\n        locals[parserResult.itemName] = selected || modelCtrl.$viewValue;\n        element.val(parserResult.viewMapper(scope, locals) || modelCtrl.$viewValue);\n        selected = undefined;\n      };\n\n      scope.select = function (activeIdx) {\n        //called from within the $digest() cycle\n        var locals = {};\n        var model, item;\n        locals[parserResult.itemName] = item = selected = scope.matches[activeIdx].model;\n\n        model = parserResult.modelMapper(scope, locals);\n        modelCtrl.$setViewValue(model);\n        modelCtrl.$render();\n        onSelectCallback(scope, {\n          $item: item,\n          $model: model,\n          $label: parserResult.viewMapper(scope, locals)\n        });\n\n        element[0].focus();\n      };\n\n      //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n      element.bind('keydown', function (evt) {\n\n        //typeahead is open and an \"interesting\" key was pressed\n        if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n          return;\n        }\n\n        evt.preventDefault();\n\n        if (evt.which === 40) {\n          scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n          scope.$digest();\n\n        } else if (evt.which === 38) {\n          scope.activeIdx = (scope.activeIdx ? scope.activeIdx : scope.matches.length) - 1;\n          scope.$digest();\n\n        } else if (evt.which === 13 || evt.which === 9) {\n          scope.$apply(function () {\n            scope.select(scope.activeIdx);\n          });\n\n        } else if (evt.which === 27) {\n          evt.stopPropagation();\n\n          resetMatches();\n          scope.$digest();\n        }\n      });\n\n      $document.bind('click', function(){\n        resetMatches();\n        scope.$digest();\n      });\n\n      element.after($compile(popUpEl)(scope));\n    }\n  };\n\n}])\n\n  .directive('typeaheadPopup', function () {\n    return {\n      restrict:'E',\n      scope:{\n        matches:'=',\n        query:'=',\n        active:'=',\n        position:'=',\n        select:'&'\n      },\n      replace:true,\n      templateUrl:'template/typeahead/typeahead.html',\n      link:function (scope, element, attrs) {\n\n        scope.isOpen = function () {\n          return scope.matches.length > 0;\n        };\n\n        scope.isActive = function (matchIdx) {\n          return scope.active == matchIdx;\n        };\n\n        scope.selectActive = function (matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function (activeIdx) {\n          scope.select({activeIdx:activeIdx});\n        };\n      }\n    };\n  })\n\n  .filter('typeaheadHighlight', function() {\n\n    function escapeRegexp(queryToEscape) {\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n    }\n\n    return function(matchItem, query) {\n      return query ? matchItem.replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : query;\n    };\n  });\n\nangular.module(\"template/accordion/accordion-group.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion-group.html\",\n    \"<div class=\\\"accordion-group\\\">\\n\" +\n    \"  <div class=\\\"accordion-heading\\\" ><a class=\\\"accordion-toggle\\\" ng-click=\\\"isOpen = !isOpen\\\" accordion-transclude=\\\"heading\\\">{{heading}}</a></div>\\n\" +\n    \"  <div class=\\\"accordion-body\\\" collapse=\\\"!isOpen\\\">\\n\" +\n    \"    <div class=\\\"accordion-inner\\\" ng-transclude></div>  </div>\\n\" +\n    \"</div>\");\n}]);\n\nangular.module(\"template/accordion/accordion.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion.html\",\n    \"<div class=\\\"accordion\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/alert/alert.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/alert/alert.html\",\n    \"<div class='alert' ng-class='type && \\\"alert-\\\" + type'>\\n\" +\n    \"    <button ng-show='closeable' type='button' class='close' ng-click='close()'>&times;</button>\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/carousel.html\",\n    \"<div ng-mouseenter=\\\"pause()\\\" ng-mouseleave=\\\"play()\\\" class=\\\"carousel\\\">\\n\" +\n    \"    <ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides().length > 1\\\">\\n\" +\n    \"        <li ng-repeat=\\\"slide in slides()\\\" ng-class=\\\"{active: isActive(slide)}\\\" ng-click=\\\"select(slide)\\\"></li>\\n\" +\n    \"    </ol>\\n\" +\n    \"    <div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"    <a ng-click=\\\"prev()\\\" class=\\\"carousel-control left\\\" ng-show=\\\"slides().length > 1\\\">&lsaquo;</a>\\n\" +\n    \"    <a ng-click=\\\"next()\\\" class=\\\"carousel-control right\\\" ng-show=\\\"slides().length > 1\\\">&rsaquo;</a>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/slide.html\",\n    \"<div ng-class=\\\"{\\n\" +\n    \"    'active': leaving || (active && !entering),\\n\" +\n    \"    'prev': (next || active) && direction=='prev',\\n\" +\n    \"    'next': (next || active) && direction=='next',\\n\" +\n    \"    'right': direction=='prev',\\n\" +\n    \"    'left': direction=='next'\\n\" +\n    \"  }\\\" class=\\\"item\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/datepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/datepicker.html\",\n    \"<table class=\\\"well well-large\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr class=\\\"text-center\\\">\\n\" +\n    \"      <th><button class=\\\"btn pull-left\\\" ng-click=\\\"move(-1)\\\"><i class=\\\"icon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th colspan=\\\"{{rows[0].length - 2 + showWeekNumbers}}\\\"><button class=\\\"btn btn-block\\\" ng-click=\\\"toggleMode()\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button class=\\\"btn pull-right\\\" ng-click=\\\"move(1)\\\"><i class=\\\"icon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr class=\\\"text-center\\\" ng-show=\\\"labels.length > 0\\\">\\n\" +\n    \"      <th ng-show=\\\"showWeekNumbers\\\">#</th>\\n\" +\n    \"      <th ng-repeat=\\\"label in labels\\\">{{label}}</th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows\\\">\\n\" +\n    \"      <td ng-show=\\\"showWeekNumbers\\\" class=\\\"text-center\\\"><em>{{ getWeekNumber(row) }}</em></td>\\n\" +\n    \"      <td ng-repeat=\\\"dt in row\\\" class=\\\"text-center\\\">\\n\" +\n    \"        <button style=\\\"width:100%;\\\" class=\\\"btn\\\" ng-class=\\\"{'btn-info': dt.isSelected}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\"><span ng-class=\\\"{muted: ! dt.isCurrent}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/dialog/message.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/dialog/message.html\",\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"\t<h3>{{ title }}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"\t<p>{{ message }}</p>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"\t<button ng-repeat=\\\"btn in buttons\\\" ng-click=\\\"close(btn.result)\\\" class=\\\"btn\\\" ng-class=\\\"btn.cssClass\\\">{{ btn.label }}</button>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/modal/backdrop.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/backdrop.html\",\n    \"<div class=\\\"modal-backdrop\\\"></div>\");\n}]);\n\nangular.module(\"template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/window.html\",\n    \"<div class=\\\"modal in\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/pagination/pager.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pager.html\",\n    \"<div class=\\\"pager\\\">\\n\" +\n    \"  <ul>\\n\" +\n    \"    <li ng-repeat=\\\"page in pages\\\" ng-class=\\\"{disabled: page.disabled, previous: page.previous, next: page.next}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n\" +\n    \"  </ul>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/pagination/pagination.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pagination.html\",\n    \"<div class=\\\"pagination\\\"><ul>\\n\" +\n    \"  <li ng-repeat=\\\"page in pages\\\" ng-class=\\\"{active: page.active, disabled: page.disabled}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n\" +\n    \"  </ul>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-html-unsafe-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\",\n    \"<div class=\\\"tooltip {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind-html-unsafe=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-popup.html\",\n    \"<div class=\\\"tooltip {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/popover/popover.html\",\n    \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"popover-inner\\\">\\n\" +\n    \"      <h3 class=\\\"popover-title\\\" ng-bind=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n    \"      <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/progressbar/bar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/bar.html\",\n    \"<div class=\\\"bar\\\" ng-class='type && \\\"bar-\\\" + type'></div>\");\n}]);\n\nangular.module(\"template/progressbar/progress.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/progress.html\",\n    \"<div class=\\\"progress\\\"><progressbar ng-repeat=\\\"bar in bars\\\" width=\\\"bar.to\\\" old=\\\"bar.from\\\" animate=\\\"bar.animate\\\" type=\\\"bar.type\\\"></progressbar></div>\");\n}]);\n\nangular.module(\"template/rating/rating.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/rating/rating.html\",\n    \"<span ng-mouseleave=\\\"reset()\\\">\\n\" +\n    \"\t<i ng-repeat=\\\"number in range\\\" ng-mouseenter=\\\"enter(number)\\\" ng-click=\\\"rate(number)\\\" ng-class=\\\"{'icon-star': number <= val, 'icon-star-empty': number > val}\\\"></i>\\n\" +\n    \"</span>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/pane.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/pane.html\",\n    \"<div class=\\\"tab-pane\\\" ng-class=\\\"{active: selected}\\\" ng-show=\\\"selected\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tab.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tab.html\",\n    \"<li ng-class=\\\"{active: active, disabled: disabled}\\\">\\n\" +\n    \"  <a ng-click=\\\"select()\\\" tab-heading-transclude>{{heading}}</a>\\n\" +\n    \"</li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tabs.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tabs.html\",\n    \"<div class=\\\"tabbable\\\">\\n\" +\n    \"  <ul class=\\\"nav nav-tabs\\\">\\n\" +\n    \"    <li ng-repeat=\\\"pane in panes\\\" ng-class=\\\"{active:pane.selected}\\\">\\n\" +\n    \"      <a ng-click=\\\"select(pane)\\\">{{pane.heading}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"  </ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\" ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tabset.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tabset.html\",\n    \"\\n\" +\n    \"<div class=\\\"tabbable\\\">\\n\" +\n    \"  <ul class=\\\"nav {{type && 'nav-' + type}}\\\" ng-class=\\\"{'nav-stacked': vertical}\\\" ng-transclude>\\n\" +\n    \"  </ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\">\\n\" +\n    \"    <div class=\\\"tab-pane\\\" \\n\" +\n    \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n    \"         ng-class=\\\"{active: tab.active}\\\"\\n\" +\n    \"         tab-content-transclude=\\\"tab\\\" tt=\\\"tab\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/timepicker/timepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/timepicker/timepicker.html\",\n    \"<table class=\\\"form-inline\\\">\\n\" +\n    \"\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t<td><a ng-click=\\\"incrementHours()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-up\\\"></i></a></td>\\n\" +\n    \"\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t<td><a ng-click=\\\"incrementMinutes()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-up\\\"></i></a></td>\\n\" +\n    \"\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t</tr>\\n\" +\n    \"\t<tr>\\n\" +\n    \"\t\t<td class=\\\"control-group\\\" ng-class=\\\"{'error': !validHours}\\\"><input type=\\\"text\\\" ng-model=\\\"hours\\\" ng-change=\\\"updateHours()\\\" class=\\\"span1 text-center\\\" ng-mousewheel=\\\"incrementHours()\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\" /></td>\\n\" +\n    \"\t\t<td>:</td>\\n\" +\n    \"\t\t<td class=\\\"control-group\\\" ng-class=\\\"{'error': !validMinutes}\\\"><input type=\\\"text\\\" ng-model=\\\"minutes\\\" ng-change=\\\"updateMinutes()\\\" class=\\\"span1 text-center\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\"></td>\\n\" +\n    \"\t\t<td ng-show=\\\"showMeridian\\\"><button ng-click=\\\"toggleMeridian()\\\" class=\\\"btn text-center\\\">{{meridian}}</button></td>\\n\" +\n    \"\t</tr>\\n\" +\n    \"\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t<td><a ng-click=\\\"decrementHours()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-down\\\"></i></a></td>\\n\" +\n    \"\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t<td><a ng-click=\\\"decrementMinutes()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-down\\\"></i></a></td>\\n\" +\n    \"\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t</tr>\\n\" +\n    \"</table>\");\n}]);\n\nangular.module(\"template/typeahead/typeahead.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/typeahead/typeahead.html\",\n    \"<ul class=\\\"typeahead dropdown-menu\\\" ng-style=\\\"{display: isOpen()&&'block' || 'none', top: position.top+'px', left: position.left+'px'}\\\">\\n\" +\n    \"    <li ng-repeat=\\\"match in matches\\\" ng-class=\\\"{active: isActive($index) }\\\" ng-mouseenter=\\\"selectActive($index)\\\">\\n\" +\n    \"        <a tabindex=\\\"-1\\\" ng-click=\\\"selectMatch($index)\\\" ng-bind-html-unsafe=\\\"match.label | typeaheadHighlight:query\\\"></a>\\n\" +\n    \"    </li>\\n\" +\n    \"</ul>\");\n}]);\n","/**\n * @license AngularJS v1.1.5\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name ngSanitize\n * @description\n */\n\n/*\n * HTML Parser By Misko Hevery (misko@hevery.com)\n * based on:  HTML Parser By John Resig (ejohn.org)\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n *\n * // Use like so:\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n */\n\n\n/**\n * @ngdoc service\n * @name ngSanitize.$sanitize\n * @function\n *\n * @description\n *   The input is sanitized by parsing the html into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string, however, since our parser is more strict than a typical browser\n *   parser, it's possible that some obscure input, which would be recognized as valid HTML by a\n *   browser, won't make it through the sanitizer.\n *\n * @param {string} html Html input.\n * @returns {string} Sanitized html.\n *\n * @example\n   <doc:example module=\"ngSanitize\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.snippet =\n             '<p style=\"color:blue\">an html\\n' +\n             '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n             'snippet</p>';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n          Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n           <table>\n             <tr>\n               <td>Filter</td>\n               <td>Source</td>\n               <td>Rendered</td>\n             </tr>\n             <tr id=\"html-filter\">\n               <td>html filter</td>\n               <td>\n                 <pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre>\n               </td>\n               <td>\n                 <div ng-bind-html=\"snippet\"></div>\n               </td>\n             </tr>\n             <tr id=\"escaped-html\">\n               <td>no filter</td>\n               <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n               <td><div ng-bind=\"snippet\"></div></td>\n             </tr>\n             <tr id=\"html-unsafe-filter\">\n               <td>unsafe html filter</td>\n               <td><pre>&lt;div ng-bind-html-unsafe=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n               <td><div ng-bind-html-unsafe=\"snippet\"></div></td>\n             </tr>\n           </table>\n         </div>\n     </doc:source>\n     <doc:scenario>\n       it('should sanitize the html snippet ', function() {\n         expect(using('#html-filter').element('div').html()).\n           toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n       });\n\n       it('should escape snippet without any filter', function() {\n         expect(using('#escaped-html').element('div').html()).\n           toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n                \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n                \"snippet&lt;/p&gt;\");\n       });\n\n       it('should inline raw snippet if filtered as unsafe', function() {\n         expect(using('#html-unsafe-filter').element(\"div\").html()).\n           toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n                \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n                \"snippet</p>\");\n       });\n\n       it('should update', function() {\n         input('snippet').enter('new <b>text</b>');\n         expect(using('#html-filter').binding('snippet')).toBe('new <b>text</b>');\n         expect(using('#escaped-html').element('div').html()).toBe(\"new &lt;b&gt;text&lt;/b&gt;\");\n         expect(using('#html-unsafe-filter').binding(\"snippet\")).toBe('new <b>text</b>');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar $sanitize = function(html) {\n  var buf = [];\n    htmlParser(html, htmlSanitizeWriter(buf));\n    return buf.join('');\n};\n\n\n// Regular Expressions for parsing tags and attributes\nvar START_TAG_REGEXP = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/,\n  END_TAG_REGEXP = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/,\n  ATTR_REGEXP = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g,\n  BEGIN_TAG_REGEXP = /^</,\n  BEGING_END_TAGE_REGEXP = /^<\\s*\\//,\n  COMMENT_REGEXP = /<!--(.*?)-->/g,\n  CDATA_REGEXP = /<!\\[CDATA\\[(.*?)]]>/g,\n  URI_REGEXP = /^((ftp|https?):\\/\\/|mailto:|tel:|#)/,\n  NON_ALPHANUMERIC_REGEXP = /([^\\#-~| |!])/g; // Match everything outside of normal chars and \" (quote character)\n\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar voidElements = makeMap(\"area,br,col,hr,img,wbr\");\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar optionalEndTagBlockElements = makeMap(\"colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr\"),\n    optionalEndTagInlineElements = makeMap(\"rp,rt\"),\n    optionalEndTagElements = angular.extend({}, optionalEndTagInlineElements, optionalEndTagBlockElements);\n\n// Safe Block Elements - HTML5\nvar blockElements = angular.extend({}, optionalEndTagBlockElements, makeMap(\"address,article,aside,\" +\n        \"blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,\" +\n        \"header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul\"));\n\n// Inline Elements - HTML5\nvar inlineElements = angular.extend({}, optionalEndTagInlineElements, makeMap(\"a,abbr,acronym,b,bdi,bdo,\" +\n        \"big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,\" +\n        \"span,strike,strong,sub,sup,time,tt,u,var\"));\n\n\n// Special Elements (can contain anything)\nvar specialElements = makeMap(\"script,style\");\n\nvar validElements = angular.extend({}, voidElements, blockElements, inlineElements, optionalEndTagElements);\n\n//Attributes that have href and hence need to be sanitized\nvar uriAttrs = makeMap(\"background,cite,href,longdesc,src,usemap\");\nvar validAttrs = angular.extend({}, uriAttrs, makeMap(\n    'abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,'+\n    'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,'+\n    'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,'+\n    'scope,scrolling,shape,span,start,summary,target,title,type,'+\n    'valign,value,vspace,width'));\n\nfunction makeMap(str) {\n  var obj = {}, items = str.split(','), i;\n  for (i = 0; i < items.length; i++) obj[items[i]] = true;\n  return obj;\n}\n\n\n/**\n * @example\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * @param {string} html string\n * @param {object} handler\n */\nfunction htmlParser( html, handler ) {\n  var index, chars, match, stack = [], last = html;\n  stack.last = function() { return stack[ stack.length - 1 ]; };\n\n  while ( html ) {\n    chars = true;\n\n    // Make sure we're not in a script or style element\n    if ( !stack.last() || !specialElements[ stack.last() ] ) {\n\n      // Comment\n      if ( html.indexOf(\"<!--\") === 0 ) {\n        index = html.indexOf(\"-->\");\n\n        if ( index >= 0 ) {\n          if (handler.comment) handler.comment( html.substring( 4, index ) );\n          html = html.substring( index + 3 );\n          chars = false;\n        }\n\n      // end tag\n      } else if ( BEGING_END_TAGE_REGEXP.test(html) ) {\n        match = html.match( END_TAG_REGEXP );\n\n        if ( match ) {\n          html = html.substring( match[0].length );\n          match[0].replace( END_TAG_REGEXP, parseEndTag );\n          chars = false;\n        }\n\n      // start tag\n      } else if ( BEGIN_TAG_REGEXP.test(html) ) {\n        match = html.match( START_TAG_REGEXP );\n\n        if ( match ) {\n          html = html.substring( match[0].length );\n          match[0].replace( START_TAG_REGEXP, parseStartTag );\n          chars = false;\n        }\n      }\n\n      if ( chars ) {\n        index = html.indexOf(\"<\");\n\n        var text = index < 0 ? html : html.substring( 0, index );\n        html = index < 0 ? \"\" : html.substring( index );\n\n        if (handler.chars) handler.chars( decodeEntities(text) );\n      }\n\n    } else {\n      html = html.replace(new RegExp(\"(.*)<\\\\s*\\\\/\\\\s*\" + stack.last() + \"[^>]*>\", 'i'), function(all, text){\n        text = text.\n          replace(COMMENT_REGEXP, \"$1\").\n          replace(CDATA_REGEXP, \"$1\");\n\n        if (handler.chars) handler.chars( decodeEntities(text) );\n\n        return \"\";\n      });\n\n      parseEndTag( \"\", stack.last() );\n    }\n\n    if ( html == last ) {\n      throw \"Parse Error: \" + html;\n    }\n    last = html;\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function parseStartTag( tag, tagName, rest, unary ) {\n    tagName = angular.lowercase(tagName);\n    if ( blockElements[ tagName ] ) {\n      while ( stack.last() && inlineElements[ stack.last() ] ) {\n        parseEndTag( \"\", stack.last() );\n      }\n    }\n\n    if ( optionalEndTagElements[ tagName ] && stack.last() == tagName ) {\n      parseEndTag( \"\", tagName );\n    }\n\n    unary = voidElements[ tagName ] || !!unary;\n\n    if ( !unary )\n      stack.push( tagName );\n\n    var attrs = {};\n\n    rest.replace(ATTR_REGEXP, function(match, name, doubleQuotedValue, singleQoutedValue, unqoutedValue) {\n      var value = doubleQuotedValue\n        || singleQoutedValue\n        || unqoutedValue\n        || '';\n\n      attrs[name] = decodeEntities(value);\n    });\n    if (handler.start) handler.start( tagName, attrs, unary );\n  }\n\n  function parseEndTag( tag, tagName ) {\n    var pos = 0, i;\n    tagName = angular.lowercase(tagName);\n    if ( tagName )\n      // Find the closest opened tag of the same type\n      for ( pos = stack.length - 1; pos >= 0; pos-- )\n        if ( stack[ pos ] == tagName )\n          break;\n\n    if ( pos >= 0 ) {\n      // Close all the open elements, up the stack\n      for ( i = stack.length - 1; i >= pos; i-- )\n        if (handler.end) handler.end( stack[ i ] );\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n    }\n  }\n}\n\n/**\n * decodes all entities into regular string\n * @param value\n * @returns {string} A string with decoded entities.\n */\nvar hiddenPre=document.createElement(\"pre\");\nfunction decodeEntities(value) {\n  hiddenPre.innerHTML=value.replace(/</g,\"&lt;\");\n  return hiddenPre.innerText || hiddenPre.textContent || '';\n}\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n * @returns escaped text\n */\nfunction encodeEntities(value) {\n  return value.\n    replace(/&/g, '&amp;').\n    replace(NON_ALPHANUMERIC_REGEXP, function(value){\n      return '&#' + value.charCodeAt(0) + ';';\n    }).\n    replace(/</g, '&lt;').\n    replace(/>/g, '&gt;');\n}\n\n/**\n * create an HTML/XML writer which writes to buffer\n * @param {Array} buf use buf.jain('') to get out sanitized html string\n * @returns {object} in the form of {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * }\n */\nfunction htmlSanitizeWriter(buf){\n  var ignore = false;\n  var out = angular.bind(buf, buf.push);\n  return {\n    start: function(tag, attrs, unary){\n      tag = angular.lowercase(tag);\n      if (!ignore && specialElements[tag]) {\n        ignore = tag;\n      }\n      if (!ignore && validElements[tag] == true) {\n        out('<');\n        out(tag);\n        angular.forEach(attrs, function(value, key){\n          var lkey=angular.lowercase(key);\n          if (validAttrs[lkey]==true && (uriAttrs[lkey]!==true || value.match(URI_REGEXP))) {\n            out(' ');\n            out(key);\n            out('=\"');\n            out(encodeEntities(value));\n            out('\"');\n          }\n        });\n        out(unary ? '/>' : '>');\n      }\n    },\n    end: function(tag){\n        tag = angular.lowercase(tag);\n        if (!ignore && validElements[tag] == true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        if (tag == ignore) {\n          ignore = false;\n        }\n      },\n    chars: function(chars){\n        if (!ignore) {\n          out(encodeEntities(chars));\n        }\n      }\n  };\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', []).value('$sanitize', $sanitize);\n\n/**\n * @ngdoc directive\n * @name ngSanitize.directive:ngBindHtml\n *\n * @description\n * Creates a binding that will sanitize the result of evaluating the `expression` with the\n * {@link ngSanitize.$sanitize $sanitize} service and innerHTML the result into the current element.\n *\n * See {@link ngSanitize.$sanitize $sanitize} docs for examples.\n *\n * @element ANY\n * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\n */\nangular.module('ngSanitize').directive('ngBindHtml', ['$sanitize', function($sanitize) {\n  return function(scope, element, attr) {\n    element.addClass('ng-binding').data('$binding', attr.ngBindHtml);\n    scope.$watch(attr.ngBindHtml, function ngBindHtmlWatchAction(value) {\n      value = $sanitize(value);\n      element.html(value || '');\n    });\n  };\n}]);\n\n/**\n * @ngdoc filter\n * @name ngSanitize.filter:linky\n * @function\n *\n * @description\n *   Finds links in text input and turns them into html links. Supports http/https/ftp/mailto and\n *   plain email address links.\n *\n * @param {string} text Input text.\n * @param {string} target Window (_blank|_self|_parent|_top) or named frame to open links in.\n * @returns {string} Html-linkified text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <doc:example module=\"ngSanitize\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n'+\n             'http://angularjs.org/,\\n'+\n             'mailto:us@somewhere.org,\\n'+\n             'another@somewhere.org,\\n'+\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithTarget = 'http://angularjs.org/';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Filter</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithTarget | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithTarget | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </doc:source>\n     <doc:scenario>\n       it('should linkify the snippet with urls', function() {\n         expect(using('#linky-filter').binding('snippet | linky')).\n           toBe('Pretty text with some links:&#10;' +\n                '<a href=\"http://angularjs.org/\">http://angularjs.org/</a>,&#10;' +\n                '<a href=\"mailto:us@somewhere.org\">us@somewhere.org</a>,&#10;' +\n                '<a href=\"mailto:another@somewhere.org\">another@somewhere.org</a>,&#10;' +\n                'and one more: <a href=\"ftp://127.0.0.1/\">ftp://127.0.0.1/</a>.');\n       });\n\n       it ('should not linkify snippet without the linky filter', function() {\n         expect(using('#escaped-html').binding('snippet')).\n           toBe(\"Pretty text with some links:\\n\" +\n                \"http://angularjs.org/,\\n\" +\n                \"mailto:us@somewhere.org,\\n\" +\n                \"another@somewhere.org,\\n\" +\n                \"and one more: ftp://127.0.0.1/.\");\n       });\n\n       it('should update', function() {\n         input('snippet').enter('new http://link.');\n         expect(using('#linky-filter').binding('snippet | linky')).\n           toBe('new <a href=\"http://link\">http://link</a>.');\n         expect(using('#escaped-html').binding('snippet')).toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(using('#linky-target').binding(\"snippetWithTarget | linky:'_blank'\")).\n          toBe('<a target=\"_blank\" href=\"http://angularjs.org/\">http://angularjs.org/</a>');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nangular.module('ngSanitize').filter('linky', function() {\n  var LINKY_URL_REGEXP = /((ftp|https?):\\/\\/|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s\\.\\;\\,\\(\\)\\{\\}\\<\\>]/,\n      MAILTO_REGEXP = /^mailto:/;\n\n  return function(text, target) {\n    if (!text) return text;\n    var match;\n    var raw = text;\n    var html = [];\n    // TODO(vojta): use $sanitize instead\n    var writer = htmlSanitizeWriter(html);\n    var url;\n    var i;\n    var properties = {};\n    if (angular.isDefined(target)) {\n      properties.target = target;\n    }\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/mailto then assume mailto\n      if (match[2] == match[3]) url = 'mailto:' + url;\n      i = match.index;\n      writer.chars(raw.substr(0, i));\n      properties.href = url;\n      writer.start('a', properties);\n      writer.chars(match[0].replace(MAILTO_REGEXP, ''));\n      writer.end('a');\n      raw = raw.substring(i + match[0].length);\n    }\n    writer.chars(raw);\n    return html.join('');\n  };\n});\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.1.5\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name ngResource\n * @description\n */\n\n/**\n * @ngdoc object\n * @name ngResource.$resource\n * @requires $http\n *\n * @description\n * A factory which creates a resource object that lets you interact with\n * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.\n *\n * The returned resource object has action methods which provide high-level behaviors without\n * the need to interact with the low level {@link ng.$http $http} service.\n *\n * # Installation\n * To use $resource make sure you have included the `angular-resource.js` that comes in Angular\n * package. You can also find this file on Google CDN, bower as well as at\n * {@link http://code.angularjs.org/ code.angularjs.org}.\n *\n * Finally load the module in your application:\n *\n *        angular.module('app', ['ngResource']);\n *\n * and you are ready to get started!\n *\n * @param {string} url A parametrized URL template with parameters prefixed by `:` as in\n *   `/user/:username`. If you are using a URL with a port number (e.g.\n *   `http://example.com:8080/api`), you'll need to escape the colon character before the port\n *   number, like this: `$resource('http://example.com\\\\:8080/api')`.\n *\n *   If you are using a url with a suffix, just add the suffix, like this: \n *   `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')\n *   or even `$resource('http://example.com/resource/:resource_id.:format')` \n *   If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be\n *   collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you\n *   can escape it with `/\\.`.\n *\n * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in\n *   `actions` methods. If any of the parameter value is a function, it will be executed every time\n *   when a param value needs to be obtained for a request (unless the param was overridden).\n *\n *   Each key value in the parameter object is first bound to url template if present and then any\n *   excess keys are appended to the url search query after the `?`.\n *\n *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in\n *   URL `/path/greet?salutation=Hello`.\n *\n *   If the parameter value is prefixed with `@` then the value of that parameter is extracted from\n *   the data object (useful for non-GET operations).\n *\n * @param {Object.<Object>=} actions Hash with declaration of custom action that should extend the\n *   default set of resource actions. The declaration should be created in the format of {@link\n *   ng.$http#Parameters $http.config}:\n *\n *       {action1: {method:?, params:?, isArray:?, headers:?, ...},\n *        action2: {method:?, params:?, isArray:?, headers:?, ...},\n *        ...}\n *\n *   Where:\n *\n *   - **`action`** – {string} – The name of action. This name becomes the name of the method on your\n *     resource object.\n *   - **`method`** – {string} – HTTP request method. Valid methods are: `GET`, `POST`, `PUT`, `DELETE`,\n *     and `JSONP`.\n *   - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of the\n *     parameter value is a function, it will be executed every time when a param value needs to be\n *     obtained for a request (unless the param was overridden).\n *   - **`url`** – {string} – action specific `url` override. The url templating is supported just like\n *     for the resource-level urls.\n *   - **`isArray`** – {boolean=} – If true then the returned object for this action is an array, see\n *     `returns` section.\n *   - **`transformRequest`** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n *     transform function or an array of such functions. The transform function takes the http\n *     request body and headers and returns its transformed (typically serialized) version.\n *   - **`transformResponse`** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n *     transform function or an array of such functions. The transform function takes the http\n *     response body and headers and returns its transformed (typically deserialized) version.\n *   - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n *     GET request, otherwise if a cache instance built with\n *     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n *     caching.\n *   - **`timeout`** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise} that\n *     should abort the request when resolved.\n *   - **`withCredentials`** - `{boolean}` - whether to to set the `withCredentials` flag on the\n *     XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5\n *     requests with credentials} for more information.\n *   - **`responseType`** - `{string}` - see {@link\n *     https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType requestType}.\n *\n * @returns {Object} A resource \"class\" object with methods for the default set of resource actions\n *   optionally extended with custom `actions`. The default set contains these actions:\n *\n *       { 'get':    {method:'GET'},\n *         'save':   {method:'POST'},\n *         'query':  {method:'GET', isArray:true},\n *         'remove': {method:'DELETE'},\n *         'delete': {method:'DELETE'} };\n *\n *   Calling these methods invoke an {@link ng.$http} with the specified http method,\n *   destination and parameters. When the data is returned from the server then the object is an\n *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it\n *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,\n *   read, update, delete) on server-side data like this:\n *   <pre>\n        var User = $resource('/user/:userId', {userId:'@id'});\n        var user = User.get({userId:123}, function() {\n          user.abc = true;\n          user.$save();\n        });\n     </pre>\n *\n *   It is important to realize that invoking a $resource object method immediately returns an\n *   empty reference (object or array depending on `isArray`). Once the data is returned from the\n *   server the existing reference is populated with the actual data. This is a useful trick since\n *   usually the resource is assigned to a model which is then rendered by the view. Having an empty\n *   object results in no rendering, once the data arrives from the server then the object is\n *   populated with the data and the view automatically re-renders itself showing the new data. This\n *   means that in most case one never has to write a callback function for the action methods.\n *\n *   The action methods on the class object or instance object can be invoked with the following\n *   parameters:\n *\n *   - HTTP GET \"class\" actions: `Resource.action([parameters], [success], [error])`\n *   - non-GET \"class\" actions: `Resource.action([parameters], postData, [success], [error])`\n *   - non-GET instance actions:  `instance.$action([parameters], [success], [error])`\n *\n *\n *   The Resource instances and collection have these additional properties:\n *\n *   - `$then`: the `then` method of a {@link ng.$q promise} derived from the underlying\n *     {@link ng.$http $http} call.\n *\n *     The success callback for the `$then` method will be resolved if the underlying `$http` requests\n *     succeeds.\n *\n *     The success callback is called with a single object which is the {@link ng.$http http response}\n *     object extended with a new property `resource`. This `resource` property is a reference to the\n *     result of the resource action — resource object or array of resources.\n *\n *     The error callback is called with the {@link ng.$http http response} object when an http\n *     error occurs.\n *\n *   - `$resolved`: true if the promise has been resolved (either with success or rejection);\n *     Knowing if the Resource has been resolved is useful in data-binding.\n *\n * @example\n *\n * # Credit card resource\n *\n * <pre>\n     // Define CreditCard class\n     var CreditCard = $resource('/user/:userId/card/:cardId',\n      {userId:123, cardId:'@id'}, {\n       charge: {method:'POST', params:{charge:true}}\n      });\n\n     // We can retrieve a collection from the server\n     var cards = CreditCard.query(function() {\n       // GET: /user/123/card\n       // server returns: [ {id:456, number:'1234', name:'Smith'} ];\n\n       var card = cards[0];\n       // each item is an instance of CreditCard\n       expect(card instanceof CreditCard).toEqual(true);\n       card.name = \"J. Smith\";\n       // non GET methods are mapped onto the instances\n       card.$save();\n       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}\n       // server returns: {id:456, number:'1234', name: 'J. Smith'};\n\n       // our custom method is mapped as well.\n       card.$charge({amount:9.99});\n       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}\n     });\n\n     // we can create an instance as well\n     var newCard = new CreditCard({number:'0123'});\n     newCard.name = \"Mike Smith\";\n     newCard.$save();\n     // POST: /user/123/card {number:'0123', name:'Mike Smith'}\n     // server returns: {id:789, number:'01234', name: 'Mike Smith'};\n     expect(newCard.id).toEqual(789);\n * </pre>\n *\n * The object returned from this function execution is a resource \"class\" which has \"static\" method\n * for each action in the definition.\n *\n * Calling these methods invoke `$http` on the `url` template with the given `method`, `params` and `headers`.\n * When the data is returned from the server then the object is an instance of the resource type and\n * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD\n * operations (create, read, update, delete) on server-side data.\n\n   <pre>\n     var User = $resource('/user/:userId', {userId:'@id'});\n     var user = User.get({userId:123}, function() {\n       user.abc = true;\n       user.$save();\n     });\n   </pre>\n *\n * It's worth noting that the success callback for `get`, `query` and other method gets passed\n * in the response that came from the server as well as $http header getter function, so one\n * could rewrite the above example and get access to http headers as:\n *\n   <pre>\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123}, function(u, getResponseHeaders){\n       u.abc = true;\n       u.$save(function(u, putResponseHeaders) {\n         //u => saved user object\n         //putResponseHeaders => $http header getter\n       });\n     });\n   </pre>\n\n * # Buzz client\n\n   Let's look at what a buzz client created with the `$resource` service looks like:\n    <doc:example>\n      <doc:source jsfiddle=\"false\">\n       <script>\n         function BuzzController($resource) {\n           this.userId = 'googlebuzz';\n           this.Activity = $resource(\n             'https://www.googleapis.com/buzz/v1/activities/:userId/:visibility/:activityId/:comments',\n             {alt:'json', callback:'JSON_CALLBACK'},\n             {get:{method:'JSONP', params:{visibility:'@self'}}, replies: {method:'JSONP', params:{visibility:'@self', comments:'@comments'}}}\n           );\n         }\n\n         BuzzController.prototype = {\n           fetch: function() {\n             this.activities = this.Activity.get({userId:this.userId});\n           },\n           expandReplies: function(activity) {\n             activity.replies = this.Activity.replies({userId:this.userId, activityId:activity.id});\n           }\n         };\n         BuzzController.$inject = ['$resource'];\n       </script>\n\n       <div ng-controller=\"BuzzController\">\n         <input ng-model=\"userId\"/>\n         <button ng-click=\"fetch()\">fetch</button>\n         <hr/>\n         <div ng-repeat=\"item in activities.data.items\">\n           <h1 style=\"font-size: 15px;\">\n             <img src=\"{{item.actor.thumbnailUrl}}\" style=\"max-height:30px;max-width:30px;\"/>\n             <a href=\"{{item.actor.profileUrl}}\">{{item.actor.name}}</a>\n             <a href ng-click=\"expandReplies(item)\" style=\"float: right;\">Expand replies: {{item.links.replies[0].count}}</a>\n           </h1>\n           {{item.object.content | html}}\n           <div ng-repeat=\"reply in item.replies.data.items\" style=\"margin-left: 20px;\">\n             <img src=\"{{reply.actor.thumbnailUrl}}\" style=\"max-height:30px;max-width:30px;\"/>\n             <a href=\"{{reply.actor.profileUrl}}\">{{reply.actor.name}}</a>: {{reply.content | html}}\n           </div>\n         </div>\n       </div>\n      </doc:source>\n      <doc:scenario>\n      </doc:scenario>\n    </doc:example>\n */\nangular.module('ngResource', ['ng']).\n  factory('$resource', ['$http', '$parse', function($http, $parse) {\n    var DEFAULT_ACTIONS = {\n      'get':    {method:'GET'},\n      'save':   {method:'POST'},\n      'query':  {method:'GET', isArray:true},\n      'remove': {method:'DELETE'},\n      'delete': {method:'DELETE'}\n    };\n    var noop = angular.noop,\n        forEach = angular.forEach,\n        extend = angular.extend,\n        copy = angular.copy,\n        isFunction = angular.isFunction,\n        getter = function(obj, path) {\n          return $parse(path)(obj);\n        };\n\n    /**\n     * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n     * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n     * segments:\n     *    segment       = *pchar\n     *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     *    pct-encoded   = \"%\" HEXDIG HEXDIG\n     *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n     *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    function encodeUriSegment(val) {\n      return encodeUriQuery(val, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n\n\n    /**\n     * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n     * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n     * encoded per http://tools.ietf.org/html/rfc3986:\n     *    query       = *( pchar / \"/\" / \"?\" )\n     *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     *    pct-encoded   = \"%\" HEXDIG HEXDIG\n     *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n     *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    function encodeUriQuery(val, pctEncodeSpaces) {\n      return encodeURIComponent(val).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    }\n\n    function Route(template, defaults) {\n      this.template = template;\n      this.defaults = defaults || {};\n      this.urlParams = {};\n    }\n\n    Route.prototype = {\n      setUrlParams: function(config, params, actionUrl) {\n        var self = this,\n            url = actionUrl || self.template,\n            val,\n            encodedVal;\n\n        var urlParams = self.urlParams = {};\n        forEach(url.split(/\\W/), function(param){\n          if (param && (new RegExp(\"(^|[^\\\\\\\\]):\" + param + \"(\\\\W|$)\").test(url))) {\n              urlParams[param] = true;\n          }\n        });\n        url = url.replace(/\\\\:/g, ':');\n\n        params = params || {};\n        forEach(self.urlParams, function(_, urlParam){\n          val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];\n          if (angular.isDefined(val) && val !== null) {\n            encodedVal = encodeUriSegment(val);\n            url = url.replace(new RegExp(\":\" + urlParam + \"(\\\\W|$)\", \"g\"), encodedVal + \"$1\");\n          } else {\n            url = url.replace(new RegExp(\"(\\/?):\" + urlParam + \"(\\\\W|$)\", \"g\"), function(match,\n                leadingSlashes, tail) {\n              if (tail.charAt(0) == '/') {\n                return tail;\n              } else {\n                return leadingSlashes + tail;\n              }\n            });\n          }\n        });\n\n        // strip trailing slashes and set the url\n        url = url.replace(/\\/+$/, '');\n        // then replace collapse `/.` if found in the last URL path segment before the query\n        // E.g. `http://url.com/id./format?q=x` becomes `http://url.com/id.format?q=x`\n        url = url.replace(/\\/\\.(?=\\w+($|\\?))/, '.');\n        // replace escaped `/\\.` with `/.`\n        config.url = url.replace(/\\/\\\\\\./, '/.');\n          \n\n        // set params - delegate param encoding to $http\n        forEach(params, function(value, key){\n          if (!self.urlParams[key]) {\n            config.params = config.params || {};\n            config.params[key] = value;\n          }\n        });\n      }\n    };\n\n\n    function ResourceFactory(url, paramDefaults, actions) {\n      var route = new Route(url);\n\n      actions = extend({}, DEFAULT_ACTIONS, actions);\n\n      function extractParams(data, actionParams){\n        var ids = {};\n        actionParams = extend({}, paramDefaults, actionParams);\n        forEach(actionParams, function(value, key){\n          if (isFunction(value)) { value = value(); }\n          ids[key] = value && value.charAt && value.charAt(0) == '@' ? getter(data, value.substr(1)) : value;\n        });\n        return ids;\n      }\n\n      function Resource(value){\n        copy(value || {}, this);\n      }\n\n      forEach(actions, function(action, name) {\n        action.method = angular.uppercase(action.method);\n        var hasBody = action.method == 'POST' || action.method == 'PUT' || action.method == 'PATCH';\n        Resource[name] = function(a1, a2, a3, a4) {\n          var params = {};\n          var data;\n          var success = noop;\n          var error = null;\n          var promise;\n\n          switch(arguments.length) {\n          case 4:\n            error = a4;\n            success = a3;\n            //fallthrough\n          case 3:\n          case 2:\n            if (isFunction(a2)) {\n              if (isFunction(a1)) {\n                success = a1;\n                error = a2;\n                break;\n              }\n\n              success = a2;\n              error = a3;\n              //fallthrough\n            } else {\n              params = a1;\n              data = a2;\n              success = a3;\n              break;\n            }\n          case 1:\n            if (isFunction(a1)) success = a1;\n            else if (hasBody) data = a1;\n            else params = a1;\n            break;\n          case 0: break;\n          default:\n            throw \"Expected between 0-4 arguments [params, data, success, error], got \" +\n              arguments.length + \" arguments.\";\n          }\n\n          var value = this instanceof Resource ? this : (action.isArray ? [] : new Resource(data));\n          var httpConfig = {},\n              promise;\n\n          forEach(action, function(value, key) {\n            if (key != 'params' && key != 'isArray' ) {\n              httpConfig[key] = copy(value);\n            }\n          });\n          httpConfig.data = data;\n          route.setUrlParams(httpConfig, extend({}, extractParams(data, action.params || {}), params), action.url);\n\n          function markResolved() { value.$resolved = true; }\n\n          promise = $http(httpConfig);\n          value.$resolved = false;\n\n          promise.then(markResolved, markResolved);\n          value.$then = promise.then(function(response) {\n            var data = response.data;\n            var then = value.$then, resolved = value.$resolved;\n\n            if (data) {\n              if (action.isArray) {\n                value.length = 0;\n                forEach(data, function(item) {\n                  value.push(new Resource(item));\n                });\n              } else {\n                copy(data, value);\n                value.$then = then;\n                value.$resolved = resolved;\n              }\n            }\n\n            (success||noop)(value, response.headers);\n\n            response.resource = value;\n            return response;\n          }, error).then;\n\n          return value;\n        };\n\n\n        Resource.prototype['$' + name] = function(a1, a2, a3) {\n          var params = extractParams(this),\n              success = noop,\n              error;\n\n          switch(arguments.length) {\n          case 3: params = a1; success = a2; error = a3; break;\n          case 2:\n          case 1:\n            if (isFunction(a1)) {\n              success = a1;\n              error = a2;\n            } else {\n              params = a1;\n              success = a2 || noop;\n            }\n          case 0: break;\n          default:\n            throw \"Expected between 1-3 arguments [params, success, error], got \" +\n              arguments.length + \" arguments.\";\n          }\n          var data = hasBody ? this : undefined;\n          Resource[name].call(this, params, data, success, error);\n        };\n      });\n\n      Resource.bind = function(additionalParamDefaults){\n        return ResourceFactory(url, extend({}, paramDefaults, additionalParamDefaults), actions);\n      };\n\n      return Resource;\n    }\n\n    return ResourceFactory;\n  }]);\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.1.5\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name ngCookies\n */\n\n\nangular.module('ngCookies', ['ng']).\n  /**\n   * @ngdoc object\n   * @name ngCookies.$cookies\n   * @requires $browser\n   *\n   * @description\n   * Provides read/write access to browser's cookies.\n   *\n   * Only a simple Object is exposed and by adding or removing properties to/from\n   * this object, new cookies are created/deleted at the end of current $eval.\n   *\n   * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function ExampleController($cookies) {\n           // Retrieving a cookie\n           var favoriteCookie = $cookies.myFavorite;\n           // Setting a cookie\n           $cookies.myFavorite = 'oatmeal';\n         }\n       </script>\n     </doc:source>\n   </doc:example>\n   */\n   factory('$cookies', ['$rootScope', '$browser', function ($rootScope, $browser) {\n      var cookies = {},\n          lastCookies = {},\n          lastBrowserCookies,\n          runEval = false,\n          copy = angular.copy,\n          isUndefined = angular.isUndefined;\n\n      //creates a poller fn that copies all cookies from the $browser to service & inits the service\n      $browser.addPollFn(function() {\n        var currentCookies = $browser.cookies();\n        if (lastBrowserCookies != currentCookies) { //relies on browser.cookies() impl\n          lastBrowserCookies = currentCookies;\n          copy(currentCookies, lastCookies);\n          copy(currentCookies, cookies);\n          if (runEval) $rootScope.$apply();\n        }\n      })();\n\n      runEval = true;\n\n      //at the end of each eval, push cookies\n      //TODO: this should happen before the \"delayed\" watches fire, because if some cookies are not\n      //      strings or browser refuses to store some cookies, we update the model in the push fn.\n      $rootScope.$watch(push);\n\n      return cookies;\n\n\n      /**\n       * Pushes all the cookies from the service to the browser and verifies if all cookies were stored.\n       */\n      function push() {\n        var name,\n            value,\n            browserCookies,\n            updated;\n\n        //delete any cookies deleted in $cookies\n        for (name in lastCookies) {\n          if (isUndefined(cookies[name])) {\n            $browser.cookies(name, undefined);\n          }\n        }\n\n        //update all cookies updated in $cookies\n        for(name in cookies) {\n          value = cookies[name];\n          if (!angular.isString(value)) {\n            if (angular.isDefined(lastCookies[name])) {\n              cookies[name] = lastCookies[name];\n            } else {\n              delete cookies[name];\n            }\n          } else if (value !== lastCookies[name]) {\n            $browser.cookies(name, value);\n            updated = true;\n          }\n        }\n\n        //verify what was actually stored\n        if (updated){\n          updated = false;\n          browserCookies = $browser.cookies();\n\n          for (name in cookies) {\n            if (cookies[name] !== browserCookies[name]) {\n              //delete or reset all cookies that the browser dropped from $cookies\n              if (isUndefined(browserCookies[name])) {\n                delete cookies[name];\n              } else {\n                cookies[name] = browserCookies[name];\n              }\n              updated = true;\n            }\n          }\n        }\n      }\n    }]).\n\n\n  /**\n   * @ngdoc object\n   * @name ngCookies.$cookieStore\n   * @requires $cookies\n   *\n   * @description\n   * Provides a key-value (string-object) storage, that is backed by session cookies.\n   * Objects put or retrieved from this storage are automatically serialized or\n   * deserialized by angular's toJson/fromJson.\n   * @example\n   */\n   factory('$cookieStore', ['$cookies', function($cookies) {\n\n      return {\n        /**\n         * @ngdoc method\n         * @name ngCookies.$cookieStore#get\n         * @methodOf ngCookies.$cookieStore\n         *\n         * @description\n         * Returns the value of given cookie key\n         *\n         * @param {string} key Id to use for lookup.\n         * @returns {Object} Deserialized cookie value.\n         */\n        get: function(key) {\n          var value = $cookies[key];\n          return value ? angular.fromJson(value) : value;\n        },\n\n        /**\n         * @ngdoc method\n         * @name ngCookies.$cookieStore#put\n         * @methodOf ngCookies.$cookieStore\n         *\n         * @description\n         * Sets a value for given cookie key\n         *\n         * @param {string} key Id for the `value`.\n         * @param {Object} value Value to be stored.\n         */\n        put: function(key, value) {\n          $cookies[key] = angular.toJson(value);\n        },\n\n        /**\n         * @ngdoc method\n         * @name ngCookies.$cookieStore#remove\n         * @methodOf ngCookies.$cookieStore\n         *\n         * @description\n         * Remove given cookie\n         *\n         * @param {string} key Id of the key-value pair to delete.\n         */\n        remove: function(key) {\n          delete $cookies[key];\n        }\n      };\n\n    }]);\n\n\n})(window, window.angular);\n","/*!\n * jquery.base64.js 0.0.3 - https://github.com/yckart/jquery.base64.js\n * Makes Base64 en & -decoding simpler as it is.\n *\n * Based upon: https://gist.github.com/Yaffle/1284012\n *\n * Copyright (c) 2012 Yannick Albert (http://yckart.com)\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php).\n * 2013/02/10\n **/\n;(function($) {\n\n    var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n        a256 = '',\n        r64 = [256],\n        r256 = [256],\n        i = 0;\n\n    var UTF8 = {\n\n        /**\n         * Encode multi-byte Unicode string into utf-8 multiple single-byte characters\n         * (BMP / basic multilingual plane only)\n         *\n         * Chars in range U+0080 - U+07FF are encoded in 2 chars, U+0800 - U+FFFF in 3 chars\n         *\n         * @param {String} strUni Unicode string to be encoded as UTF-8\n         * @returns {String} encoded string\n         */\n        encode: function(strUni) {\n            // use regular expressions & String.replace callback function for better efficiency\n            // than procedural approaches\n            var strUtf = strUni.replace(/[\\u0080-\\u07ff]/g, // U+0080 - U+07FF => 2 bytes 110yyyyy, 10zzzzzz\n            function(c) {\n                var cc = c.charCodeAt(0);\n                return String.fromCharCode(0xc0 | cc >> 6, 0x80 | cc & 0x3f);\n            })\n            .replace(/[\\u0800-\\uffff]/g, // U+0800 - U+FFFF => 3 bytes 1110xxxx, 10yyyyyy, 10zzzzzz\n            function(c) {\n                var cc = c.charCodeAt(0);\n                return String.fromCharCode(0xe0 | cc >> 12, 0x80 | cc >> 6 & 0x3F, 0x80 | cc & 0x3f);\n            });\n            return strUtf;\n        },\n\n        /**\n         * Decode utf-8 encoded string back into multi-byte Unicode characters\n         *\n         * @param {String} strUtf UTF-8 string to be decoded back to Unicode\n         * @returns {String} decoded string\n         */\n        decode: function(strUtf) {\n            // note: decode 3-byte chars first as decoded 2-byte strings could appear to be 3-byte char!\n            var strUni = strUtf.replace(/[\\u00e0-\\u00ef][\\u0080-\\u00bf][\\u0080-\\u00bf]/g, // 3-byte chars\n            function(c) { // (note parentheses for precence)\n                var cc = ((c.charCodeAt(0) & 0x0f) << 12) | ((c.charCodeAt(1) & 0x3f) << 6) | (c.charCodeAt(2) & 0x3f);\n                return String.fromCharCode(cc);\n            })\n            .replace(/[\\u00c0-\\u00df][\\u0080-\\u00bf]/g, // 2-byte chars\n            function(c) { // (note parentheses for precence)\n                var cc = (c.charCodeAt(0) & 0x1f) << 6 | c.charCodeAt(1) & 0x3f;\n                return String.fromCharCode(cc);\n            });\n            return strUni;\n        }\n    };\n\n    while(i < 256) {\n        var c = String.fromCharCode(i);\n        a256 += c;\n        r256[i] = i;\n        r64[i] = b64.indexOf(c);\n        ++i;\n    }\n\n    function code(s, discard, alpha, beta, w1, w2) {\n        s = String(s);\n        var buffer = 0,\n            i = 0,\n            length = s.length,\n            result = '',\n            bitsInBuffer = 0;\n\n        while(i < length) {\n            var c = s.charCodeAt(i);\n            c = c < 256 ? alpha[c] : -1;\n\n            buffer = (buffer << w1) + c;\n            bitsInBuffer += w1;\n\n            while(bitsInBuffer >= w2) {\n                bitsInBuffer -= w2;\n                var tmp = buffer >> bitsInBuffer;\n                result += beta.charAt(tmp);\n                buffer ^= tmp << bitsInBuffer;\n            }\n            ++i;\n        }\n        if(!discard && bitsInBuffer > 0) result += beta.charAt(buffer << (w2 - bitsInBuffer));\n        return result;\n    }\n\n    var Plugin = $.base64 = function(dir, input, encode) {\n            return input ? Plugin[dir](input, encode) : dir ? null : this;\n        };\n\n    Plugin.btoa = Plugin.encode = function(plain, utf8encode) {\n        plain = Plugin.raw === false || Plugin.utf8encode || utf8encode ? UTF8.encode(plain) : plain;\n        plain = code(plain, false, r256, b64, 8, 6);\n        return plain + '===='.slice((plain.length % 4) || 4);\n    };\n\n    Plugin.atob = Plugin.decode = function(coded, utf8decode) {\n        coded = coded.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        coded = String(coded).split('=');\n        var i = coded.length;\n        do {--i;\n            coded[i] = code(coded[i], true, r64, a256, 6, 8);\n        } while (i > 0);\n        coded = coded.join('');\n        return Plugin.raw === false || Plugin.utf8decode || utf8decode ? UTF8.decode(coded) : coded;\n    };\n}(jQuery));\n","/**\n * @description Google Chart Api Directive Module for AngularJS\n * @version 0.1\n * @author Nicolas Bouillon <nicolas@bouil.org>\n * @license MIT\n * @year 2013\n */\n(function () {\n    'use strict';\n\n    angular.module('googlechart.directives', []).directive('googleChart', ['$timeout', '$window', function ($timeout, $window) {\n        return {\n            restrict: 'A',\n            scope: {\n                chart: '=chart'\n            },\n            link: function ($scope, $elm, $attr) {\n                // Watches, to refresh the chart when its data, title or dimensions change\n                $scope.$watch('chart', function () {\n                    draw();\n                }, true); // true is for deep object equality checking\n\n                // Redraw the chart if the window is resized \n                angular.element($window).bind('resize', function () {\n                    draw();\n                });\n\n                function draw() {\n                    if (!draw.triggered && ($scope.chart != undefined)) {\n                        draw.triggered = true;\n                        $timeout(function () {\n                            draw.triggered = false;\n                            var dataTable = new google.visualization.DataTable($scope.chart.data, 0.5);\n\n                            var chartWrapperArgs = {\n                                chartType: $scope.chart.type,\n                                dataTable: dataTable,\n                                view: $scope.chart.view,\n                                options: $scope.chart.options,\n                                containerId: $elm[0]\n                            };\n\n                            if($scope.chartWrapper==null) {\n                            \t$scope.chartWrapper = new google.visualization.ChartWrapper(chartWrapperArgs);\n                                google.visualization.events.addListener($scope.chartWrapper, 'ready', function () {\n                                    $scope.chart.displayed = true;\n                                });\n                                google.visualization.events.addListener($scope.chartWrapper, 'error', function (err) {\n                                    console.log(\"Chart not displayed due to error: \" + err.message);\n                                });\n                            }\n                            else {\n                            \t$scope.chartWrapper.setChartType($scope.chart.type);\n                            \t$scope.chartWrapper.setDataTable(dataTable);\n                                $scope.chartWrapper.setView($scope.chart.view);\n                            \t$scope.chartWrapper.setOptions($scope.chart.options);\n                            }\n                            \t\n                            $timeout(function () {\n                            \t$scope.chartWrapper.draw();\n                            });\n                        }, 0, true);\n                    }\n                }\n\n            }\n        };\n    }]);\n})();\n"]}