{"version":3,"file":"_public/js/vendor.js.map","sources":["bower_components/angular/angular.js","bower_components/console-polyfill/index.js","bower_components/jquery/jquery.js","bower_components/angular-bootstrap/ui-bootstrap-tpls.js","bower_components/angular-sanitize/angular-sanitize.js","bower_components/angular-resource/angular-resource.js","bower_components/angular-cookies/angular-cookies.js","vendor/scripts/ng-google-chart.js"],"names":["window","document","undefined","isArrayLike","obj","length","hasOwnProperty","constructor","JQLite","jQuery","toString","call","callee","forEach","iterator","context","key","isFunction","sortedKeys","keys","push","sort","forEachSorted","i","reverseParams","iteratorFn","value","nextUid","digit","index","uid","charCodeAt","join","String","fromCharCode","unshift","setHashKey","h","$$hashKey","extend","dst","arguments","int","str","parseInt","inherit","parent","extra","prototype","noop","identity","$","valueFn","isUndefined","isDefined","isObject","isString","isNumber","isDate","apply","isArray","isWindow","location","alert","setInterval","isScope","$evalAsync","$watch","isFile","trim","replace","isElement","node","nodeName","bind","find","map","results","list","includes","array","indexOf","arrayRemove","splice","copy","source","destination","Error","Date","getTime","shallowCopy","src","substr","equals","o1","o2","keySet","t1","t2","charAt","concat","array1","array2","slice","sliceArgs","args","startIndex","self","fn","curryArgs","RegExp","toJsonReplacer","val","test","toJson","pretty","JSON","stringify","fromJson","json","parse","toBoolean","v","lowercase","startingTag","element","jqLite","clone","html","e","TEXT_NODE","elemHtml","append","nodeType","match","parseKeyValue","keyValue","key_value","split","decodeURIComponent","toKeyValue","parts","encodeUriQuery","encodeUriSegment","pctEncodeSpaces","encodeURIComponent","angularInit","bootstrap","elements","appElement","module","names","NG_APP_CLASS_REGEXP","name","getElementById","querySelectorAll","className","exec","attributes","attr","modules","resumeBootstrapInternal","$provide","injector","createInjector","invoke","scope","compile","$apply","data","NG_DEFER_BOOTSTRAP","angular","resumeBootstrap","extraModules","snake_case","separator","SNAKE_CASE_REGEXP","letter","pos","toLowerCase","bindJQuery","JQLitePrototype","controller","inheritedData","JQLitePatchJQueryRemove","assertArg","arg","reason","assertArgFn","acceptArrayAnnotation","setupModuleLoader","ensure","factory","Object","requires","configFn","invokeLater","provider","method","insertMethod","invokeQueue","moduleInstance","runBlocks","config","_invokeQueue","_runBlocks","service","constant","filter","directive","run","block","this","publishExternalAPI","version","uppercase","callbacks","counter","angularModule","$LocaleProvider","$CompileProvider","a","htmlAnchorDirective","input","inputDirective","textarea","form","formDirective","script","scriptDirective","select","selectDirective","style","styleDirective","option","optionDirective","ngBind","ngBindDirective","ngBindHtmlUnsafe","ngBindHtmlUnsafeDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCsp","ngCspDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngSubmit","ngSubmitDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngView","ngViewDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","required","requiredDirective","ngRequired","ngValue","ngValueDirective","ngAttributeAliasDirectives","ngEventDirectives","$anchorScroll","$AnchorScrollProvider","$browser","$BrowserProvider","$cacheFactory","$CacheFactoryProvider","$controller","$ControllerProvider","$document","$DocumentProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$interpolate","$InterpolateProvider","$http","$HttpProvider","$httpBackend","$HttpBackendProvider","$location","$LocationProvider","$log","$LogProvider","$parse","$ParseProvider","$route","$RouteProvider","$routeParams","$RouteParamsProvider","$rootScope","$RootScopeProvider","$q","$QProvider","$sniffer","$SnifferProvider","$templateCache","$TemplateCacheProvider","$timeout","$TimeoutProvider","$window","$WindowProvider","jqNextId","jqId","camelCase","SPECIAL_CHARS_REGEXP","_","offset","toUpperCase","MOZ_HACK_REGEXP","dispatchThis","removePatch","set","setIndex","setLength","childIndex","childLength","children","fireEvent","shift","triggerHandler","originalJqFn","$original","div","createElement","innerHTML","removeChild","firstChild","JQLiteAddNodes","childNodes","remove","JQLiteClone","cloneNode","JQLiteDealoc","JQLiteRemoveData","JQLiteUnbind","type","events","JQLiteExpandoStore","handle","eventHandler","removeEventListenerFn","expandoId","jqName","expandoStore","jqCache","$destroy","JQLiteData","isSetter","keyDefined","isSimpleGetter","JQLiteHasClass","selector","JQLiteRemoveClass","cssClasses","cssClass","JQLiteAddClass","root","JQLiteController","JQLiteInheritedData","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","createEventHandler","event","preventDefault","returnValue","stopPropagation","cancelBubble","target","srcElement","defaultPrevented","prevent","isDefaultPrevented","msie","elem","hashKey","objType","HashMap","put","HashQueueMap","annotate","$inject","fnText","argDecl","last","STRIP_COMMENTS","FN_ARGS","FN_ARG_SPLIT","FN_ARG","all","underscore","modulesToLoad","supportObject","delegate","provider_","providerInjector","instantiate","$get","providerCache","providerSuffix","factoryFn","$injector","instanceCache","decorator","serviceName","decorFn","origProvider","get","orig$get","origInstance","instanceInjector","$delegate","loadModules","loadedModules","moduleFn","ii","invokeArgs","message","createInternalInjector","cache","getService","INSTANTIATING","path","locals","Type","instance","returnedValue","Constructor","servicename","autoScrollingEnabled","disableAutoScrolling","getFirstAnchor","result","scroll","elm","hash","scrollIntoView","getElementsByName","scrollTo","Browser","completeOutstandingRequest","outstandingRequestCount","outstandingRequestCallbacks","pop","error","startPoller","interval","setTimeout","check","pollFns","pollFn","pollTimeout","fireUrlChange","lastBrowserUrl","url","urlChangeListeners","listener","rawDocument","history","clearTimeout","pendingDeferIds","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","callback","addPollFn","href","baseElement","replaceState","pushState","urlChangeInit","onUrlChange","hashchange","baseHref","lastCookies","lastCookieString","cookiePath","cookies","cookieLength","cookieArray","cookie","unescape","substring","escape","warn","defer","delay","timeoutId","cancel","deferId","cacheFactory","cacheId","options","refresh","entry","freshEnd","staleEnd","n","link","p","nextEntry","prevEntry","caches","size","stats","id","capacity","Number","MAX_VALUE","lruHash","lruEntry","removeAll","destroy","info","hasDirectives","Suffix","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","MULTI_ROOT_TEMPLATE_ERROR","urlSanitizationWhitelist","registerDirective","directiveFactory","directives","priority","require","restrict","regexp","$compileNodes","transcludeFn","maxPriority","nodeValue","wrap","compositeLinkFn","compileNodes","cloneConnectFn","$linkNode","eq","safeAddClass","$element","addClass","nodeList","$rootElement","boundTranscludeFn","nodeLinkFn","childLinkFn","childScope","childTranscludeFn","stableNodeList","linkFns","$new","transclude","cloneFn","transcludeScope","$$transcluded","attrs","linkFnFound","Attributes","collectDirectives","applyDirectivesToNode","terminal","attrsMap","$attr","addDirective","directiveNormalize","nodeName_","nName","nAttrs","j","jj","specified","getAttribute","addAttrInterpolateDirective","addTextInterpolateDirective","byPriority","compileNode","templateAttrs","jqCollection","addLinkFns","pre","post","preLinkFns","postLinkFns","getControllers","retrievalMethod","optional","linkNode","linkFn","$$element","newIsolateScopeDirective","LOCAL_REGEXP","parentScope","$parent","definiton","scopeName","lastValue","parentGet","parentSet","attrName","mode","$$isolateBindings","$observe","$$observers","$$scope","assign","NON_ASSIGNABLE_MODEL_EXPRESSION","parentValue","controllerDirectives","$scope","$attrs","$transclude","directiveName","$template","transcludeDirective","directiveValue","terminalPriority","newScopeDirective","templateDirective","$compileNode","assertNoDuplicate","createComment","replaceWith","contents","template","denormalizeTemplate","newTemplateAttrs","mergeTemplateAttributes","templateUrl","compileTemplateUrl","Math","max","tDirectives","srcAttr","dstAttr","$set","beforeTemplateNodeLinkFn","tAttrs","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","linkQueue","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","success","content","tempTemplateAttrs","linkRootElement","beforeTemplateLinkNode","response","code","headers","ignoreChildLinkFn","rootElement","b","what","previousDirective","text","interpolateFn","bindings","$$inter","newNode","oldNode","parentNode","replaceChild","expando","$normalize","writeAttr","normalizedVal","booleanKey","prop","urlSanitizationNode","setAttribute","removeAttr","listeners","startSymbol","endSymbol","PREFIX_REGEXP","controllers","register","getter","mustHaveExpression","endIndex","exp","hasInterpolation","startSymbolLength","endSymbolLength","part","encodePath","segments","matchUrl","URL_MATCH","protocol","host","port","DEFAULT_PORTS","search","$$protocol","$$host","$$port","composeProtocolHostPort","pathPrefixFromBase","basePath","lastIndexOf","convertToHtml5Url","hashPrefix","convertToHashbangUrl","pathPrefix","LocationUrl","appBaseUrl","$$parse","newAbsoluteUrl","$$path","$$search","$$hash","$$compose","$$url","$$absUrl","$$rewriteAppUrl","absoluteLinkUrl","LocationHashbangUrl","HASH_MATCH","LocationHashbangInHtml5Url","baseExtra","locationGetter","property","locationGetterSetter","preprocess","html5Mode","prefix","afterLocationChange","oldUrl","$broadcast","absUrl","initUrl","initUrlParts","ctrlKey","metaKey","which","absHref","rewrittenUrl","newUrl","$$phase","$digest","changeCounter","currentReplace","$$replace","formatError","stack","sourceURL","line","consoleLog","console","logFn","log","arg1","arg2","lex","csp","is","chars","ch","was","lastCh","peek","isWhitespace","isIdent","isExpOperator","throwError","start","end","readNumber","number","peekCh","tokens","readIdent","lastDot","peekIndex","methodName","ident","token","OPERATORS","getterFn","setter","readString","quote","string","rawString","hex","rep","ESCAPE","ch2","fn2","parser","msg","peekToken","e1","e2","e3","e4","t","expect","consume","unaryFn","right","binaryFn","left","statements","filterChain","statement","_filterChain","expression","argsFn","fnInvoke","assignment","_assignment","logicalOR","logicalAND","equality","relational","additive","multiplicative","unary","primary","ZERO","arrayDeclaration","object","next","functionCall","objectIndex","fieldAccess","_fieldAccess","field","_objectIndex","indexFn","o","then","$$v","_functionCall","contextGetter","fnPtr","elementFns","keyValues","setValue","propertyObj","bindFnToScope","lastInstance","len","cspSafeGetterFn","key0","key1","key2","key3","key4","promise","pathVal","getterFnCache","pathKeys","pathKeysLength","Function","qFactory","nextTick","exceptionHandler","defaultCallback","defaultErrback","reject","promises","deferred","ref","resolve","pending","errback","wrappedCallback","wrappedErrback","when","done","routes","route","reloadOnSearch","redirectPath","redirectTo","otherwise","params","switchRouteMatcher","on","paramMatch","regex","re","lastMatchedIndex","lastIndex","updateRoute","parseRoute","current","$$route","pathParams","forceReload","interpolate","values","segment","segmentMatch","reload","$on","TTL","digestTtl","Scope","$id","$$watchers","$$nextSibling","$$prevSibling","$$childHead","$$childTail","$root","$$destroyed","$$asyncQueue","$$listeners","beginPhase","phase","clearPhase","compileToFn","initWatchVal","isolate","Child","child","watchExp","objectEquality","watcher","listenFn","newVal","oldVal","watch","watchers","asyncQueue","dirty","logIdx","logMsg","ttl","watchLog","$eval","isNaN","expr","namedListeners","$emit","empty","targetScope","listenerArgs","currentScope","eventSupport","android","navigator","userAgent","documentMode","hasEvent","divElm","parseHeaders","parsed","headersGetter","headersObj","transformData","fns","isSuccess","status","JSON_START","JSON_END","PROTECTION_PREFIX","$config","defaults","transformResponse","transformRequest","d","common","Accept","X-Requested-With","Content-Type","providerResponseInterceptors","responseInterceptors","resp","respTransformFn","reqTransformFn","defHeaders","reqHeaders","X-XSRF-TOKEN","reqData","sendReq","interceptor","createShortMethods","createShortMethodsWithData","headersString","resolvePromise","removePendingReq","idx","pendingRequests","cachedResp","buildUrl","defaultCache","timeout","withCredentials","createHttpBackend","XHR","$browserDefer","locationProtocol","jsonpReq","doneWrapper","body","onreadystatechange","readyState","onload","onerror","appendChild","completeRequest","callbackId","xhr","open","setRequestHeader","responseHeaders","getAllResponseHeaders","simpleHeaders","header","getResponseHeader","responseText","send","abort","NUMBER_FORMATS","DECIMAL_SEP","GROUP_SEP","PATTERNS","minInt","minFrac","maxFrac","posPre","posSuf","negPre","negSuf","gSize","lgSize","CURRENCY_SYM","DATETIME_FORMATS","MONTH","SHORTMONTH","DAY","SHORTDAY","AMPMS","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","pluralCat","num","invokeApply","cleanup","skipApply","deferreds","$$timeoutId","suffix","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","predicates","objKey","filtered","$locale","formats","amount","currencySymbol","formatNumber","fractionSize","pattern","groupSep","decimalSep","isFinite","isNegative","abs","numStr","formatedText","hasExponent","fractionLen","min","pow","round","fraction","whole","lgroup","group","padNumber","digits","neg","dateGetter","date","dateStrGetter","shortForm","timeZoneGetter","zone","getTimezoneOffset","paddedZone","ampmGetter","getHours","jsonStringToDate","R_ISO8601_STR","tzHour","tzMin","setUTCFullYear","setUTCHours","format","NUMBER_STRING","DATE_FORMATS_SPLIT","DATE_FORMATS","limit","Array","out","sortPredicate","reverseOrder","comparator","comp","reverseComparator","descending","compare","v1","v2","predicate","arrayCopy","ngDirective","FormController","toggleValidCss","isValid","validationErrorKey","removeClass","INVALID_CLASS","VALID_CLASS","parentForm","nullFormCtrl","invalidCount","errors","$error","$name","$dirty","$pristine","$valid","$invalid","$addControl","PRISTINE_CLASS","control","$removeControl","queue","validationToken","$setValidity","$setDirty","DIRTY_CLASS","isEmpty","textInputType","ctrl","$viewValue","$setViewValue","deferListener","keyCode","$render","patternValidator","ngPattern","validate","patternObj","$formatters","$parsers","ngMinlength","minlength","minLengthValidator","ngMaxlength","maxlength","maxLengthValidator","numberInputType","NUMBER_REGEXP","parseFloat","minValidator","maxValidator","urlInputType","urlValidator","URL_REGEXP","emailInputType","emailValidator","EMAIL_REGEXP","radioInputType","checked","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","classDirective","ngClassWatchAction","$index","classVal","k","old$index","mod","manualLowercase","s","manualUppercase","full","major","minor","dot","codeName","addEventListenerFn","addEventListener","attachEvent","removeEventListener","detachEvent","ready","trigger","fired","removeAttribute","hasClass","css","currentStyle","lowercasedName","getNamedItem","ret","innerText","textContent","$dv","removeData","dealoc","bindFn","eventFns","contains","compareDocumentPosition","adown","documentElement","bup","eventmap","mouseleave","mouseenter","related","relatedTarget","unbind","replaceNode","insertBefore","nextSibling","prepend","wrapNode","after","newElement","toggleClass","condition","nextElementSibling","getElementsByTagName","eventName","PATH_MATCH","http","https","ftp","paramValue","null","true","false","+","-","*","/","%","^","=","==","!=","<",">","<=",">=","&&","||","&","|","!","f","r","'","\"","XMLHttpRequest","ActiveXObject","yyyy","yy","y","MMMM","MMM","MM","M","dd","HH","H","hh","mm","m","ss","EEEE","EEE","Z","propName","normalized","formDirectiveFactory","isNgForm","formElement","action","preventDefaultListener","parentFormCtrl","alias","inputType","email","radio","checkbox","hidden","button","submit","reset","NgModelController","NaN","$modelValue","$viewChangeListeners","ngModelGet","ngModelSet","formatters","ctrls","modelCtrl","formCtrl","validator","viewValue","CONSTANT_VALUE_REGEXP","tpl","tplAttr","$event","$compile","srcExp","onloadExp","autoScrollExp","autoscroll","clearContent","thisChangeId","BRACE","numberExp","count","whenExp","whens","whensExpFns","linker","iterStartElement","lhs","rhs","valueIdent","keyIdent","lastOrder","arrayBound","collection","cursor","nextOrder","$first","$last","$middle","newStyles","oldStyles","cases","selectedTransclude","selectedElement","selectedScope","watchExpr","change","caseElement","destroyLastScope","lastScope","update","NG_OPTIONS_REGEXP","nullModelCtrl","nullOption","unknownOption","optionsMap","ngModelCtrl","databound","init","ngModelCtrl_","nullOption_","unknownOption_","addOption","removeOption","hasOption","renderUnknownOption","unknownVal","Single","selectElement","selectCtrl","emptyOption","Multiple","lastView","items","selected","Options","render","optionGroupName","optionGroup","existingParent","existingOptions","existingOption","groupLength","groupIndex","lastElement","label","optionGroups","optionGroupNames","modelValue","valuesFn","keyName","selectedSet","multiple","valueName","groupByFn","displayFn","optionGroupsCache","optGroupTemplate","optionTemplate","optionsExp","optionElement","requiredValidator","nullSelectCtrl","selectCtrlName","con","dummy","properties","methods","isArraylike","createOptions","optionsCache","each","core_rnotwhite","flag","Data","defineProperty","random","dataAttr","rmultiDash","rbrace","data_user","returnTrue","returnFalse","safeActiveElement","activeElement","err","sibling","cur","dir","winnow","qualifier","not","grep","isSimple","core_indexOf","manipulationTarget","ownerDocument","disableScript","restoreScript","rscriptTypeMasked","setGlobalEval","elems","refElements","l","data_priv","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","hasData","access","add","getAll","tag","merge","fixInput","manipulation_rcheckableType","defaultValue","vendorPropName","capName","origName","cssPrefixes","isHidden","el","getStyles","getComputedStyle","showHide","show","display","css_defaultDisplay","setPositiveNumber","subtract","matches","rnumsplit","augmentWidthOrHeight","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","support","boxSizing","curCSS","rnumnonpx","boxSizingReliable","doc","elemdisplay","actualDisplay","iframe","appendTo","contentWindow","contentDocument","write","close","detach","buildParams","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","inspectPrefiltersOrTransports","originalOptions","jqXHR","inspect","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","mimeType","converters","ajaxConvert","conv2","conv","tmp","prev","responseFields","dataFilter","state","createFxNow","fxNow","now","createTween","animation","tween","tweeners","Animation","stopped","animationPrefilters","Deferred","always","tick","currentTime","remaining","startTime","duration","temp","percent","tweens","notifyWith","resolveWith","props","opts","specialEasing","originalProperties","Tween","easing","stop","gotoEnd","rejectWith","propFilter","fx","timer","anim","progress","complete","fail","hooks","cssHooks","expand","defaultPrefilter","toggle","oldfire","orig","dataShow","_queueHooks","unqueued","fire","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","hide","genFx","includeWidth","height","opacity","width","getWindow","defaultView","rootjQuery","readyList","core_strundefined","docElem","_jQuery","_$","class2type","core_deletedIds","core_version","core_concat","core_push","core_slice","core_toString","core_hasOwn","core_trim","core_pnum","rquickExpr","rsingleTag","rmsPrefix","rdashAlpha","fcamelCase","completed","jquery","parseHTML","isPlainObject","makeArray","toArray","pushStack","prevObject","first","copyIsArray","noConflict","isReady","readyWait","holdReady","hold","wait","off","isNumeric","keepScripts","scripts","buildFragment","parseJSON","parseXML","xml","DOMParser","parseFromString","globalEval","indirect","eval","head","arr","inArray","second","inv","retVal","guid","proxy","chainable","emptyGet","raw","bulk","swap","old","Sizzle","seed","groups","nid","newContext","newSelector","preferredDoc","setDocument","documentIsHTML","getElementsByClassName","qsa","rbuggyQSA","tokenize","rescape","toSelector","rsibling","qsaError","rtrim","createCache","Expr","cacheLength","markFunction","assert","addHandle","handler","attrHandle","siblingCheck","diff","sourceIndex","MAX_NEGATIVE","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","parseOnly","matched","soFar","preFilters","cached","tokenCache","preFilter","rcomma","rcombinators","matchExpr","addCombinator","matcher","combinator","base","checkNonElements","doneName","outerCache","dirkey","dirruns","cachedruns","elementMatcher","matchers","condense","unmatched","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","preMap","postMap","preexisting","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","matcherCachedRuns","bySet","byElement","superMatcher","expandContext","setMatched","matchedCount","outermost","contextBackup","dirrunsUnique","uniqueSort","contexts","getById","runescape","funescape","getText","isXML","sortInput","rbuggyMatches","classCache","compilerCache","hasDuplicate","sortOrder","strundefined","hasOwn","push_native","booleans","whitespace","characterEncoding","identifier","pseudos","rattributeQuotes","rpseudo","ridentifier","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rnative","rinputs","rheader","escaped","escapedWhitespace","high","els","top","attrId","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","sortDetached","aup","ap","bp","duplicates","detectDuplicates","sortStable","selectors","createPseudo"," ","~","excess","unquoted","nodeNameSelector","operator","simple","forward","ofType","nodeIndex","useCache","lastChild","pseudo","has","lang","elemLang","focus","hasFocus","tabIndex","enabled","disabled","selectedIndex","even","odd","lt","gt","file","password","image","filters","div1","unique","isXMLDoc","Callbacks","memory","firing","firingStart","firingLength","firingIndex","once","stopOnFalse","disable","lock","locked","fireWith","tuples","newDefer","tuple","returned","notify","pipe","stateString","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","fragment","createDocumentFragment","opt","checkOn","optSelected","reliableMarginRight","pixelPosition","noCloneChecked","optDisabled","radioValue","checkClone","focusinBubbles","backgroundClip","clearCloneStyle","container","marginDiv","divReset","cssText","zoom","marginRight","accepts","owner","descriptor","unlock","defineProperties","stored","camel","discard","acceptData","_data","_removeData","camelKey","dequeue","startLength","time","speeds","clearQueue","nodeHook","boolHook","rclass","rreturn","rfocusable","removeProp","propFix","classes","clazz","proceed","stateVal","classNames","valHooks","one","optionSet","nType","attrHooks","attrNames","for","class","notxml","propHooks","hasAttribute","rkeyEvent","rmouseEvent","rfocusMorph","rtypenamespace","global","types","handleObjIn","eventHandle","handleObj","special","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","onlyHandlers","bubbleType","ontype","eventPath","Event","isTrigger","namespace_re","noBubble","parentWindow","isPropagationStopped","_default","fix","handlerQueue","delegateTarget","preDispatch","currentTarget","isImmediatePropagationStopped","postDispatch","sel","fixHooks","keyHooks","original","charCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","load","blur","click","beforeunload","simulate","bubble","isSimulated","getPreventDefault","timeStamp","stopImmediatePropagation","attaches","origFn","rparentsprev","rneedsContext","guaranteedUnique","targets","closest","prevAll","addBack","parents","parentsUntil","until","nextAll","nextUntil","prevUntil","siblings","reverse","truncate","rxhtmlTag","rtagName","rhtml","rnoInnerhtml","rchecked","rscriptType","rcleanScript","wrapMap","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","createTextNode","domManip","before","keepData","cleanData","dataAndEvents","deepDataAndEvents","allowIntersection","hasScripts","iNoClone","_evalUrl","prependTo","insertAfter","replaceAll","insert","srcElements","destElements","inPage","selection","nodes","ajax","async","throws","wrapAll","firstElementChild","wrapInner","unwrap","rdisplayswap","rmargin","rrelNum","BODY","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","computed","cssNumber","columnCount","fillOpacity","lineHeight","order","orphans","widows","zIndex","cssProps","float","_computed","minWidth","maxWidth","getPropertyValue","visible","margin","padding","border","expanded","r20","rCRLF","rsubmitterTypes","rsubmittable","serialize","param","serializeArray","hover","fnOver","fnOut","undelegate","ajaxLocParts","ajaxLocation","ajax_nonce","ajax_rquery","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","rurl","_load","prefilters","allTypes","active","lastModified","etag","isLocal","processData","contentType","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","nativeStatusText","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","requestHeaders","requestHeadersNames","strAbort","lname","overrideMimeType","finalText","crossDomain","hasContent","beforeSend","getJSON","getScript","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","xhrSupported","xhrSuccessStatus",1223,"xhrId","xhrCallbacks","cors","username","xhrFields","timerId","rfxnum","rrun","unit","scale","maxIterations","tweener","prefilter","eased","step","cssFn","speed","animate","fadeTo","to","optall","doAnimation","finish","stopQueue","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","linear","swing","cos","PI","clearInterval","slow","fast","animated","setOffset","win","box","getBoundingClientRect","pageYOffset","pageXOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","offsetParent","parentOffset","Height","Width","defaultExtra","funcName","andSelf","exports","define","amd","findEndEventName","endEventNames","transElement","$transition","endEventName","transitionEndHandler","transitionEndEventNames","WebkitTransition","MozTransition","OTransition","transition","animationEndEventNames","transitionEndEventName","animationEndEventName","fixUpHeight","isCollapsed","initialAnimSkip","scrollHeight","collapse","currentTransition","doTransition","closeOthers","accordionConfig","openGroup","isOpen","addGroup","groupScope","that","removeGroup","heading","setHeading","accordionCtrl","getIsOpen","setIsOpen","accordionGroupCtrl","accordionTransclude","iElement","iAttrs","closeable","activeClass","toggleEvent","buttonConfig","btnRadio","btnCheckboxTrue","btnCheckboxFalse","restartTimer","go","isPlaying","pause","currentTimeout","slides","currentIndex","currentSlide","nextSlide","direction","goNext","noTransition","slide","entering","leaving","$currentTransition","transitionDone","nextIndex","indexOfSlide","newIndex","isActive","play","noPause","addSlide","removeSlide","carouselCtrl","getActive","setActive","parentActive","dayFormat","monthFormat","yearFormat","dayHeaderFormat","dayTitleFormat","monthTitleFormat","showWeeks","startingDay","yearRange","datepickerConfig","model","dateDisabled","updateCalendar","rows","labels","title","updateShowWeekNumbers","showWeekNumbers","date1","date2","getFullYear","getMonth","getDate","isDisabled","minDate","maxDate","day","month","year","dayHeader","dayTitle","monthTitle","refill","arrays","getDaysInMonth","fill","addDays","dt","isCurrentMonth","days","isCurrent","isSelected","setDate","lastDate","difference","getDay","numDisplayedFromPreviousMonth","months","years","olddt","setFullYear","setMonth","move","toggleMode","getWeekNumber","row","setHours","ceil","dialogModule","dialog","buttons","res","backdrop","dialogClass","backdropClass","transitionClass","triggerClass","backdropFade","dialogFade","keyboard","backdropClick","globalOptions","activeBackdrops","Dialog","_open","backdropEl","modalEl","handledEscapeKey","handleBackDropClick","handleLocationChange","_loadResolves","_addElementsToDom","_bindEvents","removeTriggerClass","onCloseComplete","_onCloseComplete","fadingElements","_getFadingElements","_unbindEvents","_removeElementsFromDom","templatePromise","messageBox","openElement","closeMenu","elementWasOpen","$dialog","setClosed","uiOptions","bsOptions","shownExpr","modal","isShown","noPrevious","currentPage","noNext","numPages","page","selectPage","onSelectPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","maxSize","makePage","pages","startPage","endPage","isMaxSized","floor","previousPageSet","nextPageSet","previousPage","nextPage","firstPage","lastPage","align","isPrevious","isNext","previous","getStyle","cssprop","isStaticPositioned","mouseX","mouseY","parentOffsetEl","docDomEl","elBCR","offsetParentBCR","offsetParentEl","boundingClientRect","mouse","x","defaultOptions","placement","popupDelay","triggerMap","setTriggers","triggers","$position","defaultTriggerShow","startSym","endSym","toggleTooltipBind","tt_isOpen","hideTooltipBind","showTooltipBind","tt_popupDelay","popupTimeout","ttWidth","ttHeight","ttPosition","tt_content","transitionTimeout","tooltip","appendToBody","$body","tt_placement","mousePos","tt_animation","tt_title","$tooltip","autoType","stackedTypes","progressConfig","getStackedType","makeBar","newBar","oldBar","newValue","oldValue","from","addBar","bar","bars","totalPercent","clearBars","onFull","onEmpty","ratingConfig","maxRange","range","rate","readonly","enter","tabs","tab","addTab","removeTab","newActiveIndex","vertical","onSelect","tabsetCtrl","tagName","headingElement","contentElement","tabContentTransclude","hourStep","minuteStep","showMeridian","meridians","readonlyInput","mousewheel","padFilter","timepickerConfig","getScopeHours","hours","valid","meridian","refreshTemplate","keyboardChange","validHours","minutes","getMinutes","validMinutes","addMinutes","setTime","inputs","hoursInputEl","minutesInputEl","isScrollingUp","detail","wheelDelta","incrementHours","decrementHours","incrementMinutes","decrementMinutes","updateHours","updateMinutes","setMinutes","timestamp","toggleMeridian","TYPEAHEAD_REGEXP","itemName","viewMapper","modelMapper","typeaheadParser","HOT_KEYS","originalScope","minSearch","typeaheadMinLength","waitTime","typeaheadWaitMs","parserResult","typeahead","isEditable","typeaheadEditable","isLoadingSetter","typeaheadLoading","onSelectCallback","typeaheadOnSelect","popUpEl","query","resetMatches","activeIdx","getMatchesAsync","inputValue","item","$item","$model","$label","matchIdx","selectActive","selectMatch","escapeRegexp","queryToEscape","matchItem","makeMap","htmlParser","parseStartTag","rest","blockElements","inlineElements","parseEndTag","optionalEndTagElements","voidElements","ATTR_REGEXP","doubleQuotedValue","singleQoutedValue","unqoutedValue","decodeEntities","specialElements","COMMENT_REGEXP","CDATA_REGEXP","comment","BEGING_END_TAGE_REGEXP","END_TAG_REGEXP","BEGIN_TAG_REGEXP","START_TAG_REGEXP","hiddenPre","encodeEntities","NON_ALPHANUMERIC_REGEXP","htmlSanitizeWriter","buf","ignore","validElements","lkey","validAttrs","uriAttrs","URI_REGEXP","$sanitize","optionalEndTagBlockElements","optionalEndTagInlineElements","ngBindHtml","LINKY_URL_REGEXP","MAILTO_REGEXP","writer","Route","urlParams","ResourceFactory","paramDefaults","actions","extractParams","actionParams","ids","Resource","DEFAULT_ACTIONS","hasBody","a1","a2","a3","a4","additionalParamDefaults","save","delete","encodedVal","urlParam","leadingSlashes","tail","browserCookies","updated","lastBrowserCookies","runEval","currentCookies","$cookies","chart","$elm","draw","dataTable","google","visualization","DataTable","chartWrapperArgs","chartType","view","containerId","chartWrapper","ChartWrapper","addListener","displayed","setChartType","setDataTable","setView","setOptions"],"mappings":"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","sourcesContent":["/**\n * @license AngularJS v1.0.7\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, document, undefined) {\n'use strict';\n\n////////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.lowercase\n * @function\n *\n * @description Converts the specified string to lowercase.\n * @param {string} string String to be converted to lowercase.\n * @returns {string} Lowercased string.\n */\nvar lowercase = function(string){return isString(string) ? string.toLowerCase() : string;};\n\n\n/**\n * @ngdoc function\n * @name angular.uppercase\n * @function\n *\n * @description Converts the specified string to uppercase.\n * @param {string} string String to be converted to uppercase.\n * @returns {string} Uppercased string.\n */\nvar uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};\n\n\nvar manualLowercase = function(s) {\n  return isString(s)\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n      : s;\n};\nvar manualUppercase = function(s) {\n  return isString(s)\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n      : s;\n};\n\n\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n// with correct but slower alternatives.\nif ('i' !== 'I'.toLowerCase()) {\n  lowercase = manualLowercase;\n  uppercase = manualUppercase;\n}\n\n\nvar /** holds major version number for IE or NaN for real browsers */\n    msie              = int((/msie (\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]),\n    jqLite,           // delay binding since jQuery could be loaded after us.\n    jQuery,           // delay binding\n    slice             = [].slice,\n    push              = [].push,\n    toString          = Object.prototype.toString,\n\n    /** @name angular */\n    angular           = window.angular || (window.angular = {}),\n    angularModule,\n    nodeName_,\n    uid               = ['0', '0', '0'];\n\n\n/**\n * @private\n * @param {*} obj\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments, ...)\n */\nfunction isArrayLike(obj) {\n  if (!obj || (typeof obj.length !== 'number')) return false;\n\n  // We have on object which has length property. Should we treat it as array?\n  if (typeof obj.hasOwnProperty != 'function' &&\n      typeof obj.constructor != 'function') {\n    // This is here for IE8: it is a bogus object treat it as array;\n    return true;\n  } else  {\n    return obj instanceof JQLite ||                      // JQLite\n           (jQuery && obj instanceof jQuery) ||          // jQuery\n           toString.call(obj) !== '[object Object]' ||   // some browser native object\n           typeof obj.callee === 'function';              // arguments (on IE8 looks like regular obj)\n  }\n}\n\n\n/**\n * @ngdoc function\n * @name angular.forEach\n * @function\n *\n * @description\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`\n * is the value of an object property or an array element and `key` is the object property key or\n * array element index. Specifying a `context` for the function is optional.\n *\n * Note: this function was previously known as `angular.foreach`.\n *\n   <pre>\n     var values = {name: 'misko', gender: 'male'};\n     var log = [];\n     angular.forEach(values, function(value, key){\n       this.push(key + ': ' + value);\n     }, log);\n     expect(log).toEqual(['name: misko', 'gender:male']);\n   </pre>\n *\n * @param {Object|Array} obj Object to iterate over.\n * @param {Function} iterator Iterator function.\n * @param {Object=} context Object to become context (`this`) for the iterator function.\n * @returns {Object|Array} Reference to `obj`.\n */\nfunction forEach(obj, iterator, context) {\n  var key;\n  if (obj) {\n    if (isFunction(obj)){\n      for (key in obj) {\n        if (key != 'prototype' && key != 'length' && key != 'name' && obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    } else if (obj.forEach && obj.forEach !== forEach) {\n      obj.forEach(iterator, context);\n    } else if (isArrayLike(obj)) {\n      for (key = 0; key < obj.length; key++)\n        iterator.call(context, obj[key], key);\n    } else {\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction sortedKeys(obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n  return keys.sort();\n}\n\nfunction forEachSorted(obj, iterator, context) {\n  var keys = sortedKeys(obj);\n  for ( var i = 0; i < keys.length; i++) {\n    iterator.call(context, obj[keys[i]], keys[i]);\n  }\n  return keys;\n}\n\n\n/**\n * when using forEach the params are value, key, but it is often useful to have key, value.\n * @param {function(string, *)} iteratorFn\n * @returns {function(*, string)}\n */\nfunction reverseParams(iteratorFn) {\n  return function(value, key) { iteratorFn(key, value) };\n}\n\n/**\n * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric\n * characters such as '012ABC'. The reason why we are not using simply a number counter is that\n * the number string gets longer over time, and it can also overflow, where as the nextId\n * will grow much slower, it is a string, and it will never overflow.\n *\n * @returns an unique alpha-numeric string\n */\nfunction nextUid() {\n  var index = uid.length;\n  var digit;\n\n  while(index) {\n    index--;\n    digit = uid[index].charCodeAt(0);\n    if (digit == 57 /*'9'*/) {\n      uid[index] = 'A';\n      return uid.join('');\n    }\n    if (digit == 90  /*'Z'*/) {\n      uid[index] = '0';\n    } else {\n      uid[index] = String.fromCharCode(digit + 1);\n      return uid.join('');\n    }\n  }\n  uid.unshift('0');\n  return uid.join('');\n}\n\n\n/**\n * Set or clear the hashkey for an object.\n * @param obj object \n * @param h the hashkey (!truthy to delete the hashkey)\n */\nfunction setHashKey(obj, h) {\n  if (h) {\n    obj.$$hashKey = h;\n  }\n  else {\n    delete obj.$$hashKey;\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.extend\n * @function\n *\n * @description\n * Extends the destination object `dst` by copying all of the properties from the `src` object(s)\n * to `dst`. You can specify multiple `src` objects.\n *\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nfunction extend(dst) {\n  var h = dst.$$hashKey;\n  forEach(arguments, function(obj){\n    if (obj !== dst) {\n      forEach(obj, function(value, key){\n        dst[key] = value;\n      });\n    }\n  });\n\n  setHashKey(dst,h);\n  return dst;\n}\n\nfunction int(str) {\n  return parseInt(str, 10);\n}\n\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, {prototype:parent}))(), extra);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.noop\n * @function\n *\n * @description\n * A function that performs no operations. This function can be useful when writing code in the\n * functional style.\n   <pre>\n     function foo(callback) {\n       var result = calculateResult();\n       (callback || angular.noop)(result);\n     }\n   </pre>\n */\nfunction noop() {}\nnoop.$inject = [];\n\n\n/**\n * @ngdoc function\n * @name angular.identity\n * @function\n *\n * @description\n * A function that returns its first argument. This function is useful when writing code in the\n * functional style.\n *\n   <pre>\n     function transformer(transformationFn, value) {\n       return (transformationFn || identity)(value);\n     };\n   </pre>\n */\nfunction identity($) {return $;}\nidentity.$inject = [];\n\n\nfunction valueFn(value) {return function() {return value;};}\n\n/**\n * @ngdoc function\n * @name angular.isUndefined\n * @function\n *\n * @description\n * Determines if a reference is undefined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value){return typeof value == 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDefined\n * @function\n *\n * @description\n * Determines if a reference is defined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value){return typeof value != 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isObject\n * @function\n *\n * @description\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value){return value != null && typeof value == 'object';}\n\n\n/**\n * @ngdoc function\n * @name angular.isString\n * @function\n *\n * @description\n * Determines if a reference is a `String`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value){return typeof value == 'string';}\n\n\n/**\n * @ngdoc function\n * @name angular.isNumber\n * @function\n *\n * @description\n * Determines if a reference is a `Number`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value){return typeof value == 'number';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDate\n * @function\n *\n * @description\n * Determines if a value is a date.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value){\n  return toString.apply(value) == '[object Date]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isArray\n * @function\n *\n * @description\n * Determines if a reference is an `Array`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nfunction isArray(value) {\n  return toString.apply(value) == '[object Array]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isFunction\n * @function\n *\n * @description\n * Determines if a reference is a `Function`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value){return typeof value == 'function';}\n\n\n/**\n * Checks if `obj` is a window object.\n *\n * @private\n * @param {*} obj Object to check\n * @returns {boolean} True if `obj` is a window obj.\n */\nfunction isWindow(obj) {\n  return obj && obj.document && obj.location && obj.alert && obj.setInterval;\n}\n\n\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n\nfunction isFile(obj) {\n  return toString.apply(obj) === '[object File]';\n}\n\n\nfunction isBoolean(value) {\n  return typeof value == 'boolean';\n}\n\n\nfunction trim(value) {\n  return isString(value) ? value.replace(/^\\s*/, '').replace(/\\s*$/, '') : value;\n}\n\n/**\n * @ngdoc function\n * @name angular.isElement\n * @function\n *\n * @description\n * Determines if a reference is a DOM element (or wrapped jQuery element).\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n */\nfunction isElement(node) {\n  return node &&\n    (node.nodeName  // we are a direct element\n    || (node.bind && node.find));  // we have a bind and find method part of jQuery API\n}\n\n/**\n * @param str 'key1,key2,...'\n * @returns {object} in the form of {key1:true, key2:true, ...}\n */\nfunction makeMap(str){\n  var obj = {}, items = str.split(\",\"), i;\n  for ( i = 0; i < items.length; i++ )\n    obj[ items[i] ] = true;\n  return obj;\n}\n\n\nif (msie < 9) {\n  nodeName_ = function(element) {\n    element = element.nodeName ? element : element[0];\n    return (element.scopeName && element.scopeName != 'HTML')\n      ? uppercase(element.scopeName + ':' + element.nodeName) : element.nodeName;\n  };\n} else {\n  nodeName_ = function(element) {\n    return element.nodeName ? element.nodeName : element[0].nodeName;\n  };\n}\n\n\nfunction map(obj, iterator, context) {\n  var results = [];\n  forEach(obj, function(value, index, list) {\n    results.push(iterator.call(context, value, index, list));\n  });\n  return results;\n}\n\n\n/**\n * @description\n * Determines the number of elements in an array, the number of properties an object has, or\n * the length of a string.\n *\n * Note: This function is used to augment the Object type in Angular expressions. See\n * {@link angular.Object} for more information about Angular arrays.\n *\n * @param {Object|Array|string} obj Object, array, or string to inspect.\n * @param {boolean} [ownPropsOnly=false] Count only \"own\" properties in an object\n * @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.\n */\nfunction size(obj, ownPropsOnly) {\n  var size = 0, key;\n\n  if (isArray(obj) || isString(obj)) {\n    return obj.length;\n  } else if (isObject(obj)){\n    for (key in obj)\n      if (!ownPropsOnly || obj.hasOwnProperty(key))\n        size++;\n  }\n\n  return size;\n}\n\n\nfunction includes(array, obj) {\n  return indexOf(array, obj) != -1;\n}\n\nfunction indexOf(array, obj) {\n  if (array.indexOf) return array.indexOf(obj);\n\n  for ( var i = 0; i < array.length; i++) {\n    if (obj === array[i]) return i;\n  }\n  return -1;\n}\n\nfunction arrayRemove(array, value) {\n  var index = indexOf(array, value);\n  if (index >=0)\n    array.splice(index, 1);\n  return value;\n}\n\nfunction isLeafNode (node) {\n  if (node) {\n    switch (node.nodeName) {\n    case \"OPTION\":\n    case \"PRE\":\n    case \"TITLE\":\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @ngdoc function\n * @name angular.copy\n * @function\n *\n * @description\n * Creates a deep copy of `source`, which should be an object or an array.\n *\n * * If no destination is supplied, a copy of the object or array is created.\n * * If a destination is provided, all of its elements (for array) or properties (for objects)\n *   are deleted and then all elements/properties from the source are copied to it.\n * * If  `source` is not an object or array, `source` is returned.\n *\n * Note: this function is used to augment the Object type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {*} source The source that will be used to make a copy.\n *                   Can be any type, including primitives, `null`, and `undefined`.\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\n *     provided, must be of the same type as `source`.\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\n */\nfunction copy(source, destination){\n  if (isWindow(source) || isScope(source)) throw Error(\"Can't copy Window or Scope\");\n  if (!destination) {\n    destination = source;\n    if (source) {\n      if (isArray(source)) {\n        destination = copy(source, []);\n      } else if (isDate(source)) {\n        destination = new Date(source.getTime());\n      } else if (isObject(source)) {\n        destination = copy(source, {});\n      }\n    }\n  } else {\n    if (source === destination) throw Error(\"Can't copy equivalent objects or arrays\");\n    if (isArray(source)) {\n      destination.length = 0;\n      for ( var i = 0; i < source.length; i++) {\n        destination.push(copy(source[i]));\n      }\n    } else {\n      var h = destination.$$hashKey;\n      forEach(destination, function(value, key){\n        delete destination[key];\n      });\n      for ( var key in source) {\n        destination[key] = copy(source[key]);\n      }\n      setHashKey(destination,h);\n    }\n  }\n  return destination;\n}\n\n/**\n * Create a shallow copy of an object\n */\nfunction shallowCopy(src, dst) {\n  dst = dst || {};\n\n  for(var key in src) {\n    if (src.hasOwnProperty(key) && key.substr(0, 2) !== '$$') {\n      dst[key] = src[key];\n    }\n  }\n\n  return dst;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.equals\n * @function\n *\n * @description\n * Determines if two objects or two values are equivalent. Supports value types, arrays and\n * objects.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties pass `===` comparison.\n * * Both values are NaN. (In JavasScript, NaN == NaN => false. But we consider two NaN as equal)\n *\n * During a property comparision, properties of `function` type and properties with names\n * that begin with `$` are ignored.\n *\n * Scope and DOMWindow objects are being compared only by identify (`===`).\n *\n * @param {*} o1 Object or value to compare.\n * @param {*} o2 Object or value to compare.\n * @returns {boolean} True if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n  if (t1 == t2) {\n    if (t1 == 'object') {\n      if (isArray(o1)) {\n        if ((length = o1.length) == o2.length) {\n          for(key=0; key<length; key++) {\n            if (!equals(o1[key], o2[key])) return false;\n          }\n          return true;\n        }\n      } else if (isDate(o1)) {\n        return isDate(o2) && o1.getTime() == o2.getTime();\n      } else {\n        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2)) return false;\n        keySet = {};\n        for(key in o1) {\n          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n          if (!equals(o1[key], o2[key])) return false;\n          keySet[key] = true;\n        }\n        for(key in o2) {\n          if (!keySet[key] &&\n              key.charAt(0) !== '$' &&\n              o2[key] !== undefined &&\n              !isFunction(o2[key])) return false;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n\nfunction concat(array1, array2, index) {\n  return array1.concat(slice.call(array2, index));\n}\n\nfunction sliceArgs(args, startIndex) {\n  return slice.call(args, startIndex || 0);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.bind\n * @function\n *\n * @description\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n * known as [function currying](http://en.wikipedia.org/wiki/Currying).\n *\n * @param {Object} self Context which `fn` should be evaluated in.\n * @param {function()} fn Function to be bound.\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n */\nfunction bind(self, fn) {\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\n    return curryArgs.length\n      ? function() {\n          return arguments.length\n            ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0)))\n            : fn.apply(self, curryArgs);\n        }\n      : function() {\n          return arguments.length\n            ? fn.apply(self, arguments)\n            : fn.call(self);\n        };\n  } else {\n    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\n    return fn;\n  }\n}\n\n\nfunction toJsonReplacer(key, value) {\n  var val = value;\n\n  if (/^\\$+/.test(key)) {\n    val = undefined;\n  } else if (isWindow(value)) {\n    val = '$WINDOW';\n  } else if (value &&  document === value) {\n    val = '$DOCUMENT';\n  } else if (isScope(value)) {\n    val = '$SCOPE';\n  }\n\n  return val;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.toJson\n * @function\n *\n * @description\n * Serializes input into a JSON-formatted string.\n *\n * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\n * @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.\n * @returns {string} Jsonified string representing `obj`.\n */\nfunction toJson(obj, pretty) {\n  return JSON.stringify(obj, toJsonReplacer, pretty ? '  ' : null);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.fromJson\n * @function\n *\n * @description\n * Deserializes a JSON string.\n *\n * @param {string} json JSON string to deserialize.\n * @returns {Object|Array|Date|string|number} Deserialized thingy.\n */\nfunction fromJson(json) {\n  return isString(json)\n      ? JSON.parse(json)\n      : json;\n}\n\n\nfunction toBoolean(value) {\n  if (value && value.length !== 0) {\n    var v = lowercase(\"\" + value);\n    value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');\n  } else {\n    value = false;\n  }\n  return value;\n}\n\n/**\n * @returns {string} Returns the string representation of the element.\n */\nfunction startingTag(element) {\n  element = jqLite(element).clone();\n  try {\n    // turns out IE does not let you set .html() on elements which\n    // are not allowed to have children. So we just ignore it.\n    element.html('');\n  } catch(e) {}\n  // As Per DOM Standards\n  var TEXT_NODE = 3;\n  var elemHtml = jqLite('<div>').append(element).html();\n  try {\n    return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) :\n        elemHtml.\n          match(/^(<[^>]+>)/)[1].\n          replace(/^<([\\w\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\n  } catch(e) {\n    return lowercase(elemHtml);\n  }\n\n}\n\n\n/////////////////////////////////////////////////\n\n/**\n * Parses an escaped url query string into key-value pairs.\n * @returns Object.<(string|boolean)>\n */\nfunction parseKeyValue(/**string*/keyValue) {\n  var obj = {}, key_value, key;\n  forEach((keyValue || \"\").split('&'), function(keyValue){\n    if (keyValue) {\n      key_value = keyValue.split('=');\n      key = decodeURIComponent(key_value[0]);\n      obj[key] = isDefined(key_value[1]) ? decodeURIComponent(key_value[1]) : true;\n    }\n  });\n  return obj;\n}\n\nfunction toKeyValue(obj) {\n  var parts = [];\n  forEach(obj, function(value, key) {\n    parts.push(encodeUriQuery(key, true) + (value === true ? '' : '=' + encodeUriQuery(value, true)));\n  });\n  return parts.length ? parts.join('&') : '';\n}\n\n\n/**\n * We need our custom method because encodeURIComponent is too agressive and doesn't follow\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n * segments:\n *    segment       = *pchar\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriSegment(val) {\n  return encodeUriQuery(val, true).\n             replace(/%26/gi, '&').\n             replace(/%3D/gi, '=').\n             replace(/%2B/gi, '+');\n}\n\n\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method becuase encodeURIComponent is too agressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query       = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriQuery(val, pctEncodeSpaces) {\n  return encodeURIComponent(val).\n             replace(/%40/gi, '@').\n             replace(/%3A/gi, ':').\n             replace(/%24/g, '$').\n             replace(/%2C/gi, ',').\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngApp\n *\n * @element ANY\n * @param {angular.Module} ngApp an optional application\n *   {@link angular.module module} name to load.\n *\n * @description\n *\n * Use this directive to auto-bootstrap an application. Only\n * one directive can be used per HTML document. The directive\n * designates the root of the application and is typically placed\n * at the root of the page.\n *\n * In the example below if the `ngApp` directive would not be placed\n * on the `html` element then the document would not be compiled\n * and the `{{ 1+2 }}` would not be resolved to `3`.\n *\n * `ngApp` is the easiest way to bootstrap an application.\n *\n <doc:example>\n   <doc:source>\n    I can add: 1 + 2 =  {{ 1+2 }}\n   </doc:source>\n </doc:example>\n *\n */\nfunction angularInit(element, bootstrap) {\n  var elements = [element],\n      appElement,\n      module,\n      names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n      NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/;\n\n  function append(element) {\n    element && elements.push(element);\n  }\n\n  forEach(names, function(name) {\n    names[name] = true;\n    append(document.getElementById(name));\n    name = name.replace(':', '\\\\:');\n    if (element.querySelectorAll) {\n      forEach(element.querySelectorAll('.' + name), append);\n      forEach(element.querySelectorAll('.' + name + '\\\\:'), append);\n      forEach(element.querySelectorAll('[' + name + ']'), append);\n    }\n  });\n\n  forEach(elements, function(element) {\n    if (!appElement) {\n      var className = ' ' + element.className + ' ';\n      var match = NG_APP_CLASS_REGEXP.exec(className);\n      if (match) {\n        appElement = element;\n        module = (match[2] || '').replace(/\\s+/g, ',');\n      } else {\n        forEach(element.attributes, function(attr) {\n          if (!appElement && names[attr.name]) {\n            appElement = element;\n            module = attr.value;\n          }\n        });\n      }\n    }\n  });\n  if (appElement) {\n    bootstrap(appElement, module ? [module] : []);\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.bootstrap\n * @description\n * Use this function to manually start up angular application.\n *\n * See: {@link guide/bootstrap Bootstrap}\n *\n * @param {Element} element DOM element which is the root of angular application.\n * @param {Array<String|Function>=} modules an array of module declarations. See: {@link angular.module modules}\n * @returns {AUTO.$injector} Returns the newly created injector for this app.\n */\nfunction bootstrap(element, modules) {\n  var resumeBootstrapInternal = function() {\n    element = jqLite(element);\n    modules = modules || [];\n    modules.unshift(['$provide', function($provide) {\n      $provide.value('$rootElement', element);\n    }]);\n    modules.unshift('ng');\n    var injector = createInjector(modules);\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',\n       function(scope, element, compile, injector) {\n        scope.$apply(function() {\n          element.data('$injector', injector);\n          compile(element)(scope);\n        });\n      }]\n    );\n    return injector;\n  };\n\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n    return resumeBootstrapInternal();\n  }\n\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n  angular.resumeBootstrap = function(extraModules) {\n    forEach(extraModules, function(module) {\n      modules.push(module);\n    });\n    resumeBootstrapInternal();\n  };\n}\n\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\nfunction snake_case(name, separator){\n  separator = separator || '_';\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n    return (pos ? separator : '') + letter.toLowerCase();\n  });\n}\n\nfunction bindJQuery() {\n  // bind to jQuery if present;\n  jQuery = window.jQuery;\n  // reset to jQuery or default to us.\n  if (jQuery) {\n    jqLite = jQuery;\n    extend(jQuery.fn, {\n      scope: JQLitePrototype.scope,\n      controller: JQLitePrototype.controller,\n      injector: JQLitePrototype.injector,\n      inheritedData: JQLitePrototype.inheritedData\n    });\n    JQLitePatchJQueryRemove('remove', true);\n    JQLitePatchJQueryRemove('empty');\n    JQLitePatchJQueryRemove('html');\n  } else {\n    jqLite = JQLite;\n  }\n  angular.element = jqLite;\n}\n\n/**\n * throw error if the argument is falsy.\n */\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw new Error(\"Argument '\" + (name || '?') + \"' is \" + (reason || \"required\"));\n  }\n  return arg;\n}\n\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n  if (acceptArrayAnnotation && isArray(arg)) {\n      arg = arg[arg.length - 1];\n  }\n\n  assertArg(isFunction(arg), name, 'not a function, got ' +\n      (arg && typeof arg == 'object' ? arg.constructor.name || 'Object' : typeof arg));\n  return arg;\n}\n\n/**\n * @ngdoc interface\n * @name angular.Module\n * @description\n *\n * Interface for configuring angular {@link angular.module modules}.\n */\n\nfunction setupModuleLoader(window) {\n\n  function ensure(obj, name, factory) {\n    return obj[name] || (obj[name] = factory());\n  }\n\n  return ensure(ensure(window, 'angular', Object), 'module', function() {\n    /** @type {Object.<string, angular.Module>} */\n    var modules = {};\n\n    /**\n     * @ngdoc function\n     * @name angular.module\n     * @description\n     *\n     * The `angular.module` is a global place for creating and registering Angular modules. All\n     * modules (angular core or 3rd party) that should be available to an application must be\n     * registered using this mechanism.\n     *\n     *\n     * # Module\n     *\n     * A module is a collocation of services, directives, filters, and configuration information. Module\n     * is used to configure the {@link AUTO.$injector $injector}.\n     *\n     * <pre>\n     * // Create a new module\n     * var myModule = angular.module('myModule', []);\n     *\n     * // register a new service\n     * myModule.value('appName', 'MyCoolApp');\n     *\n     * // configure existing services inside initialization blocks.\n     * myModule.config(function($locationProvider) {\n     *   // Configure existing providers\n     *   $locationProvider.hashPrefix('!');\n     * });\n     * </pre>\n     *\n     * Then you can create an injector and load your modules like this:\n     *\n     * <pre>\n     * var injector = angular.injector(['ng', 'MyModule'])\n     * </pre>\n     *\n     * However it's more likely that you'll just use\n     * {@link ng.directive:ngApp ngApp} or\n     * {@link angular.bootstrap} to simplify this process for you.\n     *\n     * @param {!string} name The name of the module to create or retrieve.\n     * @param {Array.<string>=} requires If specified then new module is being created. If unspecified then the\n     *        the module is being retrieved for further configuration.\n     * @param {Function} configFn Optional configuration function for the module. Same as\n     *        {@link angular.Module#config Module#config()}.\n     * @returns {module} new module with the {@link angular.Module} api.\n     */\n    return function module(name, requires, configFn) {\n      if (requires && modules.hasOwnProperty(name)) {\n        modules[name] = null;\n      }\n      return ensure(modules, name, function() {\n        if (!requires) {\n          throw Error('No module: ' + name);\n        }\n\n        /** @type {!Array.<Array.<*>>} */\n        var invokeQueue = [];\n\n        /** @type {!Array.<Function>} */\n        var runBlocks = [];\n\n        var config = invokeLater('$injector', 'invoke');\n\n        /** @type {angular.Module} */\n        var moduleInstance = {\n          // Private state\n          _invokeQueue: invokeQueue,\n          _runBlocks: runBlocks,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#requires\n           * @propertyOf angular.Module\n           * @returns {Array.<string>} List of module names which must be loaded before this module.\n           * @description\n           * Holds the list of modules which the injector will load before the current module is loaded.\n           */\n          requires: requires,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#name\n           * @propertyOf angular.Module\n           * @returns {string} Name of the module.\n           * @description\n           */\n          name: name,\n\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#provider\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} providerType Construction function for creating new instance of the service.\n           * @description\n           * See {@link AUTO.$provide#provider $provide.provider()}.\n           */\n          provider: invokeLater('$provide', 'provider'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#factory\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} providerFunction Function for creating new instance of the service.\n           * @description\n           * See {@link AUTO.$provide#factory $provide.factory()}.\n           */\n          factory: invokeLater('$provide', 'factory'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#service\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} constructor A constructor function that will be instantiated.\n           * @description\n           * See {@link AUTO.$provide#service $provide.service()}.\n           */\n          service: invokeLater('$provide', 'service'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#value\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {*} object Service instance object.\n           * @description\n           * See {@link AUTO.$provide#value $provide.value()}.\n           */\n          value: invokeLater('$provide', 'value'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#constant\n           * @methodOf angular.Module\n           * @param {string} name constant name\n           * @param {*} object Constant value.\n           * @description\n           * Because the constant are fixed, they get applied before other provide methods.\n           * See {@link AUTO.$provide#constant $provide.constant()}.\n           */\n          constant: invokeLater('$provide', 'constant', 'unshift'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#filter\n           * @methodOf angular.Module\n           * @param {string} name Filter name.\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\n           * @description\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n           */\n          filter: invokeLater('$filterProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#controller\n           * @methodOf angular.Module\n           * @param {string} name Controller name.\n           * @param {Function} constructor Controller constructor function.\n           * @description\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n           */\n          controller: invokeLater('$controllerProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#directive\n           * @methodOf angular.Module\n           * @param {string} name directive name\n           * @param {Function} directiveFactory Factory function for creating new instance of\n           * directives.\n           * @description\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n           */\n          directive: invokeLater('$compileProvider', 'directive'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#config\n           * @methodOf angular.Module\n           * @param {Function} configFn Execute this function on module load. Useful for service\n           *    configuration.\n           * @description\n           * Use this method to register work which needs to be performed on module loading.\n           */\n          config: config,\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#run\n           * @methodOf angular.Module\n           * @param {Function} initializationFn Execute this function after injector creation.\n           *    Useful for application initialization.\n           * @description\n           * Use this method to register work which should be performed when the injector is done\n           * loading all modules.\n           */\n          run: function(block) {\n            runBlocks.push(block);\n            return this;\n          }\n        };\n\n        if (configFn) {\n          config(configFn);\n        }\n\n        return  moduleInstance;\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @param {String=} insertMethod\n         * @returns {angular.Module}\n         */\n        function invokeLater(provider, method, insertMethod) {\n          return function() {\n            invokeQueue[insertMethod || 'push']([provider, method, arguments]);\n            return moduleInstance;\n          }\n        }\n      });\n    };\n  });\n\n}\n\n/**\n * @ngdoc property\n * @name angular.version\n * @description\n * An object that contains information about the current AngularJS version. This object has the\n * following properties:\n *\n * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n * - `major` – `{number}` – Major version number, such as \"0\".\n * - `minor` – `{number}` – Minor version number, such as \"9\".\n * - `dot` – `{number}` – Dot version number, such as \"18\".\n * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n */\nvar version = {\n  full: '1.0.7',    // all of these placeholder strings will be replaced by grunt's\n  major: 1,    // package task\n  minor: 0,\n  dot: 7,\n  codeName: 'monochromatic-rainbow'\n};\n\n\nfunction publishExternalAPI(angular){\n  extend(angular, {\n    'bootstrap': bootstrap,\n    'copy': copy,\n    'extend': extend,\n    'equals': equals,\n    'element': jqLite,\n    'forEach': forEach,\n    'injector': createInjector,\n    'noop':noop,\n    'bind':bind,\n    'toJson': toJson,\n    'fromJson': fromJson,\n    'identity':identity,\n    'isUndefined': isUndefined,\n    'isDefined': isDefined,\n    'isString': isString,\n    'isFunction': isFunction,\n    'isObject': isObject,\n    'isNumber': isNumber,\n    'isElement': isElement,\n    'isArray': isArray,\n    'version': version,\n    'isDate': isDate,\n    'lowercase': lowercase,\n    'uppercase': uppercase,\n    'callbacks': {counter: 0}\n  });\n\n  angularModule = setupModuleLoader(window);\n  try {\n    angularModule('ngLocale');\n  } catch (e) {\n    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\n  }\n\n  angularModule('ng', ['ngLocale'], ['$provide',\n    function ngModule($provide) {\n      $provide.provider('$compile', $CompileProvider).\n        directive({\n            a: htmlAnchorDirective,\n            input: inputDirective,\n            textarea: inputDirective,\n            form: formDirective,\n            script: scriptDirective,\n            select: selectDirective,\n            style: styleDirective,\n            option: optionDirective,\n            ngBind: ngBindDirective,\n            ngBindHtmlUnsafe: ngBindHtmlUnsafeDirective,\n            ngBindTemplate: ngBindTemplateDirective,\n            ngClass: ngClassDirective,\n            ngClassEven: ngClassEvenDirective,\n            ngClassOdd: ngClassOddDirective,\n            ngCsp: ngCspDirective,\n            ngCloak: ngCloakDirective,\n            ngController: ngControllerDirective,\n            ngForm: ngFormDirective,\n            ngHide: ngHideDirective,\n            ngInclude: ngIncludeDirective,\n            ngInit: ngInitDirective,\n            ngNonBindable: ngNonBindableDirective,\n            ngPluralize: ngPluralizeDirective,\n            ngRepeat: ngRepeatDirective,\n            ngShow: ngShowDirective,\n            ngSubmit: ngSubmitDirective,\n            ngStyle: ngStyleDirective,\n            ngSwitch: ngSwitchDirective,\n            ngSwitchWhen: ngSwitchWhenDirective,\n            ngSwitchDefault: ngSwitchDefaultDirective,\n            ngOptions: ngOptionsDirective,\n            ngView: ngViewDirective,\n            ngTransclude: ngTranscludeDirective,\n            ngModel: ngModelDirective,\n            ngList: ngListDirective,\n            ngChange: ngChangeDirective,\n            required: requiredDirective,\n            ngRequired: requiredDirective,\n            ngValue: ngValueDirective\n        }).\n        directive(ngAttributeAliasDirectives).\n        directive(ngEventDirectives);\n      $provide.provider({\n        $anchorScroll: $AnchorScrollProvider,\n        $browser: $BrowserProvider,\n        $cacheFactory: $CacheFactoryProvider,\n        $controller: $ControllerProvider,\n        $document: $DocumentProvider,\n        $exceptionHandler: $ExceptionHandlerProvider,\n        $filter: $FilterProvider,\n        $interpolate: $InterpolateProvider,\n        $http: $HttpProvider,\n        $httpBackend: $HttpBackendProvider,\n        $location: $LocationProvider,\n        $log: $LogProvider,\n        $parse: $ParseProvider,\n        $route: $RouteProvider,\n        $routeParams: $RouteParamsProvider,\n        $rootScope: $RootScopeProvider,\n        $q: $QProvider,\n        $sniffer: $SnifferProvider,\n        $templateCache: $TemplateCacheProvider,\n        $timeout: $TimeoutProvider,\n        $window: $WindowProvider\n      });\n    }\n  ]);\n}\n\n//////////////////////////////////\n//JQLite\n//////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.element\n * @function\n *\n * @description\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n * `angular.element` can be either an alias for [jQuery](http://api.jquery.com/jQuery/) function, if\n * jQuery is available, or a function that wraps the element or string in Angular's jQuery lite\n * implementation (commonly referred to as jqLite).\n *\n * Real jQuery always takes precedence over jqLite, provided it was loaded before `DOMContentLoaded`\n * event fired.\n *\n * jqLite is a tiny, API-compatible subset of jQuery that allows\n * Angular to manipulate the DOM. jqLite implements only the most commonly needed functionality\n * within a very small footprint, so only a subset of the jQuery API - methods, arguments and\n * invocation styles - are supported.\n *\n * Note: All element references in Angular are always wrapped with jQuery or jqLite; they are never\n * raw DOM references.\n *\n * ## Angular's jQuery lite provides the following methods:\n *\n * - [addClass()](http://api.jquery.com/addClass/)\n * - [after()](http://api.jquery.com/after/)\n * - [append()](http://api.jquery.com/append/)\n * - [attr()](http://api.jquery.com/attr/)\n * - [bind()](http://api.jquery.com/bind/) - Does not support namespaces\n * - [children()](http://api.jquery.com/children/) - Does not support selectors\n * - [clone()](http://api.jquery.com/clone/)\n * - [contents()](http://api.jquery.com/contents/)\n * - [css()](http://api.jquery.com/css/)\n * - [data()](http://api.jquery.com/data/)\n * - [eq()](http://api.jquery.com/eq/)\n * - [find()](http://api.jquery.com/find/) - Limited to lookups by tag name\n * - [hasClass()](http://api.jquery.com/hasClass/)\n * - [html()](http://api.jquery.com/html/)\n * - [next()](http://api.jquery.com/next/) - Does not support selectors\n * - [parent()](http://api.jquery.com/parent/) - Does not support selectors\n * - [prepend()](http://api.jquery.com/prepend/)\n * - [prop()](http://api.jquery.com/prop/)\n * - [ready()](http://api.jquery.com/ready/)\n * - [remove()](http://api.jquery.com/remove/)\n * - [removeAttr()](http://api.jquery.com/removeAttr/)\n * - [removeClass()](http://api.jquery.com/removeClass/)\n * - [removeData()](http://api.jquery.com/removeData/)\n * - [replaceWith()](http://api.jquery.com/replaceWith/)\n * - [text()](http://api.jquery.com/text/)\n * - [toggleClass()](http://api.jquery.com/toggleClass/)\n * - [triggerHandler()](http://api.jquery.com/triggerHandler/) - Doesn't pass native event objects to handlers.\n * - [unbind()](http://api.jquery.com/unbind/) - Does not support namespaces\n * - [val()](http://api.jquery.com/val/)\n * - [wrap()](http://api.jquery.com/wrap/)\n *\n * ## In addtion to the above, Angular provides additional methods to both jQuery and jQuery lite:\n *\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n *   `'ngModel'`).\n * - `injector()` - retrieves the injector of the current element or its parent.\n * - `scope()` - retrieves the {@link api/ng.$rootScope.Scope scope} of the current\n *   element or its parent.\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n *   parent element is reached.\n *\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n * @returns {Object} jQuery object.\n */\n\nvar jqCache = JQLite.cache = {},\n    jqName = JQLite.expando = 'ng-' + new Date().getTime(),\n    jqId = 1,\n    addEventListenerFn = (window.document.addEventListener\n      ? function(element, type, fn) {element.addEventListener(type, fn, false);}\n      : function(element, type, fn) {element.attachEvent('on' + type, fn);}),\n    removeEventListenerFn = (window.document.removeEventListener\n      ? function(element, type, fn) {element.removeEventListener(type, fn, false); }\n      : function(element, type, fn) {element.detachEvent('on' + type, fn); });\n\nfunction jqNextId() { return ++jqId; }\n\n\nvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\nvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n/**\n * Converts snake_case to camelCase.\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction camelCase(name) {\n  return name.\n    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n      return offset ? letter.toUpperCase() : letter;\n    }).\n    replace(MOZ_HACK_REGEXP, 'Moz$1');\n}\n\n/////////////////////////////////////////////\n// jQuery mutation patch\n//\n//  In conjunction with bindJQuery intercepts all jQuery's DOM destruction apis and fires a\n// $destroy event on all DOM nodes being removed.\n//\n/////////////////////////////////////////////\n\nfunction JQLitePatchJQueryRemove(name, dispatchThis) {\n  var originalJqFn = jQuery.fn[name];\n  originalJqFn = originalJqFn.$original || originalJqFn;\n  removePatch.$original = originalJqFn;\n  jQuery.fn[name] = removePatch;\n\n  function removePatch() {\n    var list = [this],\n        fireEvent = dispatchThis,\n        set, setIndex, setLength,\n        element, childIndex, childLength, children,\n        fns, events;\n\n    while(list.length) {\n      set = list.shift();\n      for(setIndex = 0, setLength = set.length; setIndex < setLength; setIndex++) {\n        element = jqLite(set[setIndex]);\n        if (fireEvent) {\n          element.triggerHandler('$destroy');\n        } else {\n          fireEvent = !fireEvent;\n        }\n        for(childIndex = 0, childLength = (children = element.children()).length;\n            childIndex < childLength;\n            childIndex++) {\n          list.push(jQuery(children[childIndex]));\n        }\n      }\n    }\n    return originalJqFn.apply(this, arguments);\n  }\n}\n\n/////////////////////////////////////////////\nfunction JQLite(element) {\n  if (element instanceof JQLite) {\n    return element;\n  }\n  if (!(this instanceof JQLite)) {\n    if (isString(element) && element.charAt(0) != '<') {\n      throw Error('selectors not implemented');\n    }\n    return new JQLite(element);\n  }\n\n  if (isString(element)) {\n    var div = document.createElement('div');\n    // Read about the NoScope elements here:\n    // http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    div.innerHTML = '<div>&#160;</div>' + element; // IE insanity to make NoScope elements work!\n    div.removeChild(div.firstChild); // remove the superfluous div\n    JQLiteAddNodes(this, div.childNodes);\n    this.remove(); // detach the elements from the temporary DOM div.\n  } else {\n    JQLiteAddNodes(this, element);\n  }\n}\n\nfunction JQLiteClone(element) {\n  return element.cloneNode(true);\n}\n\nfunction JQLiteDealoc(element){\n  JQLiteRemoveData(element);\n  for ( var i = 0, children = element.childNodes || []; i < children.length; i++) {\n    JQLiteDealoc(children[i]);\n  }\n}\n\nfunction JQLiteUnbind(element, type, fn) {\n  var events = JQLiteExpandoStore(element, 'events'),\n      handle = JQLiteExpandoStore(element, 'handle');\n\n  if (!handle) return; //no listeners registered\n\n  if (isUndefined(type)) {\n    forEach(events, function(eventHandler, type) {\n      removeEventListenerFn(element, type, eventHandler);\n      delete events[type];\n    });\n  } else {\n    if (isUndefined(fn)) {\n      removeEventListenerFn(element, type, events[type]);\n      delete events[type];\n    } else {\n      arrayRemove(events[type], fn);\n    }\n  }\n}\n\nfunction JQLiteRemoveData(element) {\n  var expandoId = element[jqName],\n      expandoStore = jqCache[expandoId];\n\n  if (expandoStore) {\n    if (expandoStore.handle) {\n      expandoStore.events.$destroy && expandoStore.handle({}, '$destroy');\n      JQLiteUnbind(element);\n    }\n    delete jqCache[expandoId];\n    element[jqName] = undefined; // ie does not allow deletion of attributes on elements.\n  }\n}\n\nfunction JQLiteExpandoStore(element, key, value) {\n  var expandoId = element[jqName],\n      expandoStore = jqCache[expandoId || -1];\n\n  if (isDefined(value)) {\n    if (!expandoStore) {\n      element[jqName] = expandoId = jqNextId();\n      expandoStore = jqCache[expandoId] = {};\n    }\n    expandoStore[key] = value;\n  } else {\n    return expandoStore && expandoStore[key];\n  }\n}\n\nfunction JQLiteData(element, key, value) {\n  var data = JQLiteExpandoStore(element, 'data'),\n      isSetter = isDefined(value),\n      keyDefined = !isSetter && isDefined(key),\n      isSimpleGetter = keyDefined && !isObject(key);\n\n  if (!data && !isSimpleGetter) {\n    JQLiteExpandoStore(element, 'data', data = {});\n  }\n\n  if (isSetter) {\n    data[key] = value;\n  } else {\n    if (keyDefined) {\n      if (isSimpleGetter) {\n        // don't create data in this case.\n        return data && data[key];\n      } else {\n        extend(data, key);\n      }\n    } else {\n      return data;\n    }\n  }\n}\n\nfunction JQLiteHasClass(element, selector) {\n  return ((\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").\n      indexOf( \" \" + selector + \" \" ) > -1);\n}\n\nfunction JQLiteRemoveClass(element, cssClasses) {\n  if (cssClasses) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      element.className = trim(\n          (\" \" + element.className + \" \")\n          .replace(/[\\n\\t]/g, \" \")\n          .replace(\" \" + trim(cssClass) + \" \", \" \")\n      );\n    });\n  }\n}\n\nfunction JQLiteAddClass(element, cssClasses) {\n  if (cssClasses) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      if (!JQLiteHasClass(element, cssClass)) {\n        element.className = trim(element.className + ' ' + trim(cssClass));\n      }\n    });\n  }\n}\n\nfunction JQLiteAddNodes(root, elements) {\n  if (elements) {\n    elements = (!elements.nodeName && isDefined(elements.length) && !isWindow(elements))\n      ? elements\n      : [ elements ];\n    for(var i=0; i < elements.length; i++) {\n      root.push(elements[i]);\n    }\n  }\n}\n\nfunction JQLiteController(element, name) {\n  return JQLiteInheritedData(element, '$' + (name || 'ngController' ) + 'Controller');\n}\n\nfunction JQLiteInheritedData(element, name, value) {\n  element = jqLite(element);\n\n  // if element is the document object work with the html element instead\n  // this makes $(document).scope() possible\n  if(element[0].nodeType == 9) {\n    element = element.find('html');\n  }\n\n  while (element.length) {\n    if (value = element.data(name)) return value;\n    element = element.parent();\n  }\n}\n\n//////////////////////////////////////////\n// Functions which are declared directly.\n//////////////////////////////////////////\nvar JQLitePrototype = JQLite.prototype = {\n  ready: function(fn) {\n    var fired = false;\n\n    function trigger() {\n      if (fired) return;\n      fired = true;\n      fn();\n    }\n\n    this.bind('DOMContentLoaded', trigger); // works for modern browsers and IE9\n    // we can not use jqLite since we are not done loading and jQuery could be loaded later.\n    JQLite(window).bind('load', trigger); // fallback to window.onload for others\n  },\n  toString: function() {\n    var value = [];\n    forEach(this, function(e){ value.push('' + e);});\n    return '[' + value.join(', ') + ']';\n  },\n\n  eq: function(index) {\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n  },\n\n  length: 0,\n  push: push,\n  sort: [].sort,\n  splice: [].splice\n};\n\n//////////////////////////////////////////\n// Functions iterating getter/setters.\n// these functions return self on setter and\n// value on get.\n//////////////////////////////////////////\nvar BOOLEAN_ATTR = {};\nforEach('multiple,selected,checked,disabled,readOnly,required'.split(','), function(value) {\n  BOOLEAN_ATTR[lowercase(value)] = value;\n});\nvar BOOLEAN_ELEMENTS = {};\nforEach('input,select,option,textarea,button,form'.split(','), function(value) {\n  BOOLEAN_ELEMENTS[uppercase(value)] = true;\n});\n\nfunction getBooleanAttrName(element, name) {\n  // check dom last since we will most likely fail on name\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\n  // booleanAttr is here twice to minimize DOM access\n  return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr;\n}\n\nforEach({\n  data: JQLiteData,\n  inheritedData: JQLiteInheritedData,\n\n  scope: function(element) {\n    return JQLiteInheritedData(element, '$scope');\n  },\n\n  controller: JQLiteController ,\n\n  injector: function(element) {\n    return JQLiteInheritedData(element, '$injector');\n  },\n\n  removeAttr: function(element,name) {\n    element.removeAttribute(name);\n  },\n\n  hasClass: JQLiteHasClass,\n\n  css: function(element, name, value) {\n    name = camelCase(name);\n\n    if (isDefined(value)) {\n      element.style[name] = value;\n    } else {\n      var val;\n\n      if (msie <= 8) {\n        // this is some IE specific weirdness that jQuery 1.6.4 does not sure why\n        val = element.currentStyle && element.currentStyle[name];\n        if (val === '') val = 'auto';\n      }\n\n      val = val || element.style[name];\n\n      if (msie <= 8) {\n        // jquery weirdness :-/\n        val = (val === '') ? undefined : val;\n      }\n\n      return  val;\n    }\n  },\n\n  attr: function(element, name, value){\n    var lowercasedName = lowercase(name);\n    if (BOOLEAN_ATTR[lowercasedName]) {\n      if (isDefined(value)) {\n        if (!!value) {\n          element[name] = true;\n          element.setAttribute(name, lowercasedName);\n        } else {\n          element[name] = false;\n          element.removeAttribute(lowercasedName);\n        }\n      } else {\n        return (element[name] ||\n                 (element.attributes.getNamedItem(name)|| noop).specified)\n               ? lowercasedName\n               : undefined;\n      }\n    } else if (isDefined(value)) {\n      element.setAttribute(name, value);\n    } else if (element.getAttribute) {\n      // the extra argument \"2\" is to get the right thing for a.href in IE, see jQuery code\n      // some elements (e.g. Document) don't have get attribute, so return undefined\n      var ret = element.getAttribute(name, 2);\n      // normalize non-existing attributes to undefined (as jQuery)\n      return ret === null ? undefined : ret;\n    }\n  },\n\n  prop: function(element, name, value) {\n    if (isDefined(value)) {\n      element[name] = value;\n    } else {\n      return element[name];\n    }\n  },\n\n  text: extend((msie < 9)\n      ? function(element, value) {\n        if (element.nodeType == 1 /** Element */) {\n          if (isUndefined(value))\n            return element.innerText;\n          element.innerText = value;\n        } else {\n          if (isUndefined(value))\n            return element.nodeValue;\n          element.nodeValue = value;\n        }\n      }\n      : function(element, value) {\n        if (isUndefined(value)) {\n          return element.textContent;\n        }\n        element.textContent = value;\n      }, {$dv:''}),\n\n  val: function(element, value) {\n    if (isUndefined(value)) {\n      return element.value;\n    }\n    element.value = value;\n  },\n\n  html: function(element, value) {\n    if (isUndefined(value)) {\n      return element.innerHTML;\n    }\n    for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n      JQLiteDealoc(childNodes[i]);\n    }\n    element.innerHTML = value;\n  }\n}, function(fn, name){\n  /**\n   * Properties: writes return selection, reads return first value\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var i, key;\n\n    // JQLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n    // in a way that survives minification.\n    if (((fn.length == 2 && (fn !== JQLiteHasClass && fn !== JQLiteController)) ? arg1 : arg2) === undefined) {\n      if (isObject(arg1)) {\n\n        // we are a write, but the object properties are the key/values\n        for(i=0; i < this.length; i++) {\n          if (fn === JQLiteData) {\n            // data() takes the whole object in jQuery\n            fn(this[i], arg1);\n          } else {\n            for (key in arg1) {\n              fn(this[i], key, arg1[key]);\n            }\n          }\n        }\n        // return self for chaining\n        return this;\n      } else {\n        // we are a read, so read the first child.\n        if (this.length)\n          return fn(this[0], arg1, arg2);\n      }\n    } else {\n      // we are a write, so apply to all children\n      for(i=0; i < this.length; i++) {\n        fn(this[i], arg1, arg2);\n      }\n      // return self for chaining\n      return this;\n    }\n    return fn.$dv;\n  };\n});\n\nfunction createEventHandler(element, events) {\n  var eventHandler = function (event, type) {\n    if (!event.preventDefault) {\n      event.preventDefault = function() {\n        event.returnValue = false; //ie\n      };\n    }\n\n    if (!event.stopPropagation) {\n      event.stopPropagation = function() {\n        event.cancelBubble = true; //ie\n      };\n    }\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    if (isUndefined(event.defaultPrevented)) {\n      var prevent = event.preventDefault;\n      event.preventDefault = function() {\n        event.defaultPrevented = true;\n        prevent.call(event);\n      };\n      event.defaultPrevented = false;\n    }\n\n    event.isDefaultPrevented = function() {\n      return event.defaultPrevented;\n    };\n\n    forEach(events[type || event.type], function(fn) {\n      fn.call(element, event);\n    });\n\n    // Remove monkey-patched methods (IE),\n    // as they would cause memory leaks in IE8.\n    if (msie <= 8) {\n      // IE7/8 does not allow to delete property on native object\n      event.preventDefault = null;\n      event.stopPropagation = null;\n      event.isDefaultPrevented = null;\n    } else {\n      // It shouldn't affect normal browsers (native methods are defined on prototype).\n      delete event.preventDefault;\n      delete event.stopPropagation;\n      delete event.isDefaultPrevented;\n    }\n  };\n  eventHandler.elem = element;\n  return eventHandler;\n}\n\n//////////////////////////////////////////\n// Functions iterating traversal.\n// These functions chain results into a single\n// selector.\n//////////////////////////////////////////\nforEach({\n  removeData: JQLiteRemoveData,\n\n  dealoc: JQLiteDealoc,\n\n  bind: function bindFn(element, type, fn){\n    var events = JQLiteExpandoStore(element, 'events'),\n        handle = JQLiteExpandoStore(element, 'handle');\n\n    if (!events) JQLiteExpandoStore(element, 'events', events = {});\n    if (!handle) JQLiteExpandoStore(element, 'handle', handle = createEventHandler(element, events));\n\n    forEach(type.split(' '), function(type){\n      var eventFns = events[type];\n\n      if (!eventFns) {\n        if (type == 'mouseenter' || type == 'mouseleave') {\n          var contains = document.body.contains || document.body.compareDocumentPosition ?\n          function( a, b ) {\n            var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a === bup || !!( bup && bup.nodeType === 1 && (\n              adown.contains ?\n              adown.contains( bup ) :\n              a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n              ));\n            } :\n            function( a, b ) {\n              if ( b ) {\n                while ( (b = b.parentNode) ) {\n                  if ( b === a ) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            };\t\n\n          events[type] = [];\n\t\t\n\t\t  // Refer to jQuery's implementation of mouseenter & mouseleave\n          // Read about mouseenter and mouseleave:\n          // http://www.quirksmode.org/js/events_mouse.html#link8\n          var eventmap = { mouseleave : \"mouseout\", mouseenter : \"mouseover\"}          \n          bindFn(element, eventmap[type], function(event) {\n            var ret, target = this, related = event.relatedTarget;\n            // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n            if ( !related || (related !== target && !contains(target, related)) ){\n              handle(event, type);\n            }\t\n\n          });\n\n        } else {\n          addEventListenerFn(element, type, handle);\n          events[type] = [];\n        }\n        eventFns = events[type]\n      }\n      eventFns.push(fn);\n    });\n  },\n\n  unbind: JQLiteUnbind,\n\n  replaceWith: function(element, replaceNode) {\n    var index, parent = element.parentNode;\n    JQLiteDealoc(element);\n    forEach(new JQLite(replaceNode), function(node){\n      if (index) {\n        parent.insertBefore(node, index.nextSibling);\n      } else {\n        parent.replaceChild(node, element);\n      }\n      index = node;\n    });\n  },\n\n  children: function(element) {\n    var children = [];\n    forEach(element.childNodes, function(element){\n      if (element.nodeType === 1)\n        children.push(element);\n    });\n    return children;\n  },\n\n  contents: function(element) {\n    return element.childNodes || [];\n  },\n\n  append: function(element, node) {\n    forEach(new JQLite(node), function(child){\n      if (element.nodeType === 1)\n        element.appendChild(child);\n    });\n  },\n\n  prepend: function(element, node) {\n    if (element.nodeType === 1) {\n      var index = element.firstChild;\n      forEach(new JQLite(node), function(child){\n        if (index) {\n          element.insertBefore(child, index);\n        } else {\n          element.appendChild(child);\n          index = child;\n        }\n      });\n    }\n  },\n\n  wrap: function(element, wrapNode) {\n    wrapNode = jqLite(wrapNode)[0];\n    var parent = element.parentNode;\n    if (parent) {\n      parent.replaceChild(wrapNode, element);\n    }\n    wrapNode.appendChild(element);\n  },\n\n  remove: function(element) {\n    JQLiteDealoc(element);\n    var parent = element.parentNode;\n    if (parent) parent.removeChild(element);\n  },\n\n  after: function(element, newElement) {\n    var index = element, parent = element.parentNode;\n    forEach(new JQLite(newElement), function(node){\n      parent.insertBefore(node, index.nextSibling);\n      index = node;\n    });\n  },\n\n  addClass: JQLiteAddClass,\n  removeClass: JQLiteRemoveClass,\n\n  toggleClass: function(element, selector, condition) {\n    if (isUndefined(condition)) {\n      condition = !JQLiteHasClass(element, selector);\n    }\n    (condition ? JQLiteAddClass : JQLiteRemoveClass)(element, selector);\n  },\n\n  parent: function(element) {\n    var parent = element.parentNode;\n    return parent && parent.nodeType !== 11 ? parent : null;\n  },\n\n  next: function(element) {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    }\n\n    // IE8 doesn't have nextElementSibling\n    var elm = element.nextSibling;\n    while (elm != null && elm.nodeType !== 1) {\n      elm = elm.nextSibling;\n    }\n    return elm;\n  },\n\n  find: function(element, selector) {\n    return element.getElementsByTagName(selector);\n  },\n\n  clone: JQLiteClone,\n\n  triggerHandler: function(element, eventName) {\n    var eventFns = (JQLiteExpandoStore(element, 'events') || {})[eventName];\n\n    forEach(eventFns, function(fn) {\n      fn.call(element, null);\n    });\n  }\n}, function(fn, name){\n  /**\n   * chaining functions\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var value;\n    for(var i=0; i < this.length; i++) {\n      if (value == undefined) {\n        value = fn(this[i], arg1, arg2);\n        if (value !== undefined) {\n          // any function which returns a value needs to be wrapped\n          value = jqLite(value);\n        }\n      } else {\n        JQLiteAddNodes(value, fn(this[i], arg1, arg2));\n      }\n    }\n    return value == undefined ? this : value;\n  };\n});\n\n/**\n * Computes a hash of an 'obj'.\n * Hash of a:\n *  string is string\n *  number is number as string\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n *         that is also assigned to the $$hashKey property of the object.\n *\n * @param obj\n * @returns {string} hash string such that the same input will have the same hash string.\n *         The resulting string key is in 'type:hashKey' format.\n */\nfunction hashKey(obj) {\n  var objType = typeof obj,\n      key;\n\n  if (objType == 'object' && obj !== null) {\n    if (typeof (key = obj.$$hashKey) == 'function') {\n      // must invoke on object to keep the right this\n      key = obj.$$hashKey();\n    } else if (key === undefined) {\n      key = obj.$$hashKey = nextUid();\n    }\n  } else {\n    key = obj;\n  }\n\n  return objType + ':' + key;\n}\n\n/**\n * HashMap which can use objects as keys\n */\nfunction HashMap(array){\n  forEach(array, this.put, this);\n}\nHashMap.prototype = {\n  /**\n   * Store key value pair\n   * @param key key to store can be any type\n   * @param value value to store can be any type\n   */\n  put: function(key, value) {\n    this[hashKey(key)] = value;\n  },\n\n  /**\n   * @param key\n   * @returns the value for the key\n   */\n  get: function(key) {\n    return this[hashKey(key)];\n  },\n\n  /**\n   * Remove the key/value pair\n   * @param key\n   */\n  remove: function(key) {\n    var value = this[key = hashKey(key)];\n    delete this[key];\n    return value;\n  }\n};\n\n/**\n * A map where multiple values can be added to the same key such that they form a queue.\n * @returns {HashQueueMap}\n */\nfunction HashQueueMap() {}\nHashQueueMap.prototype = {\n  /**\n   * Same as array push, but using an array as the value for the hash\n   */\n  push: function(key, value) {\n    var array = this[key = hashKey(key)];\n    if (!array) {\n      this[key] = [value];\n    } else {\n      array.push(value);\n    }\n  },\n\n  /**\n   * Same as array shift, but using an array as the value for the hash\n   */\n  shift: function(key) {\n    var array = this[key = hashKey(key)];\n    if (array) {\n      if (array.length == 1) {\n        delete this[key];\n        return array[0];\n      } else {\n        return array.shift();\n      }\n    }\n  },\n\n  /**\n   * return the first item without deleting it\n   */\n  peek: function(key) {\n    var array = this[hashKey(key)];\n    if (array) {\n    return array[0];\n    }\n  }\n};\n\n/**\n * @ngdoc function\n * @name angular.injector\n * @function\n *\n * @description\n * Creates an injector function that can be used for retrieving services as well as for\n * dependency injection (see {@link guide/di dependency injection}).\n *\n\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n *        {@link angular.module}. The `ng` module must be explicitly added.\n * @returns {function()} Injector function. See {@link AUTO.$injector $injector}.\n *\n * @example\n * Typical usage\n * <pre>\n *   // create an injector\n *   var $injector = angular.injector(['ng']);\n *\n *   // use the injector to kick off your application\n *   // use the type inference to auto inject arguments, or use implicit injection\n *   $injector.invoke(function($rootScope, $compile, $document){\n *     $compile($document)($rootScope);\n *     $rootScope.$digest();\n *   });\n * </pre>\n */\n\n\n/**\n * @ngdoc overview\n * @name AUTO\n * @description\n *\n * Implicit module which gets automatically added to each {@link AUTO.$injector $injector}.\n */\n\nvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nfunction annotate(fn) {\n  var $inject,\n      fnText,\n      argDecl,\n      last;\n\n  if (typeof fn == 'function') {\n    if (!($inject = fn.$inject)) {\n      $inject = [];\n      fnText = fn.toString().replace(STRIP_COMMENTS, '');\n      argDecl = fnText.match(FN_ARGS);\n      forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg){\n        arg.replace(FN_ARG, function(all, underscore, name){\n          $inject.push(name);\n        });\n      });\n      fn.$inject = $inject;\n    }\n  } else if (isArray(fn)) {\n    last = fn.length - 1;\n    assertArgFn(fn[last], 'fn');\n    $inject = fn.slice(0, last);\n  } else {\n    assertArgFn(fn, 'fn', true);\n  }\n  return $inject;\n}\n\n///////////////////////////////////////\n\n/**\n * @ngdoc object\n * @name AUTO.$injector\n * @function\n *\n * @description\n *\n * `$injector` is used to retrieve object instances as defined by\n * {@link AUTO.$provide provider}, instantiate types, invoke methods,\n * and load modules.\n *\n * The following always holds true:\n *\n * <pre>\n *   var $injector = angular.injector();\n *   expect($injector.get('$injector')).toBe($injector);\n *   expect($injector.invoke(function($injector){\n *     return $injector;\n *   }).toBe($injector);\n * </pre>\n *\n * # Injection Function Annotation\n *\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n * following are all valid ways of annotating function with injection arguments and are equivalent.\n *\n * <pre>\n *   // inferred (only works if code not minified/obfuscated)\n *   $injector.invoke(function(serviceA){});\n *\n *   // annotated\n *   function explicit(serviceA) {};\n *   explicit.$inject = ['serviceA'];\n *   $injector.invoke(explicit);\n *\n *   // inline\n *   $injector.invoke(['serviceA', function(serviceA){}]);\n * </pre>\n *\n * ## Inference\n *\n * In JavaScript calling `toString()` on a function returns the function definition. The definition can then be\n * parsed and the function arguments can be extracted. *NOTE:* This does not work with minification, and obfuscation\n * tools since these tools change the argument names.\n *\n * ## `$inject` Annotation\n * By adding a `$inject` property onto a function the injection parameters can be specified.\n *\n * ## Inline\n * As an array of injection names, where the last item in the array is the function to call.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#get\n * @methodOf AUTO.$injector\n *\n * @description\n * Return an instance of the service.\n *\n * @param {string} name The name of the instance to retrieve.\n * @return {*} The instance.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#invoke\n * @methodOf AUTO.$injector\n *\n * @description\n * Invoke the method and supply the method arguments from the `$injector`.\n *\n * @param {!function} fn The function to invoke. The function arguments come form the function annotation.\n * @param {Object=} self The `this` for the invoked method.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\n *   the `$injector` is consulted.\n * @returns {*} the value returned by the invoked `fn` function.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#instantiate\n * @methodOf AUTO.$injector\n * @description\n * Create a new instance of JS type. The method takes a constructor function invokes the new operator and supplies\n * all of the arguments to the constructor function as specified by the constructor annotation.\n *\n * @param {function} Type Annotated constructor function.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\n *   the `$injector` is consulted.\n * @returns {Object} new instance of `Type`.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#annotate\n * @methodOf AUTO.$injector\n *\n * @description\n * Returns an array of service names which the function is requesting for injection. This API is used by the injector\n * to determine which services need to be injected into the function when the function is invoked. There are three\n * ways in which the function can be annotated with the needed dependencies.\n *\n * # Argument names\n *\n * The simplest form is to extract the dependencies from the arguments of the function. This is done by converting\n * the function into a string using `toString()` method and extracting the argument names.\n * <pre>\n *   // Given\n *   function MyController($scope, $route) {\n *     // ...\n *   }\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * </pre>\n *\n * This method does not work with code minfication / obfuscation. For this reason the following annotation strategies\n * are supported.\n *\n * # The `$inject` property\n *\n * If a function has an `$inject` property and its value is an array of strings, then the strings represent names of\n * services to be injected into the function.\n * <pre>\n *   // Given\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n *     // ...\n *   }\n *   // Define function dependencies\n *   MyController.$inject = ['$scope', '$route'];\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * </pre>\n *\n * # The array notation\n *\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property is very\n * inconvenient. In these situations using the array notation to specify the dependencies in a way that survives\n * minification is a better choice:\n *\n * <pre>\n *   // We wish to write this (not minification / obfuscation safe)\n *   injector.invoke(function($compile, $rootScope) {\n *     // ...\n *   });\n *\n *   // We are forced to write break inlining\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n *     // ...\n *   };\n *   tmpFn.$inject = ['$compile', '$rootScope'];\n *   injector.invoke(tmpFn);\n *\n *   // To better support inline function the inline annotation is supported\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n *     // ...\n *   }]);\n *\n *   // Therefore\n *   expect(injector.annotate(\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n *    ).toEqual(['$compile', '$rootScope']);\n * </pre>\n *\n * @param {function|Array.<string|Function>} fn Function for which dependent service names need to be retrieved as described\n *   above.\n *\n * @returns {Array.<string>} The names of the services which the function requires.\n */\n\n\n\n\n/**\n * @ngdoc object\n * @name AUTO.$provide\n *\n * @description\n *\n * Use `$provide` to register new providers with the `$injector`. The providers are the factories for the instance.\n * The providers share the same name as the instance they create with `Provider` suffixed to them.\n *\n * A provider is an object with a `$get()` method. The injector calls the `$get` method to create a new instance of\n * a service. The Provider can have additional methods which would allow for configuration of the provider.\n *\n * <pre>\n *   function GreetProvider() {\n *     var salutation = 'Hello';\n *\n *     this.salutation = function(text) {\n *       salutation = text;\n *     };\n *\n *     this.$get = function() {\n *       return function (name) {\n *         return salutation + ' ' + name + '!';\n *       };\n *     };\n *   }\n *\n *   describe('Greeter', function(){\n *\n *     beforeEach(module(function($provide) {\n *       $provide.provider('greet', GreetProvider);\n *     }));\n *\n *     it('should greet', inject(function(greet) {\n *       expect(greet('angular')).toEqual('Hello angular!');\n *     }));\n *\n *     it('should allow configuration of salutation', function() {\n *       module(function(greetProvider) {\n *         greetProvider.salutation('Ahoj');\n *       });\n *       inject(function(greet) {\n *         expect(greet('angular')).toEqual('Ahoj angular!');\n *       });\n *     });\n * </pre>\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#provider\n * @methodOf AUTO.$provide\n * @description\n *\n * Register a provider for a service. The providers can be retrieved and can have additional configuration methods.\n *\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name + 'Provider'` key.\n * @param {(Object|function())} provider If the provider is:\n *\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n *               {@link AUTO.$injector#invoke $injector.invoke()} when an instance needs to be created.\n *   - `Constructor`: a new instance of the provider will be created using\n *               {@link AUTO.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n *\n * @returns {Object} registered provider instance\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#factory\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for configuring services if only `$get` method is required.\n *\n * @param {string} name The name of the instance.\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand for\n * `$provide.provider(name, {$get: $getFn})`.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#service\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for registering service of given class.\n *\n * @param {string} name The name of the instance.\n * @param {Function} constructor A class (constructor function) that will be instantiated.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#value\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for configuring services if the `$get` method is a constant.\n *\n * @param {string} name The name of the instance.\n * @param {*} value The value.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#constant\n * @methodOf AUTO.$provide\n * @description\n *\n * A constant value, but unlike {@link AUTO.$provide#value value} it can be injected\n * into configuration function (other modules) and it is not interceptable by\n * {@link AUTO.$provide#decorator decorator}.\n *\n * @param {string} name The name of the constant.\n * @param {*} value The constant value.\n * @returns {Object} registered instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#decorator\n * @methodOf AUTO.$provide\n * @description\n *\n * Decoration of service, allows the decorator to intercept the service instance creation. The\n * returned instance may be the original instance, or a new instance which delegates to the\n * original instance.\n *\n * @param {string} name The name of the service to decorate.\n * @param {function()} decorator This function will be invoked when the service needs to be\n *    instantiated. The function is called using the {@link AUTO.$injector#invoke\n *    injector.invoke} method and is therefore fully injectable. Local injection arguments:\n *\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\n *      decorated or delegated to.\n */\n\n\nfunction createInjector(modulesToLoad) {\n  var INSTANTIATING = {},\n      providerSuffix = 'Provider',\n      path = [],\n      loadedModules = new HashMap(),\n      providerCache = {\n        $provide: {\n            provider: supportObject(provider),\n            factory: supportObject(factory),\n            service: supportObject(service),\n            value: supportObject(value),\n            constant: supportObject(constant),\n            decorator: decorator\n          }\n      },\n      providerInjector = createInternalInjector(providerCache, function() {\n        throw Error(\"Unknown provider: \" + path.join(' <- '));\n      }),\n      instanceCache = {},\n      instanceInjector = (instanceCache.$injector =\n          createInternalInjector(instanceCache, function(servicename) {\n            var provider = providerInjector.get(servicename + providerSuffix);\n            return instanceInjector.invoke(provider.$get, provider);\n          }));\n\n\n  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\n\n  return instanceInjector;\n\n  ////////////////////////////////////\n  // $provider\n  ////////////////////////////////////\n\n  function supportObject(delegate) {\n    return function(key, value) {\n      if (isObject(key)) {\n        forEach(key, reverseParams(delegate));\n      } else {\n        return delegate(key, value);\n      }\n    }\n  }\n\n  function provider(name, provider_) {\n    if (isFunction(provider_) || isArray(provider_)) {\n      provider_ = providerInjector.instantiate(provider_);\n    }\n    if (!provider_.$get) {\n      throw Error('Provider ' + name + ' must define $get factory method.');\n    }\n    return providerCache[name + providerSuffix] = provider_;\n  }\n\n  function factory(name, factoryFn) { return provider(name, { $get: factoryFn }); }\n\n  function service(name, constructor) {\n    return factory(name, ['$injector', function($injector) {\n      return $injector.instantiate(constructor);\n    }]);\n  }\n\n  function value(name, value) { return factory(name, valueFn(value)); }\n\n  function constant(name, value) {\n    providerCache[name] = value;\n    instanceCache[name] = value;\n  }\n\n  function decorator(serviceName, decorFn) {\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\n        orig$get = origProvider.$get;\n\n    origProvider.$get = function() {\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n    };\n  }\n\n  ////////////////////////////////////\n  // Module Loading\n  ////////////////////////////////////\n  function loadModules(modulesToLoad){\n    var runBlocks = [];\n    forEach(modulesToLoad, function(module) {\n      if (loadedModules.get(module)) return;\n      loadedModules.put(module, true);\n      if (isString(module)) {\n        var moduleFn = angularModule(module);\n        runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n\n        try {\n          for(var invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i < ii; i++) {\n            var invokeArgs = invokeQueue[i],\n                provider = invokeArgs[0] == '$injector'\n                    ? providerInjector\n                    : providerInjector.get(invokeArgs[0]);\n\n            provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n          }\n        } catch (e) {\n          if (e.message) e.message += ' from ' + module;\n          throw e;\n        }\n      } else if (isFunction(module)) {\n        try {\n          runBlocks.push(providerInjector.invoke(module));\n        } catch (e) {\n          if (e.message) e.message += ' from ' + module;\n          throw e;\n        }\n      } else if (isArray(module)) {\n        try {\n          runBlocks.push(providerInjector.invoke(module));\n        } catch (e) {\n          if (e.message) e.message += ' from ' + String(module[module.length - 1]);\n          throw e;\n        }\n      } else {\n        assertArgFn(module, 'module');\n      }\n    });\n    return runBlocks;\n  }\n\n  ////////////////////////////////////\n  // internal Injector\n  ////////////////////////////////////\n\n  function createInternalInjector(cache, factory) {\n\n    function getService(serviceName) {\n      if (typeof serviceName !== 'string') {\n        throw Error('Service name expected');\n      }\n      if (cache.hasOwnProperty(serviceName)) {\n        if (cache[serviceName] === INSTANTIATING) {\n          throw Error('Circular dependency: ' + path.join(' <- '));\n        }\n        return cache[serviceName];\n      } else {\n        try {\n          path.unshift(serviceName);\n          cache[serviceName] = INSTANTIATING;\n          return cache[serviceName] = factory(serviceName);\n        } finally {\n          path.shift();\n        }\n      }\n    }\n\n    function invoke(fn, self, locals){\n      var args = [],\n          $inject = annotate(fn),\n          length, i,\n          key;\n\n      for(i = 0, length = $inject.length; i < length; i++) {\n        key = $inject[i];\n        args.push(\n          locals && locals.hasOwnProperty(key)\n          ? locals[key]\n          : getService(key)\n        );\n      }\n      if (!fn.$inject) {\n        // this means that we must be an array.\n        fn = fn[length];\n      }\n\n\n      // Performance optimization: http://jsperf.com/apply-vs-call-vs-invoke\n      switch (self ? -1 : args.length) {\n        case  0: return fn();\n        case  1: return fn(args[0]);\n        case  2: return fn(args[0], args[1]);\n        case  3: return fn(args[0], args[1], args[2]);\n        case  4: return fn(args[0], args[1], args[2], args[3]);\n        case  5: return fn(args[0], args[1], args[2], args[3], args[4]);\n        case  6: return fn(args[0], args[1], args[2], args[3], args[4], args[5]);\n        case  7: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        case  8: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\n        case  9: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\n        case 10: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\n        default: return fn.apply(self, args);\n      }\n    }\n\n    function instantiate(Type, locals) {\n      var Constructor = function() {},\n          instance, returnedValue;\n\n      // Check if Type is annotated and use just the given function at n-1 as parameter\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n      Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;\n      instance = new Constructor();\n      returnedValue = invoke(Type, instance, locals);\n\n      return isObject(returnedValue) ? returnedValue : instance;\n    }\n\n    return {\n      invoke: invoke,\n      instantiate: instantiate,\n      get: getService,\n      annotate: annotate\n    };\n  }\n}\n\n/**\n * @ngdoc function\n * @name ng.$anchorScroll\n * @requires $window\n * @requires $location\n * @requires $rootScope\n *\n * @description\n * When called, it checks current value of `$location.hash()` and scroll to related element,\n * according to rules specified in\n * {@link http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document Html5 spec}.\n *\n * It also watches the `$location.hash()` and scroll whenever it changes to match any anchor.\n * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.\n */\nfunction $AnchorScrollProvider() {\n\n  var autoScrollingEnabled = true;\n\n  this.disableAutoScrolling = function() {\n    autoScrollingEnabled = false;\n  };\n\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n    var document = $window.document;\n\n    // helper function to get first anchor from a NodeList\n    // can't use filter.filter, as it accepts only instances of Array\n    // and IE can't convert NodeList to an array using [].slice\n    // TODO(vojta): use filter if we change it to accept lists as well\n    function getFirstAnchor(list) {\n      var result = null;\n      forEach(list, function(element) {\n        if (!result && lowercase(element.nodeName) === 'a') result = element;\n      });\n      return result;\n    }\n\n    function scroll() {\n      var hash = $location.hash(), elm;\n\n      // empty hash, scroll to the top of the page\n      if (!hash) $window.scrollTo(0, 0);\n\n      // element with given id\n      else if ((elm = document.getElementById(hash))) elm.scrollIntoView();\n\n      // first anchor with given name :-D\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) elm.scrollIntoView();\n\n      // no element and hash == 'top', scroll to the top of the page\n      else if (hash === 'top') $window.scrollTo(0, 0);\n    }\n\n    // does not scroll when user clicks on anchor link that is currently on\n    // (no url change, no $location.hash() change), browser native does scroll\n    if (autoScrollingEnabled) {\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n        function autoScrollWatchAction() {\n          $rootScope.$evalAsync(scroll);\n        });\n    }\n\n    return scroll;\n  }];\n}\n\n/**\n * ! This is a private undocumented service !\n *\n * @name ng.$browser\n * @requires $log\n * @description\n * This object has two goals:\n *\n * - hide all the global state in the browser caused by the window object\n * - abstract away all the browser specific features and inconsistencies\n *\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n * service, which can be used for convenient testing of the application without the interaction with\n * the real browser apis.\n */\n/**\n * @param {object} window The global window object.\n * @param {object} document jQuery wrapped document.\n * @param {function()} XHR XMLHttpRequest constructor.\n * @param {object} $log console.log or an object with the same interface.\n * @param {object} $sniffer $sniffer service\n */\nfunction Browser(window, document, $log, $sniffer) {\n  var self = this,\n      rawDocument = document[0],\n      location = window.location,\n      history = window.history,\n      setTimeout = window.setTimeout,\n      clearTimeout = window.clearTimeout,\n      pendingDeferIds = {};\n\n  self.isMock = false;\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n\n  // TODO(vojta): remove this temporary api\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\n  /**\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n   */\n  function completeOutstandingRequest(fn) {\n    try {\n      fn.apply(null, sliceArgs(arguments, 1));\n    } finally {\n      outstandingRequestCount--;\n      if (outstandingRequestCount === 0) {\n        while(outstandingRequestCallbacks.length) {\n          try {\n            outstandingRequestCallbacks.pop()();\n          } catch (e) {\n            $log.error(e);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Note: this method is used only by scenario runner\n   * TODO(vojta): prefix this method with $$ ?\n   * @param {function()} callback Function that will be called when no outstanding request\n   */\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\n    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\n    // regular poller would result in flaky tests.\n    forEach(pollFns, function(pollFn){ pollFn(); });\n\n    if (outstandingRequestCount === 0) {\n      callback();\n    } else {\n      outstandingRequestCallbacks.push(callback);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Poll Watcher API\n  //////////////////////////////////////////////////////////////\n  var pollFns = [],\n      pollTimeout;\n\n  /**\n   * @name ng.$browser#addPollFn\n   * @methodOf ng.$browser\n   *\n   * @param {function()} fn Poll function to add\n   *\n   * @description\n   * Adds a function to the list of functions that poller periodically executes,\n   * and starts polling if not started yet.\n   *\n   * @returns {function()} the added function\n   */\n  self.addPollFn = function(fn) {\n    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\n    pollFns.push(fn);\n    return fn;\n  };\n\n  /**\n   * @param {number} interval How often should browser call poll functions (ms)\n   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\n   *\n   * @description\n   * Configures the poller to run in the specified intervals, using the specified\n   * setTimeout fn and kicks it off.\n   */\n  function startPoller(interval, setTimeout) {\n    (function check() {\n      forEach(pollFns, function(pollFn){ pollFn(); });\n      pollTimeout = setTimeout(check, interval);\n    })();\n  }\n\n  //////////////////////////////////////////////////////////////\n  // URL API\n  //////////////////////////////////////////////////////////////\n\n  var lastBrowserUrl = location.href,\n      baseElement = document.find('base');\n\n  /**\n   * @name ng.$browser#url\n   * @methodOf ng.$browser\n   *\n   * @description\n   * GETTER:\n   * Without any argument, this method just returns current value of location.href.\n   *\n   * SETTER:\n   * With at least one argument, this method sets url to new value.\n   * If html5 history api supported, pushState/replaceState is used, otherwise\n   * location.href/location.replace is used.\n   * Returns its own instance to allow chaining\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to change url.\n   *\n   * @param {string} url New url (when used as setter)\n   * @param {boolean=} replace Should new url replace current history record ?\n   */\n  self.url = function(url, replace) {\n    // setter\n    if (url) {\n      if (lastBrowserUrl == url) return;\n      lastBrowserUrl = url;\n      if ($sniffer.history) {\n        if (replace) history.replaceState(null, '', url);\n        else {\n          history.pushState(null, '', url);\n          // Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462\n          baseElement.attr('href', baseElement.attr('href'));\n        }\n      } else {\n        if (replace) location.replace(url);\n        else location.href = url;\n      }\n      return self;\n    // getter\n    } else {\n      // the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n      return location.href.replace(/%27/g,\"'\");\n    }\n  };\n\n  var urlChangeListeners = [],\n      urlChangeInit = false;\n\n  function fireUrlChange() {\n    if (lastBrowserUrl == self.url()) return;\n\n    lastBrowserUrl = self.url();\n    forEach(urlChangeListeners, function(listener) {\n      listener(self.url());\n    });\n  }\n\n  /**\n   * @name ng.$browser#onUrlChange\n   * @methodOf ng.$browser\n   * @TODO(vojta): refactor to use node's syntax for events\n   *\n   * @description\n   * Register callback function that will be called, when url changes.\n   *\n   * It's only called when the url is changed by outside of angular:\n   * - user types different url into address bar\n   * - user clicks on history (forward/back) button\n   * - user clicks on a link\n   *\n   * It's not called when url is changed by $browser.url() method\n   *\n   * The listener gets called with new url as parameter.\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\n   *\n   * @param {function(string)} listener Listener function to be called when url changes.\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n   */\n  self.onUrlChange = function(callback) {\n    if (!urlChangeInit) {\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\n      // changed by push/replaceState\n\n      // html5 history api - popstate event\n      if ($sniffer.history) jqLite(window).bind('popstate', fireUrlChange);\n      // hashchange event\n      if ($sniffer.hashchange) jqLite(window).bind('hashchange', fireUrlChange);\n      // polling\n      else self.addPollFn(fireUrlChange);\n\n      urlChangeInit = true;\n    }\n\n    urlChangeListeners.push(callback);\n    return callback;\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Misc API\n  //////////////////////////////////////////////////////////////\n\n  /**\n   * Returns current <base href>\n   * (always relative - without domain)\n   *\n   * @returns {string=}\n   */\n  self.baseHref = function() {\n    var href = baseElement.attr('href');\n    return href ? href.replace(/^https?\\:\\/\\/[^\\/]*/, '') : '';\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Cookies API\n  //////////////////////////////////////////////////////////////\n  var lastCookies = {};\n  var lastCookieString = '';\n  var cookiePath = self.baseHref();\n\n  /**\n   * @name ng.$browser#cookies\n   * @methodOf ng.$browser\n   *\n   * @param {string=} name Cookie name\n   * @param {string=} value Cokkie value\n   *\n   * @description\n   * The cookies method provides a 'private' low level access to browser cookies.\n   * It is not meant to be used directly, use the $cookie service instead.\n   *\n   * The return values vary depending on the arguments that the method was called with as follows:\n   * <ul>\n   *   <li>cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify it</li>\n   *   <li>cookies(name, value) -> set name to value, if value is undefined delete the cookie</li>\n   *   <li>cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that way)</li>\n   * </ul>\n   *\n   * @returns {Object} Hash of all cookies (if called without any parameter)\n   */\n  self.cookies = function(name, value) {\n    var cookieLength, cookieArray, cookie, i, index;\n\n    if (name) {\n      if (value === undefined) {\n        rawDocument.cookie = escape(name) + \"=;path=\" + cookiePath + \";expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n      } else {\n        if (isString(value)) {\n          cookieLength = (rawDocument.cookie = escape(name) + '=' + escape(value) + ';path=' + cookiePath).length + 1;\n\n          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n          // - 300 cookies\n          // - 20 cookies per unique domain\n          // - 4096 bytes per cookie\n          if (cookieLength > 4096) {\n            $log.warn(\"Cookie '\"+ name +\"' possibly not set or overflowed because it was too large (\"+\n              cookieLength + \" > 4096 bytes)!\");\n          }\n        }\n      }\n    } else {\n      if (rawDocument.cookie !== lastCookieString) {\n        lastCookieString = rawDocument.cookie;\n        cookieArray = lastCookieString.split(\"; \");\n        lastCookies = {};\n\n        for (i = 0; i < cookieArray.length; i++) {\n          cookie = cookieArray[i];\n          index = cookie.indexOf('=');\n          if (index > 0) { //ignore nameless cookies\n            var name = unescape(cookie.substring(0, index));\n            // the first value that is seen for a cookie is the most\n            // specific one.  values for the same cookie name that\n            // follow are for less specific paths.\n            if (lastCookies[name] === undefined) {\n              lastCookies[name] = unescape(cookie.substring(index + 1));\n            }\n          }\n        }\n      }\n      return lastCookies;\n    }\n  };\n\n\n  /**\n   * @name ng.$browser#defer\n   * @methodOf ng.$browser\n   * @param {function()} fn A function, who's execution should be defered.\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n   *\n   * @description\n   * Executes a fn asynchroniously via `setTimeout(fn, delay)`.\n   *\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n   * via `$browser.defer.flush()`.\n   *\n   */\n  self.defer = function(fn, delay) {\n    var timeoutId;\n    outstandingRequestCount++;\n    timeoutId = setTimeout(function() {\n      delete pendingDeferIds[timeoutId];\n      completeOutstandingRequest(fn);\n    }, delay || 0);\n    pendingDeferIds[timeoutId] = true;\n    return timeoutId;\n  };\n\n\n  /**\n   * @name ng.$browser#defer.cancel\n   * @methodOf ng.$browser.defer\n   *\n   * @description\n   * Cancels a defered task identified with `deferId`.\n   *\n   * @param {*} deferId Token returned by the `$browser.defer` function.\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfuly canceled.\n   */\n  self.defer.cancel = function(deferId) {\n    if (pendingDeferIds[deferId]) {\n      delete pendingDeferIds[deferId];\n      clearTimeout(deferId);\n      completeOutstandingRequest(noop);\n      return true;\n    }\n    return false;\n  };\n\n}\n\nfunction $BrowserProvider(){\n  this.$get = ['$window', '$log', '$sniffer', '$document',\n      function( $window,   $log,   $sniffer,   $document){\n        return new Browser($window, $document, $log, $sniffer);\n      }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$cacheFactory\n *\n * @description\n * Factory that constructs cache objects.\n *\n *\n * @param {string} cacheId Name or id of the newly created cache.\n * @param {object=} options Options object that specifies the cache behavior. Properties:\n *\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\n *\n * @returns {object} Newly created cache object with the following set of methods:\n *\n * - `{object}` `info()` — Returns id, size, and options of cache.\n * - `{void}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache.\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n * - `{void}` `removeAll()` — Removes all cached values.\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n *\n */\nfunction $CacheFactoryProvider() {\n\n  this.$get = function() {\n    var caches = {};\n\n    function cacheFactory(cacheId, options) {\n      if (cacheId in caches) {\n        throw Error('cacheId ' + cacheId + ' taken');\n      }\n\n      var size = 0,\n          stats = extend({}, options, {id: cacheId}),\n          data = {},\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\n          lruHash = {},\n          freshEnd = null,\n          staleEnd = null;\n\n      return caches[cacheId] = {\n\n        put: function(key, value) {\n          var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\n          refresh(lruEntry);\n\n          if (isUndefined(value)) return;\n          if (!(key in data)) size++;\n          data[key] = value;\n\n          if (size > capacity) {\n            this.remove(staleEnd.key);\n          }\n        },\n\n\n        get: function(key) {\n          var lruEntry = lruHash[key];\n\n          if (!lruEntry) return;\n\n          refresh(lruEntry);\n\n          return data[key];\n        },\n\n\n        remove: function(key) {\n          var lruEntry = lruHash[key];\n\n          if (!lruEntry) return;\n\n          if (lruEntry == freshEnd) freshEnd = lruEntry.p;\n          if (lruEntry == staleEnd) staleEnd = lruEntry.n;\n          link(lruEntry.n,lruEntry.p);\n\n          delete lruHash[key];\n          delete data[key];\n          size--;\n        },\n\n\n        removeAll: function() {\n          data = {};\n          size = 0;\n          lruHash = {};\n          freshEnd = staleEnd = null;\n        },\n\n\n        destroy: function() {\n          data = null;\n          stats = null;\n          lruHash = null;\n          delete caches[cacheId];\n        },\n\n\n        info: function() {\n          return extend({}, stats, {size: size});\n        }\n      };\n\n\n      /**\n       * makes the `entry` the freshEnd of the LRU linked list\n       */\n      function refresh(entry) {\n        if (entry != freshEnd) {\n          if (!staleEnd) {\n            staleEnd = entry;\n          } else if (staleEnd == entry) {\n            staleEnd = entry.n;\n          }\n\n          link(entry.n, entry.p);\n          link(entry, freshEnd);\n          freshEnd = entry;\n          freshEnd.n = null;\n        }\n      }\n\n\n      /**\n       * bidirectionally links two entries of the LRU linked list\n       */\n      function link(nextEntry, prevEntry) {\n        if (nextEntry != prevEntry) {\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n        }\n      }\n    }\n\n\n    cacheFactory.info = function() {\n      var info = {};\n      forEach(caches, function(cache, cacheId) {\n        info[cacheId] = cache.info();\n      });\n      return info;\n    };\n\n\n    cacheFactory.get = function(cacheId) {\n      return caches[cacheId];\n    };\n\n\n    return cacheFactory;\n  };\n}\n\n/**\n * @ngdoc object\n * @name ng.$templateCache\n *\n * @description\n * Cache used for storing html templates.\n *\n * See {@link ng.$cacheFactory $cacheFactory}.\n *\n */\nfunction $TemplateCacheProvider() {\n  this.$get = ['$cacheFactory', function($cacheFactory) {\n    return $cacheFactory('templates');\n  }];\n}\n\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n *\n * DOM-related variables:\n *\n * - \"node\" - DOM Node\n * - \"element\" - DOM Element or Node\n * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n *\n *\n * Compiler related stuff:\n *\n * - \"linkFn\" - linking fn of a single directive\n * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n */\n\n\nvar NON_ASSIGNABLE_MODEL_EXPRESSION = 'Non-assignable model expression: ';\n\n\n/**\n * @ngdoc function\n * @name ng.$compile\n * @function\n *\n * @description\n * Compiles a piece of HTML string or DOM into a template and produces a template function, which\n * can then be used to link {@link ng.$rootScope.Scope scope} and the template together.\n *\n * The compilation is a process of walking the DOM tree and trying to match DOM elements to\n * {@link ng.$compileProvider#directive directives}. For each match it\n * executes corresponding template function and collects the\n * instance functions into a single template function which is then returned.\n *\n * The template function can then be used once to produce the view or as it is the case with\n * {@link ng.directive:ngRepeat repeater} many-times, in which\n * case each call results in a view that is a DOM clone of the original template.\n *\n <doc:example module=\"compile\">\n   <doc:source>\n    <script>\n      // declare a new module, and inject the $compileProvider\n      angular.module('compile', [], function($compileProvider) {\n        // configure new 'compile' directive by passing a directive\n        // factory function. The factory function injects the '$compile'\n        $compileProvider.directive('compile', function($compile) {\n          // directive factory creates a link function\n          return function(scope, element, attrs) {\n            scope.$watch(\n              function(scope) {\n                 // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n              },\n              function(value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n              }\n            );\n          };\n        })\n      });\n\n      function Ctrl($scope) {\n        $scope.name = 'Angular';\n        $scope.html = 'Hello {{name}}';\n      }\n    </script>\n    <div ng-controller=\"Ctrl\">\n      <input ng-model=\"name\"> <br>\n      <textarea ng-model=\"html\"></textarea> <br>\n      <div compile=\"html\"></div>\n    </div>\n   </doc:source>\n   <doc:scenario>\n     it('should auto compile', function() {\n       expect(element('div[compile]').text()).toBe('Hello Angular');\n       input('html').enter('{{name}}!');\n       expect(element('div[compile]').text()).toBe('Angular!');\n     });\n   </doc:scenario>\n </doc:example>\n\n *\n *\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n * @param {function(angular.Scope[, cloneAttachFn]} transclude function available to directives.\n * @param {number} maxPriority only apply directives lower then given priority (Only effects the\n *                 root element(s), not their children)\n * @returns {function(scope[, cloneAttachFn])} a link function which is used to bind template\n * (a DOM element/tree) to a scope. Where:\n *\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n *               `template` and call the `cloneAttachFn` function allowing the caller to attach the\n *               cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n *               called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n *\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n *      * `scope` - is the current scope with which the linking function is working with.\n *\n * Calling the linking function returns the element of the template. It is either the original element\n * passed in, or the clone of the element if the `cloneAttachFn` is provided.\n *\n * After linking the view is not updated until after a call to $digest which typically is done by\n * Angular automatically.\n *\n * If you need access to the bound view, there are two ways to do it:\n *\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\n *   before you send them to the compiler and keep this reference around.\n *   <pre>\n *     var element = $compile('<p>{{total}}</p>')(scope);\n *   </pre>\n *\n * - if on the other hand, you need the element to be cloned, the view reference from the original\n *   example would not point to the clone, but rather to the original template that was cloned. In\n *   this case, you can access the clone via the cloneAttachFn:\n *   <pre>\n *     var templateHTML = angular.element('<p>{{total}}</p>'),\n *         scope = ....;\n *\n *     var clonedElement = $compile(templateHTML)(scope, function(clonedElement, scope) {\n *       //attach the clone to DOM document at the right place\n *     });\n *\n *     //now we have reference to the cloned DOM via `clone`\n *   </pre>\n *\n *\n * For information on how the compiler works, see the\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n */\n\n\n/**\n * @ngdoc service\n * @name ng.$compileProvider\n * @function\n *\n * @description\n */\n$CompileProvider.$inject = ['$provide'];\nfunction $CompileProvider($provide) {\n  var hasDirectives = {},\n      Suffix = 'Directive',\n      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive\\:\\s*([\\d\\w\\-_]+)\\s+(.*)$/,\n      CLASS_DIRECTIVE_REGEXP = /(([\\d\\w\\-_]+)(?:\\:([^;]+))?;?)/,\n      MULTI_ROOT_TEMPLATE_ERROR = 'Template must have exactly one root element. was: ',\n      urlSanitizationWhitelist = /^\\s*(https?|ftp|mailto|file):/;\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$compileProvider#directive\n   * @methodOf ng.$compileProvider\n   * @function\n   *\n   * @description\n   * Register a new directives with the compiler.\n   *\n   * @param {string} name Name of the directive in camel-case. (ie <code>ngBind</code> which will match as\n   *                <code>ng-bind</code>).\n   * @param {function} directiveFactory An injectable directive factroy function. See {@link guide/directive} for more\n   *                info.\n   * @returns {ng.$compileProvider} Self for chaining.\n   */\n   this.directive = function registerDirective(name, directiveFactory) {\n    if (isString(name)) {\n      assertArg(directiveFactory, 'directive');\n      if (!hasDirectives.hasOwnProperty(name)) {\n        hasDirectives[name] = [];\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n          function($injector, $exceptionHandler) {\n            var directives = [];\n            forEach(hasDirectives[name], function(directiveFactory) {\n              try {\n                var directive = $injector.invoke(directiveFactory);\n                if (isFunction(directive)) {\n                  directive = { compile: valueFn(directive) };\n                } else if (!directive.compile && directive.link) {\n                  directive.compile = valueFn(directive.link);\n                }\n                directive.priority = directive.priority || 0;\n                directive.name = directive.name || name;\n                directive.require = directive.require || (directive.controller && directive.name);\n                directive.restrict = directive.restrict || 'A';\n                directives.push(directive);\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            });\n            return directives;\n          }]);\n      }\n      hasDirectives[name].push(directiveFactory);\n    } else {\n      forEach(name, reverseParams(registerDirective));\n    }\n    return this;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$compileProvider#urlSanitizationWhitelist\n   * @methodOf ng.$compileProvider\n   * @function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into an\n   * absolute url. Afterwards the url is matched against the `urlSanitizationWhitelist` regular\n   * expression. If a match is found the original url is written into the dom. Otherwise the\n   * absolute url is prefixed with `'unsafe:'` string and only then it is written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.urlSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      urlSanitizationWhitelist = regexp;\n      return this;\n    }\n    return urlSanitizationWhitelist;\n  };\n\n\n  this.$get = [\n            '$injector', '$interpolate', '$exceptionHandler', '$http', '$templateCache', '$parse',\n            '$controller', '$rootScope', '$document',\n    function($injector,   $interpolate,   $exceptionHandler,   $http,   $templateCache,   $parse,\n             $controller,   $rootScope,   $document) {\n\n    var Attributes = function(element, attr) {\n      this.$$element = element;\n      this.$attr = attr || {};\n    };\n\n    Attributes.prototype = {\n      $normalize: directiveNormalize,\n\n\n      /**\n       * Set a normalized attribute on the element in a way such that all directives\n       * can share the attribute. This function properly handles boolean attributes.\n       * @param {string} key Normalized key. (ie ngAttribute)\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n       *     Defaults to true.\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\n       */\n      $set: function(key, value, writeAttr, attrName) {\n        var booleanKey = getBooleanAttrName(this.$$element[0], key),\n            $$observers = this.$$observers,\n            normalizedVal;\n\n        if (booleanKey) {\n          this.$$element.prop(key, value);\n          attrName = booleanKey;\n        }\n\n        this[key] = value;\n\n        // translate normalized key to actual key\n        if (attrName) {\n          this.$attr[key] = attrName;\n        } else {\n          attrName = this.$attr[key];\n          if (!attrName) {\n            this.$attr[key] = attrName = snake_case(key, '-');\n          }\n        }\n\n\n        // sanitize a[href] values\n        if (nodeName_(this.$$element[0]) === 'A' && key === 'href') {\n          urlSanitizationNode.setAttribute('href', value);\n\n          // href property always returns normalized absolute url, so we can match against that\n          normalizedVal = urlSanitizationNode.href;\n          if (!normalizedVal.match(urlSanitizationWhitelist)) {\n            this[key] = value = 'unsafe:' + normalizedVal;\n          }\n        }\n\n\n        if (writeAttr !== false) {\n          if (value === null || value === undefined) {\n            this.$$element.removeAttr(attrName);\n          } else {\n            this.$$element.attr(attrName, value);\n          }\n        }\n\n        // fire observers\n        $$observers && forEach($$observers[key], function(fn) {\n          try {\n            fn(value);\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        });\n      },\n\n\n      /**\n       * Observe an interpolated attribute.\n       * The observer will never be called, if given attribute is not interpolated.\n       *\n       * @param {string} key Normalized key. (ie ngAttribute) .\n       * @param {function(*)} fn Function that will be called whenever the attribute value changes.\n       * @returns {function(*)} the `fn` Function passed in.\n       */\n      $observe: function(key, fn) {\n        var attrs = this,\n            $$observers = (attrs.$$observers || (attrs.$$observers = {})),\n            listeners = ($$observers[key] || ($$observers[key] = []));\n\n        listeners.push(fn);\n        $rootScope.$evalAsync(function() {\n          if (!listeners.$$inter) {\n            // no one registered attribute interpolation function, so lets call it manually\n            fn(attrs[key]);\n          }\n        });\n        return fn;\n      }\n    };\n\n    var urlSanitizationNode = $document[0].createElement('a'),\n        startSymbol = $interpolate.startSymbol(),\n        endSymbol = $interpolate.endSymbol(),\n        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\n            ? identity\n            : function denormalizeTemplate(template) {\n              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n            };\n\n\n    return compile;\n\n    //================================\n\n    function compile($compileNodes, transcludeFn, maxPriority) {\n      if (!($compileNodes instanceof jqLite)) {\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can modify it.\n        $compileNodes = jqLite($compileNodes);\n      }\n      // We can not compile top level text elements since text nodes can be merged and we will\n      // not be able to attach scope data to them, so we will wrap them in <span>\n      forEach($compileNodes, function(node, index){\n        if (node.nodeType == 3 /* text node */ && node.nodeValue.match(/\\S+/) /* non-empty */ ) {\n          $compileNodes[index] = jqLite(node).wrap('<span></span>').parent()[0];\n        }\n      });\n      var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority);\n      return function publicLinkFn(scope, cloneConnectFn){\n        assertArg(scope, 'scope');\n        // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n        // and sometimes changes the structure of the DOM.\n        var $linkNode = cloneConnectFn\n          ? JQLitePrototype.clone.call($compileNodes) // IMPORTANT!!!\n          : $compileNodes;\n\n        // Attach scope only to non-text nodes.\n        for(var i = 0, ii = $linkNode.length; i<ii; i++) {\n          var node = $linkNode[i];\n          if (node.nodeType == 1 /* element */ || node.nodeType == 9 /* document */) {\n            $linkNode.eq(i).data('$scope', scope);\n          }\n        }\n        safeAddClass($linkNode, 'ng-scope');\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode);\n        return $linkNode;\n      };\n    }\n\n    function wrongMode(localName, mode) {\n      throw Error(\"Unsupported '\" + mode + \"' for '\" + localName + \"'.\");\n    }\n\n    function safeAddClass($element, className) {\n      try {\n        $element.addClass(className);\n      } catch(e) {\n        // ignore, since it means that we are trying to set class on\n        // SVG element, where class name is read-only.\n      }\n    }\n\n    /**\n     * Compile function matches each node in nodeList against the directives. Once all directives\n     * for a particular node are collected their compile functions are executed. The compile\n     * functions return values - the linking functions - are combined into a composite linking\n     * function, which is the a linking function for the node.\n     *\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n     * @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then the\n     *        rootElement must be set the jqLite collection of the compile root. This is\n     *        needed so that the jqLite collection items can be replaced with widgets.\n     * @param {number=} max directive priority\n     * @returns {?function} A composite linking function of all of the matched directives or null.\n     */\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority) {\n      var linkFns = [],\n          nodeLinkFn, childLinkFn, directives, attrs, linkFnFound;\n\n      for(var i = 0; i < nodeList.length; i++) {\n        attrs = new Attributes();\n\n        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\n        directives = collectDirectives(nodeList[i], [], attrs, maxPriority);\n\n        nodeLinkFn = (directives.length)\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement)\n            : null;\n\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal || !nodeList[i].childNodes || !nodeList[i].childNodes.length)\n            ? null\n            : compileNodes(nodeList[i].childNodes,\n                 nodeLinkFn ? nodeLinkFn.transclude : transcludeFn);\n\n        linkFns.push(nodeLinkFn);\n        linkFns.push(childLinkFn);\n        linkFnFound = (linkFnFound || nodeLinkFn || childLinkFn);\n      }\n\n      // return a linking function if we have found anything, null otherwise\n      return linkFnFound ? compositeLinkFn : null;\n\n      function compositeLinkFn(scope, nodeList, $rootElement, boundTranscludeFn) {\n        var nodeLinkFn, childLinkFn, node, childScope, childTranscludeFn, i, ii, n;\n\n        // copy nodeList so that linking doesn't break due to live list updates.\n        var stableNodeList = [];\n        for (i = 0, ii = nodeList.length; i < ii; i++) {\n          stableNodeList.push(nodeList[i]);\n        }\n\n        for(i = 0, n = 0, ii = linkFns.length; i < ii; n++) {\n          node = stableNodeList[n];\n          nodeLinkFn = linkFns[i++];\n          childLinkFn = linkFns[i++];\n\n          if (nodeLinkFn) {\n            if (nodeLinkFn.scope) {\n              childScope = scope.$new(isObject(nodeLinkFn.scope));\n              jqLite(node).data('$scope', childScope);\n            } else {\n              childScope = scope;\n            }\n            childTranscludeFn = nodeLinkFn.transclude;\n            if (childTranscludeFn || (!boundTranscludeFn && transcludeFn)) {\n              nodeLinkFn(childLinkFn, childScope, node, $rootElement,\n                  (function(transcludeFn) {\n                    return function(cloneFn) {\n                      var transcludeScope = scope.$new();\n                      transcludeScope.$$transcluded = true;\n\n                      return transcludeFn(transcludeScope, cloneFn).\n                          bind('$destroy', bind(transcludeScope, transcludeScope.$destroy));\n                    };\n                  })(childTranscludeFn || transcludeFn)\n              );\n            } else {\n              nodeLinkFn(childLinkFn, childScope, node, undefined, boundTranscludeFn);\n            }\n          } else if (childLinkFn) {\n            childLinkFn(scope, node.childNodes, undefined, boundTranscludeFn);\n          }\n        }\n      }\n    }\n\n\n    /**\n     * Looks for directives on the given node and adds them to the directive collection which is\n     * sorted.\n     *\n     * @param node Node to search.\n     * @param directives An array to which the directives are added to. This array is sorted before\n     *        the function returns.\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n     * @param {number=} maxPriority Max directive priority.\n     */\n    function collectDirectives(node, directives, attrs, maxPriority) {\n      var nodeType = node.nodeType,\n          attrsMap = attrs.$attr,\n          match,\n          className;\n\n      switch(nodeType) {\n        case 1: /* Element */\n          // use the node name: <directive>\n          addDirective(directives,\n              directiveNormalize(nodeName_(node).toLowerCase()), 'E', maxPriority);\n\n          // iterate over the attributes\n          for (var attr, name, nName, value, nAttrs = node.attributes,\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n            attr = nAttrs[j];\n            if (attr.specified) {\n              name = attr.name;\n              nName = directiveNormalize(name.toLowerCase());\n              attrsMap[nName] = name;\n              attrs[nName] = value = trim((msie && name == 'href')\n                ? decodeURIComponent(node.getAttribute(name, 2))\n                : attr.value);\n              if (getBooleanAttrName(node, nName)) {\n                attrs[nName] = true; // presence means true\n              }\n              addAttrInterpolateDirective(node, directives, value, nName);\n              addDirective(directives, nName, 'A', maxPriority);\n            }\n          }\n\n          // use class as directive\n          className = node.className;\n          if (isString(className) && className !== '') {\n            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\n              nName = directiveNormalize(match[2]);\n              if (addDirective(directives, nName, 'C', maxPriority)) {\n                attrs[nName] = trim(match[3]);\n              }\n              className = className.substr(match.index + match[0].length);\n            }\n          }\n          break;\n        case 3: /* Text Node */\n          addTextInterpolateDirective(directives, node.nodeValue);\n          break;\n        case 8: /* Comment */\n          try {\n            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n            if (match) {\n              nName = directiveNormalize(match[1]);\n              if (addDirective(directives, nName, 'M', maxPriority)) {\n                attrs[nName] = trim(match[2]);\n              }\n            }\n          } catch (e) {\n            // turns out that under some circumstances IE9 throws errors when one attempts to read comment's node value.\n            // Just ignore it and continue. (Can't seem to reproduce in test case.)\n          }\n          break;\n      }\n\n      directives.sort(byPriority);\n      return directives;\n    }\n\n\n    /**\n     * Once the directives have been collected, their compile functions are executed. This method\n     * is responsible for inlining directive templates as well as terminating the application\n     * of the directives if the terminal directive has been reached.\n     *\n     * @param {Array} directives Array of collected directives to execute their compile function.\n     *        this needs to be pre-sorted by priority order.\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n     * @param {Object} templateAttrs The shared attribute function\n     * @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n     *        argument has the root jqLite array so that we can replace nodes on it.\n     * @returns linkFn\n     */\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection) {\n      var terminalPriority = -Number.MAX_VALUE,\n          preLinkFns = [],\n          postLinkFns = [],\n          newScopeDirective = null,\n          newIsolateScopeDirective = null,\n          templateDirective = null,\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n          directive,\n          directiveName,\n          $template,\n          transcludeDirective,\n          childTranscludeFn = transcludeFn,\n          controllerDirectives,\n          linkFn,\n          directiveValue;\n\n      // executes all directives on the current element\n      for(var i = 0, ii = directives.length; i < ii; i++) {\n        directive = directives[i];\n        $template = undefined;\n\n        if (terminalPriority > directive.priority) {\n          break; // prevent further processing of directives\n        }\n\n        if (directiveValue = directive.scope) {\n          assertNoDuplicate('isolated scope', newIsolateScopeDirective, directive, $compileNode);\n          if (isObject(directiveValue)) {\n            safeAddClass($compileNode, 'ng-isolate-scope');\n            newIsolateScopeDirective = directive;\n          }\n          safeAddClass($compileNode, 'ng-scope');\n          newScopeDirective = newScopeDirective || directive;\n        }\n\n        directiveName = directive.name;\n\n        if (directiveValue = directive.controller) {\n          controllerDirectives = controllerDirectives || {};\n          assertNoDuplicate(\"'\" + directiveName + \"' controller\",\n              controllerDirectives[directiveName], directive, $compileNode);\n          controllerDirectives[directiveName] = directive;\n        }\n\n        if (directiveValue = directive.transclude) {\n          assertNoDuplicate('transclusion', transcludeDirective, directive, $compileNode);\n          transcludeDirective = directive;\n          terminalPriority = directive.priority;\n          if (directiveValue == 'element') {\n            $template = jqLite(compileNode);\n            $compileNode = templateAttrs.$$element =\n                jqLite(document.createComment(' ' + directiveName + ': ' + templateAttrs[directiveName] + ' '));\n            compileNode = $compileNode[0];\n            replaceWith(jqCollection, jqLite($template[0]), compileNode);\n            childTranscludeFn = compile($template, transcludeFn, terminalPriority);\n          } else {\n            $template = jqLite(JQLiteClone(compileNode)).contents();\n            $compileNode.html(''); // clear contents\n            childTranscludeFn = compile($template, transcludeFn);\n          }\n        }\n\n        if ((directiveValue = directive.template)) {\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n          directiveValue = denormalizeTemplate(directiveValue);\n\n          if (directive.replace) {\n            $template = jqLite('<div>' +\n                                 trim(directiveValue) +\n                               '</div>').contents();\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw new Error(MULTI_ROOT_TEMPLATE_ERROR + directiveValue);\n            }\n\n            replaceWith(jqCollection, $compileNode, compileNode);\n\n            var newTemplateAttrs = {$attr: {}};\n\n            // combine directives from the original node and from the template:\n            // - take the array of directives for this element\n            // - split it into two parts, those that were already applied and those that weren't\n            // - collect directives from the template, add them to the second group and sort them\n            // - append the second group with new directives to the first group\n            directives = directives.concat(\n                collectDirectives(\n                    compileNode,\n                    directives.splice(i + 1, directives.length - (i + 1)),\n                    newTemplateAttrs\n                )\n            );\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\n            ii = directives.length;\n          } else {\n            $compileNode.html(directiveValue);\n          }\n        }\n\n        if (directive.templateUrl) {\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i),\n              nodeLinkFn, $compileNode, templateAttrs, jqCollection, directive.replace,\n              childTranscludeFn);\n          ii = directives.length;\n        } else if (directive.compile) {\n          try {\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n            if (isFunction(linkFn)) {\n              addLinkFns(null, linkFn);\n            } else if (linkFn) {\n              addLinkFns(linkFn.pre, linkFn.post);\n            }\n          } catch (e) {\n            $exceptionHandler(e, startingTag($compileNode));\n          }\n        }\n\n        if (directive.terminal) {\n          nodeLinkFn.terminal = true;\n          terminalPriority = Math.max(terminalPriority, directive.priority);\n        }\n\n      }\n\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope;\n      nodeLinkFn.transclude = transcludeDirective && childTranscludeFn;\n\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n      return nodeLinkFn;\n\n      ////////////////////\n\n      function addLinkFns(pre, post) {\n        if (pre) {\n          pre.require = directive.require;\n          preLinkFns.push(pre);\n        }\n        if (post) {\n          post.require = directive.require;\n          postLinkFns.push(post);\n        }\n      }\n\n\n      function getControllers(require, $element) {\n        var value, retrievalMethod = 'data', optional = false;\n        if (isString(require)) {\n          while((value = require.charAt(0)) == '^' || value == '?') {\n            require = require.substr(1);\n            if (value == '^') {\n              retrievalMethod = 'inheritedData';\n            }\n            optional = optional || value == '?';\n          }\n          value = $element[retrievalMethod]('$' + require + 'Controller');\n          if (!value && !optional) {\n            throw Error(\"No controller: \" + require);\n          }\n          return value;\n        } else if (isArray(require)) {\n          value = [];\n          forEach(require, function(require) {\n            value.push(getControllers(require, $element));\n          });\n        }\n        return value;\n      }\n\n\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n        var attrs, $element, i, ii, linkFn, controller;\n\n        if (compileNode === linkNode) {\n          attrs = templateAttrs;\n        } else {\n          attrs = shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));\n        }\n        $element = attrs.$$element;\n\n        if (newIsolateScopeDirective) {\n          var LOCAL_REGEXP = /^\\s*([@=&])\\s*(\\w*)\\s*$/;\n\n          var parentScope = scope.$parent || scope;\n\n          forEach(newIsolateScopeDirective.scope, function(definiton, scopeName) {\n            var match = definiton.match(LOCAL_REGEXP) || [],\n                attrName = match[2]|| scopeName,\n                mode = match[1], // @, =, or &\n                lastValue,\n                parentGet, parentSet;\n\n            scope.$$isolateBindings[scopeName] = mode + attrName;\n\n            switch (mode) {\n\n              case '@': {\n                attrs.$observe(attrName, function(value) {\n                  scope[scopeName] = value;\n                });\n                attrs.$$observers[attrName].$$scope = parentScope;\n                break;\n              }\n\n              case '=': {\n                parentGet = $parse(attrs[attrName]);\n                parentSet = parentGet.assign || function() {\n                  // reset the change, or we will throw this exception on every $digest\n                  lastValue = scope[scopeName] = parentGet(parentScope);\n                  throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + attrs[attrName] +\n                      ' (directive: ' + newIsolateScopeDirective.name + ')');\n                };\n                lastValue = scope[scopeName] = parentGet(parentScope);\n                scope.$watch(function parentValueWatch() {\n                  var parentValue = parentGet(parentScope);\n\n                  if (parentValue !== scope[scopeName]) {\n                    // we are out of sync and need to copy\n                    if (parentValue !== lastValue) {\n                      // parent changed and it has precedence\n                      lastValue = scope[scopeName] = parentValue;\n                    } else {\n                      // if the parent can be assigned then do so\n                      parentSet(parentScope, parentValue = lastValue = scope[scopeName]);\n                    }\n                  }\n                  return parentValue;\n                });\n                break;\n              }\n\n              case '&': {\n                parentGet = $parse(attrs[attrName]);\n                scope[scopeName] = function(locals) {\n                  return parentGet(parentScope, locals);\n                };\n                break;\n              }\n\n              default: {\n                throw Error('Invalid isolate scope definition for directive ' +\n                    newIsolateScopeDirective.name + ': ' + definiton);\n              }\n            }\n          });\n        }\n\n        if (controllerDirectives) {\n          forEach(controllerDirectives, function(directive) {\n            var locals = {\n              $scope: scope,\n              $element: $element,\n              $attrs: attrs,\n              $transclude: boundTranscludeFn\n            };\n\n            controller = directive.controller;\n            if (controller == '@') {\n              controller = attrs[directive.name];\n            }\n\n            $element.data(\n                '$' + directive.name + 'Controller',\n                $controller(controller, locals));\n          });\n        }\n\n        // PRELINKING\n        for(i = 0, ii = preLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = preLinkFns[i];\n            linkFn(scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.require, $element));\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n\n        // RECURSION\n        childLinkFn && childLinkFn(scope, linkNode.childNodes, undefined, boundTranscludeFn);\n\n        // POSTLINKING\n        for(i = 0, ii = postLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = postLinkFns[i];\n            linkFn(scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.require, $element));\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n      }\n    }\n\n\n    /**\n     * looks up the directive and decorates it with exception handling and proper parameters. We\n     * call this the boundDirective.\n     *\n     * @param {string} name name of the directive to look up.\n     * @param {string} location The directive must be found in specific format.\n     *   String containing any of theses characters:\n     *\n     *   * `E`: element name\n     *   * `A': attribute\n     *   * `C`: class\n     *   * `M`: comment\n     * @returns true if directive was added.\n     */\n    function addDirective(tDirectives, name, location, maxPriority) {\n      var match = false;\n      if (hasDirectives.hasOwnProperty(name)) {\n        for(var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i<ii; i++) {\n          try {\n            directive = directives[i];\n            if ( (maxPriority === undefined || maxPriority > directive.priority) &&\n                 directive.restrict.indexOf(location) != -1) {\n              tDirectives.push(directive);\n              match = true;\n            }\n          } catch(e) { $exceptionHandler(e); }\n        }\n      }\n      return match;\n    }\n\n\n    /**\n     * When the element is replaced with HTML template then the new attributes\n     * on the template need to be merged with the existing attributes in the DOM.\n     * The desired effect is to have both of the attributes present.\n     *\n     * @param {object} dst destination attributes (original DOM)\n     * @param {object} src source attributes (from the directive template)\n     */\n    function mergeTemplateAttributes(dst, src) {\n      var srcAttr = src.$attr,\n          dstAttr = dst.$attr,\n          $element = dst.$$element;\n\n      // reapply the old attributes to the new element\n      forEach(dst, function(value, key) {\n        if (key.charAt(0) != '$') {\n          if (src[key]) {\n            value += (key === 'style' ? ';' : ' ') + src[key];\n          }\n          dst.$set(key, value, true, srcAttr[key]);\n        }\n      });\n\n      // copy the new attributes on the old attrs object\n      forEach(src, function(value, key) {\n        if (key == 'class') {\n          safeAddClass($element, value);\n          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\n        } else if (key == 'style') {\n          $element.attr('style', $element.attr('style') + ';' + value);\n        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\n          dst[key] = value;\n          dstAttr[key] = srcAttr[key];\n        }\n      });\n    }\n\n\n    function compileTemplateUrl(directives, beforeTemplateNodeLinkFn, $compileNode, tAttrs,\n        $rootElement, replace, childTranscludeFn) {\n      var linkQueue = [],\n          afterTemplateNodeLinkFn,\n          afterTemplateChildLinkFn,\n          beforeTemplateCompileNode = $compileNode[0],\n          origAsyncDirective = directives.shift(),\n          // The fact that we have to copy and patch the directive seems wrong!\n          derivedSyncDirective = extend({}, origAsyncDirective, {\n            controller: null, templateUrl: null, transclude: null, scope: null\n          });\n\n      $compileNode.html('');\n\n      $http.get(origAsyncDirective.templateUrl, {cache: $templateCache}).\n        success(function(content) {\n          var compileNode, tempTemplateAttrs, $template;\n\n          content = denormalizeTemplate(content);\n\n          if (replace) {\n            $template = jqLite('<div>' + trim(content) + '</div>').contents();\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw new Error(MULTI_ROOT_TEMPLATE_ERROR + content);\n            }\n\n            tempTemplateAttrs = {$attr: {}};\n            replaceWith($rootElement, $compileNode, compileNode);\n            collectDirectives(compileNode, directives, tempTemplateAttrs);\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n          } else {\n            compileNode = beforeTemplateCompileNode;\n            $compileNode.html(content);\n          }\n\n          directives.unshift(derivedSyncDirective);\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn);\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\n\n          while(linkQueue.length) {\n            var controller = linkQueue.pop(),\n                linkRootElement = linkQueue.pop(),\n                beforeTemplateLinkNode = linkQueue.pop(),\n                scope = linkQueue.pop(),\n                linkNode = compileNode;\n\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n              // it was cloned therefore we have to clone as well.\n              linkNode = JQLiteClone(compileNode);\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n            }\n\n            afterTemplateNodeLinkFn(function() {\n              beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, controller);\n            }, scope, linkNode, $rootElement, controller);\n          }\n          linkQueue = null;\n        }).\n        error(function(response, code, headers, config) {\n          throw Error('Failed to load template: ' + config.url);\n        });\n\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, controller) {\n        if (linkQueue) {\n          linkQueue.push(scope);\n          linkQueue.push(node);\n          linkQueue.push(rootElement);\n          linkQueue.push(controller);\n        } else {\n          afterTemplateNodeLinkFn(function() {\n            beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, controller);\n          }, scope, node, rootElement, controller);\n        }\n      };\n    }\n\n\n    /**\n     * Sorting function for bound directives.\n     */\n    function byPriority(a, b) {\n      return b.priority - a.priority;\n    }\n\n\n    function assertNoDuplicate(what, previousDirective, directive, element) {\n      if (previousDirective) {\n        throw Error('Multiple directives [' + previousDirective.name + ', ' +\n          directive.name + '] asking for ' + what + ' on: ' +  startingTag(element));\n      }\n    }\n\n\n    function addTextInterpolateDirective(directives, text) {\n      var interpolateFn = $interpolate(text, true);\n      if (interpolateFn) {\n        directives.push({\n          priority: 0,\n          compile: valueFn(function textInterpolateLinkFn(scope, node) {\n            var parent = node.parent(),\n                bindings = parent.data('$binding') || [];\n            bindings.push(interpolateFn);\n            safeAddClass(parent.data('$binding', bindings), 'ng-binding');\n            scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n              node[0].nodeValue = value;\n            });\n          })\n        });\n      }\n    }\n\n\n    function addAttrInterpolateDirective(node, directives, value, name) {\n      var interpolateFn = $interpolate(value, true);\n\n      // no interpolation found -> ignore\n      if (!interpolateFn) return;\n\n\n      directives.push({\n        priority: 100,\n        compile: valueFn(function attrInterpolateLinkFn(scope, element, attr) {\n          var $$observers = (attr.$$observers || (attr.$$observers = {}));\n\n          if (name === 'class') {\n            // we need to interpolate classes again, in the case the element was replaced\n            // and therefore the two class attrs got merged - we want to interpolate the result\n            interpolateFn = $interpolate(attr[name], true);\n          }\n\n          attr[name] = undefined;\n          ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n          (attr.$$observers && attr.$$observers[name].$$scope || scope).\n            $watch(interpolateFn, function interpolateFnWatchAction(value) {\n              attr.$set(name, value);\n            });\n        })\n      });\n    }\n\n\n    /**\n     * This is a special jqLite.replaceWith, which can replace items which\n     * have no parents, provided that the containing jqLite collection is provided.\n     *\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n     *    in the root of the tree.\n     * @param {JqLite} $element The jqLite element which we are going to replace. We keep the shell,\n     *    but replace its DOM node reference.\n     * @param {Node} newNode The new DOM node.\n     */\n    function replaceWith($rootElement, $element, newNode) {\n      var oldNode = $element[0],\n          parent = oldNode.parentNode,\n          i, ii;\n\n      if ($rootElement) {\n        for(i = 0, ii = $rootElement.length; i < ii; i++) {\n          if ($rootElement[i] == oldNode) {\n            $rootElement[i] = newNode;\n            break;\n          }\n        }\n      }\n\n      if (parent) {\n        parent.replaceChild(newNode, oldNode);\n      }\n\n      newNode[jqLite.expando] = oldNode[jqLite.expando];\n      $element[0] = newNode;\n    }\n  }];\n}\n\nvar PREFIX_REGEXP = /^(x[\\:\\-_]|data[\\:\\-_])/i;\n/**\n * Converts all accepted directives format into proper directive name.\n * All of these will become 'myDirective':\n *   my:DiRective\n *   my-directive\n *   x-my-directive\n *   data-my:directive\n *\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction directiveNormalize(name) {\n  return camelCase(name.replace(PREFIX_REGEXP, ''));\n}\n\n/**\n * @ngdoc object\n * @name ng.$compile.directive.Attributes\n * @description\n *\n * A shared object between directive compile / linking functions which contains normalized DOM element\n * attributes. The the values reflect current binding state `{{ }}`. The normalization is needed\n * since all of these are treated as equivalent in Angular:\n *\n *          <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n */\n\n/**\n * @ngdoc property\n * @name ng.$compile.directive.Attributes#$attr\n * @propertyOf ng.$compile.directive.Attributes\n * @returns {object} A map of DOM element attribute names to the normalized name. This is\n *          needed to do reverse lookup from normalized name back to actual name.\n */\n\n\n/**\n * @ngdoc function\n * @name ng.$compile.directive.Attributes#$set\n * @methodOf ng.$compile.directive.Attributes\n * @function\n *\n * @description\n * Set DOM element attribute value.\n *\n *\n * @param {string} name Normalized element attribute name of the property to modify. The name is\n *          revers translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n *          property to the original name.\n * @param {string} value Value to set the attribute to.\n */\n\n\n\n/**\n * Closure compiler type information\n */\n\nfunction nodesetLinkingFn(\n  /* angular.Scope */ scope,\n  /* NodeList */ nodeList,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\nfunction directiveLinkingFn(\n  /* nodesetLinkingFn */ nodesetLinkingFn,\n  /* angular.Scope */ scope,\n  /* Node */ node,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\n/**\n * @ngdoc object\n * @name ng.$controllerProvider\n * @description\n * The {@link ng.$controller $controller service} is used by Angular to create new\n * controllers.\n *\n * This provider allows controller registration via the\n * {@link ng.$controllerProvider#register register} method.\n */\nfunction $ControllerProvider() {\n  var controllers = {};\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$controllerProvider#register\n   * @methodOf ng.$controllerProvider\n   * @param {string} name Controller name\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n   *    annotations in the array notation).\n   */\n  this.register = function(name, constructor) {\n    if (isObject(name)) {\n      extend(controllers, name)\n    } else {\n      controllers[name] = constructor;\n    }\n  };\n\n\n  this.$get = ['$injector', '$window', function($injector, $window) {\n\n    /**\n     * @ngdoc function\n     * @name ng.$controller\n     * @requires $injector\n     *\n     * @param {Function|string} constructor If called with a function then it's considered to be the\n     *    controller constructor function. Otherwise it's considered to be a string which is used\n     *    to retrieve the controller constructor using the following steps:\n     *\n     *    * check if a controller with given name is registered via `$controllerProvider`\n     *    * check if evaluating the string on the current scope returns a constructor\n     *    * check `window[constructor]` on the global `window` object\n     *\n     * @param {Object} locals Injection locals for Controller.\n     * @return {Object} Instance of given controller.\n     *\n     * @description\n     * `$controller` service is responsible for instantiating controllers.\n     *\n     * It's just a simple call to {@link AUTO.$injector $injector}, but extracted into\n     * a service, so that one can override this service with {@link https://gist.github.com/1649788\n     * BC version}.\n     */\n    return function(constructor, locals) {\n      if(isString(constructor)) {\n        var name = constructor;\n        constructor = controllers.hasOwnProperty(name)\n            ? controllers[name]\n            : getter(locals.$scope, name, true) || getter($window, name, true);\n\n        assertArgFn(constructor, name, true);\n      }\n\n      return $injector.instantiate(constructor, locals);\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$document\n * @requires $window\n *\n * @description\n * A {@link angular.element jQuery (lite)}-wrapped reference to the browser's `window.document`\n * element.\n */\nfunction $DocumentProvider(){\n  this.$get = ['$window', function(window){\n    return jqLite(window.document);\n  }];\n}\n\n/**\n * @ngdoc function\n * @name ng.$exceptionHandler\n * @requires $log\n *\n * @description\n * Any uncaught exception in angular expressions is delegated to this service.\n * The default implementation simply delegates to `$log.error` which logs it into\n * the browser console.\n *\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n *\n * @param {Error} exception Exception associated with the error.\n * @param {string=} cause optional information about the context in which\n *       the error was thrown.\n *\n */\nfunction $ExceptionHandlerProvider() {\n  this.$get = ['$log', function($log) {\n    return function(exception, cause) {\n      $log.error.apply($log, arguments);\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$interpolateProvider\n * @function\n *\n * @description\n *\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n */\nfunction $InterpolateProvider() {\n  var startSymbol = '{{';\n  var endSymbol = '}}';\n\n  /**\n   * @ngdoc method\n   * @name ng.$interpolateProvider#startSymbol\n   * @methodOf ng.$interpolateProvider\n   * @description\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n   *\n   * @param {string=} value new value to set the starting symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.startSymbol = function(value){\n    if (value) {\n      startSymbol = value;\n      return this;\n    } else {\n      return startSymbol;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name ng.$interpolateProvider#endSymbol\n   * @methodOf ng.$interpolateProvider\n   * @description\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n   *\n   * @param {string=} value new value to set the ending symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.endSymbol = function(value){\n    if (value) {\n      endSymbol = value;\n      return this;\n    } else {\n      return endSymbol;\n    }\n  };\n\n\n  this.$get = ['$parse', function($parse) {\n    var startSymbolLength = startSymbol.length,\n        endSymbolLength = endSymbol.length;\n\n    /**\n     * @ngdoc function\n     * @name ng.$interpolate\n     * @function\n     *\n     * @requires $parse\n     *\n     * @description\n     *\n     * Compiles a string with markup into an interpolation function. This service is used by the\n     * HTML {@link ng.$compile $compile} service for data binding. See\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n     * interpolation markup.\n     *\n     *\n       <pre>\n         var $interpolate = ...; // injected\n         var exp = $interpolate('Hello {{name}}!');\n         expect(exp({name:'Angular'}).toEqual('Hello Angular!');\n       </pre>\n     *\n     *\n     * @param {string} text The text with markup to interpolate.\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n     *    embedded expression in order to return an interpolation function. Strings with no\n     *    embedded expression will return null for the interpolation function.\n     * @returns {function(context)} an interpolation function which is used to compute the interpolated\n     *    string. The function has these parameters:\n     *\n     *    * `context`: an object against which any expressions embedded in the strings are evaluated\n     *      against.\n     *\n     */\n    function $interpolate(text, mustHaveExpression) {\n      var startIndex,\n          endIndex,\n          index = 0,\n          parts = [],\n          length = text.length,\n          hasInterpolation = false,\n          fn,\n          exp,\n          concat = [];\n\n      while(index < length) {\n        if ( ((startIndex = text.indexOf(startSymbol, index)) != -1) &&\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) ) {\n          (index != startIndex) && parts.push(text.substring(index, startIndex));\n          parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));\n          fn.exp = exp;\n          index = endIndex + endSymbolLength;\n          hasInterpolation = true;\n        } else {\n          // we did not find anything, so we have to add the remainder to the parts array\n          (index != length) && parts.push(text.substring(index));\n          index = length;\n        }\n      }\n\n      if (!(length = parts.length)) {\n        // we added, nothing, must have been an empty string.\n        parts.push('');\n        length = 1;\n      }\n\n      if (!mustHaveExpression  || hasInterpolation) {\n        concat.length = length;\n        fn = function(context) {\n          for(var i = 0, ii = length, part; i<ii; i++) {\n            if (typeof (part = parts[i]) == 'function') {\n              part = part(context);\n              if (part == null || part == undefined) {\n                part = '';\n              } else if (typeof part != 'string') {\n                part = toJson(part);\n              }\n            }\n            concat[i] = part;\n          }\n          return concat.join('');\n        };\n        fn.exp = text;\n        fn.parts = parts;\n        return fn;\n      }\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name ng.$interpolate#startSymbol\n     * @methodOf ng.$interpolate\n     * @description\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n     *\n     * Use {@link ng.$interpolateProvider#startSymbol $interpolateProvider#startSymbol} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.startSymbol = function() {\n      return startSymbol;\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name ng.$interpolate#endSymbol\n     * @methodOf ng.$interpolate\n     * @description\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n     *\n     * Use {@link ng.$interpolateProvider#endSymbol $interpolateProvider#endSymbol} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.endSymbol = function() {\n      return endSymbol;\n    }\n\n    return $interpolate;\n  }];\n}\n\nvar URL_MATCH = /^([^:]+):\\/\\/(\\w+:{0,1}\\w*@)?(\\{?[\\w\\.-]*\\}?)(:([0-9]+))?(\\/[^\\?#]*)?(\\?([^#]*))?(#(.*))?$/,\n    PATH_MATCH = /^([^\\?#]*)?(\\?([^#]*))?(#(.*))?$/,\n    HASH_MATCH = PATH_MATCH,\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\n\n\n/**\n * Encode path using encodeUriSegment, ignoring forward slashes\n *\n * @param {string} path Path to encode\n * @returns {string}\n */\nfunction encodePath(path) {\n  var segments = path.split('/'),\n      i = segments.length;\n\n  while (i--) {\n    segments[i] = encodeUriSegment(segments[i]);\n  }\n\n  return segments.join('/');\n}\n\nfunction stripHash(url) {\n  return url.split('#')[0];\n}\n\n\nfunction matchUrl(url, obj) {\n  var match = URL_MATCH.exec(url);\n\n  match = {\n      protocol: match[1],\n      host: match[3],\n      port: int(match[5]) || DEFAULT_PORTS[match[1]] || null,\n      path: match[6] || '/',\n      search: match[8],\n      hash: match[10]\n    };\n\n  if (obj) {\n    obj.$$protocol = match.protocol;\n    obj.$$host = match.host;\n    obj.$$port = match.port;\n  }\n\n  return match;\n}\n\n\nfunction composeProtocolHostPort(protocol, host, port) {\n  return protocol + '://' + host + (port == DEFAULT_PORTS[protocol] ? '' : ':' + port);\n}\n\n\nfunction pathPrefixFromBase(basePath) {\n  return basePath.substr(0, basePath.lastIndexOf('/'));\n}\n\n\nfunction convertToHtml5Url(url, basePath, hashPrefix) {\n  var match = matchUrl(url);\n\n  // already html5 url\n  if (decodeURIComponent(match.path) != basePath || isUndefined(match.hash) ||\n      match.hash.indexOf(hashPrefix) !== 0) {\n    return url;\n  // convert hashbang url -> html5 url\n  } else {\n    return composeProtocolHostPort(match.protocol, match.host, match.port) +\n           pathPrefixFromBase(basePath) + match.hash.substr(hashPrefix.length);\n  }\n}\n\n\nfunction convertToHashbangUrl(url, basePath, hashPrefix) {\n  var match = matchUrl(url);\n\n  // already hashbang url\n  if (decodeURIComponent(match.path) == basePath && !isUndefined(match.hash) &&\n      match.hash.indexOf(hashPrefix) === 0) {\n    return url;\n  // convert html5 url -> hashbang url\n  } else {\n    var search = match.search && '?' + match.search || '',\n        hash = match.hash && '#' + match.hash || '',\n        pathPrefix = pathPrefixFromBase(basePath),\n        path = match.path.substr(pathPrefix.length);\n\n    if (match.path.indexOf(pathPrefix) !== 0) {\n      throw Error('Invalid url \"' + url + '\", missing path prefix \"' + pathPrefix + '\" !');\n    }\n\n    return composeProtocolHostPort(match.protocol, match.host, match.port) + basePath +\n           '#' + hashPrefix + path + search + hash;\n  }\n}\n\n\n/**\n * LocationUrl represents an url\n * This object is exposed as $location service when HTML5 mode is enabled and supported\n *\n * @constructor\n * @param {string} url HTML5 url\n * @param {string} pathPrefix\n */\nfunction LocationUrl(url, pathPrefix, appBaseUrl) {\n  pathPrefix = pathPrefix || '';\n\n  /**\n   * Parse given html5 (regular) url string into properties\n   * @param {string} newAbsoluteUrl HTML5 url\n   * @private\n   */\n  this.$$parse = function(newAbsoluteUrl) {\n    var match = matchUrl(newAbsoluteUrl, this);\n\n    if (match.path.indexOf(pathPrefix) !== 0) {\n      throw Error('Invalid url \"' + newAbsoluteUrl + '\", missing path prefix \"' + pathPrefix + '\" !');\n    }\n\n    this.$$path = decodeURIComponent(match.path.substr(pathPrefix.length));\n    this.$$search = parseKeyValue(match.search);\n    this.$$hash = match.hash && decodeURIComponent(match.hash) || '';\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = composeProtocolHostPort(this.$$protocol, this.$$host, this.$$port) +\n                    pathPrefix + this.$$url;\n  };\n\n\n  this.$$rewriteAppUrl = function(absoluteLinkUrl) {\n    if(absoluteLinkUrl.indexOf(appBaseUrl) == 0) {\n      return absoluteLinkUrl;\n    }\n  }\n\n\n  this.$$parse(url);\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when html5 history api is disabled or not supported\n *\n * @constructor\n * @param {string} url Legacy url\n * @param {string} hashPrefix Prefix for hash part (containing path and search)\n */\nfunction LocationHashbangUrl(url, hashPrefix, appBaseUrl) {\n  var basePath;\n\n  /**\n   * Parse given hashbang url into properties\n   * @param {string} url Hashbang url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var match = matchUrl(url, this);\n\n\n    if (match.hash && match.hash.indexOf(hashPrefix) !== 0) {\n      throw Error('Invalid url \"' + url + '\", missing hash prefix \"' + hashPrefix + '\" !');\n    }\n\n    basePath = match.path + (match.search ? '?' + match.search : '');\n    match = HASH_MATCH.exec((match.hash || '').substr(hashPrefix.length));\n    if (match[1]) {\n      this.$$path = (match[1].charAt(0) == '/' ? '' : '/') + decodeURIComponent(match[1]);\n    } else {\n      this.$$path = '';\n    }\n\n    this.$$search = parseKeyValue(match[3]);\n    this.$$hash = match[5] && decodeURIComponent(match[5]) || '';\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose hashbang url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = composeProtocolHostPort(this.$$protocol, this.$$host, this.$$port) +\n                    basePath + (this.$$url ? '#' + hashPrefix + this.$$url : '');\n  };\n\n  this.$$rewriteAppUrl = function(absoluteLinkUrl) {\n    if(absoluteLinkUrl.indexOf(appBaseUrl) == 0) {\n      return absoluteLinkUrl;\n    }\n  }\n\n\n  this.$$parse(url);\n}\n\n\nLocationUrl.prototype = {\n\n  /**\n   * Has any change been replacing ?\n   * @private\n   */\n  $$replace: false,\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#absUrl\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return full url representation with all segments encoded according to rules specified in\n   * {@link http://www.ietf.org/rfc/rfc3986.txt RFC 3986}.\n   *\n   * @return {string} full url\n   */\n  absUrl: locationGetter('$$absUrl'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#url\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\n   *\n   * Change path, search and hash, when called with parameter and return `$location`.\n   *\n   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\n   * @return {string} url\n   */\n  url: function(url, replace) {\n    if (isUndefined(url))\n      return this.$$url;\n\n    var match = PATH_MATCH.exec(url);\n    if (match[1]) this.path(decodeURIComponent(match[1]));\n    if (match[2] || match[1]) this.search(match[3] || '');\n    this.hash(match[5] || '', replace);\n\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#protocol\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return protocol of current url.\n   *\n   * @return {string} protocol of current url\n   */\n  protocol: locationGetter('$$protocol'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#host\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return host of current url.\n   *\n   * @return {string} host of current url.\n   */\n  host: locationGetter('$$host'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#port\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return port of current url.\n   *\n   * @return {Number} port\n   */\n  port: locationGetter('$$port'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#path\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return path of current url when called without any parameter.\n   *\n   * Change path when called with parameter and return `$location`.\n   *\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n   * if it is missing.\n   *\n   * @param {string=} path New path\n   * @return {string} path\n   */\n  path: locationGetterSetter('$$path', function(path) {\n    return path.charAt(0) == '/' ? path : '/' + path;\n  }),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#search\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return search part (as object) of current url when called without any parameter.\n   *\n   * Change search part when called with parameter and return `$location`.\n   *\n   * @param {string|object<string,string>=} search New search params - string or hash object\n   * @param {string=} paramValue If `search` is a string, then `paramValue` will override only a\n   *    single search parameter. If the value is `null`, the parameter will be deleted.\n   *\n   * @return {string} search\n   */\n  search: function(search, paramValue) {\n    if (isUndefined(search))\n      return this.$$search;\n\n    if (isDefined(paramValue)) {\n      if (paramValue === null) {\n        delete this.$$search[search];\n      } else {\n        this.$$search[search] = paramValue;\n      }\n    } else {\n      this.$$search = isString(search) ? parseKeyValue(search) : search;\n    }\n\n    this.$$compose();\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#hash\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return hash fragment when called without any parameter.\n   *\n   * Change hash fragment when called with parameter and return `$location`.\n   *\n   * @param {string=} hash New hash fragment\n   * @return {string} hash\n   */\n  hash: locationGetterSetter('$$hash', identity),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#replace\n   * @methodOf ng.$location\n   *\n   * @description\n   * If called, all changes to $location during current `$digest` will be replacing current history\n   * record, instead of adding new one.\n   */\n  replace: function() {\n    this.$$replace = true;\n    return this;\n  }\n};\n\nLocationHashbangUrl.prototype = inherit(LocationUrl.prototype);\n\nfunction LocationHashbangInHtml5Url(url, hashPrefix, appBaseUrl, baseExtra) {\n  LocationHashbangUrl.apply(this, arguments);\n\n\n  this.$$rewriteAppUrl = function(absoluteLinkUrl) {\n    if (absoluteLinkUrl.indexOf(appBaseUrl) == 0) {\n      return appBaseUrl + baseExtra + '#' + hashPrefix  + absoluteLinkUrl.substr(appBaseUrl.length);\n    }\n  }\n}\n\nLocationHashbangInHtml5Url.prototype = inherit(LocationHashbangUrl.prototype);\n\nfunction locationGetter(property) {\n  return function() {\n    return this[property];\n  };\n}\n\n\nfunction locationGetterSetter(property, preprocess) {\n  return function(value) {\n    if (isUndefined(value))\n      return this[property];\n\n    this[property] = preprocess(value);\n    this.$$compose();\n\n    return this;\n  };\n}\n\n\n/**\n * @ngdoc object\n * @name ng.$location\n *\n * @requires $browser\n * @requires $sniffer\n * @requires $rootElement\n *\n * @description\n * The $location service parses the URL in the browser address bar (based on the\n * {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL\n * available to your application. Changes to the URL in the address bar are reflected into\n * $location service and changes to $location are reflected into the browser address bar.\n *\n * **The $location service:**\n *\n * - Exposes the current URL in the browser address bar, so you can\n *   - Watch and observe the URL.\n *   - Change the URL.\n * - Synchronizes the URL with the browser when the user\n *   - Changes the address bar.\n *   - Clicks the back or forward button (or clicks a History link).\n *   - Clicks on a link.\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n *\n * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular\n * Services: Using $location}\n */\n\n/**\n * @ngdoc object\n * @name ng.$locationProvider\n * @description\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n */\nfunction $LocationProvider(){\n  var hashPrefix = '',\n      html5Mode = false;\n\n  /**\n   * @ngdoc property\n   * @name ng.$locationProvider#hashPrefix\n   * @methodOf ng.$locationProvider\n   * @description\n   * @param {string=} prefix Prefix for hash part (containing path and search)\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.hashPrefix = function(prefix) {\n    if (isDefined(prefix)) {\n      hashPrefix = prefix;\n      return this;\n    } else {\n      return hashPrefix;\n    }\n  };\n\n  /**\n   * @ngdoc property\n   * @name ng.$locationProvider#html5Mode\n   * @methodOf ng.$locationProvider\n   * @description\n   * @param {string=} mode Use HTML5 strategy if available.\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.html5Mode = function(mode) {\n    if (isDefined(mode)) {\n      html5Mode = mode;\n      return this;\n    } else {\n      return html5Mode;\n    }\n  };\n\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement',\n      function( $rootScope,   $browser,   $sniffer,   $rootElement) {\n    var $location,\n        basePath,\n        pathPrefix,\n        initUrl = $browser.url(),\n        initUrlParts = matchUrl(initUrl),\n        appBaseUrl;\n\n    if (html5Mode) {\n      basePath = $browser.baseHref() || '/';\n      pathPrefix = pathPrefixFromBase(basePath);\n      appBaseUrl =\n          composeProtocolHostPort(initUrlParts.protocol, initUrlParts.host, initUrlParts.port) +\n          pathPrefix + '/';\n\n      if ($sniffer.history) {\n        $location = new LocationUrl(\n          convertToHtml5Url(initUrl, basePath, hashPrefix),\n          pathPrefix, appBaseUrl);\n      } else {\n        $location = new LocationHashbangInHtml5Url(\n          convertToHashbangUrl(initUrl, basePath, hashPrefix),\n          hashPrefix, appBaseUrl, basePath.substr(pathPrefix.length + 1));\n      }\n    } else {\n      appBaseUrl =\n          composeProtocolHostPort(initUrlParts.protocol, initUrlParts.host, initUrlParts.port) +\n          (initUrlParts.path || '') +\n          (initUrlParts.search ? ('?' + initUrlParts.search) : '') +\n          '#' + hashPrefix + '/';\n\n      $location = new LocationHashbangUrl(initUrl, hashPrefix, appBaseUrl);\n    }\n\n    $rootElement.bind('click', function(event) {\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n      // currently we open nice url link and redirect then\n\n      if (event.ctrlKey || event.metaKey || event.which == 2) return;\n\n      var elm = jqLite(event.target);\n\n      // traverse the DOM up to find first A tag\n      while (lowercase(elm[0].nodeName) !== 'a') {\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n      }\n\n      var absHref = elm.prop('href'),\n          rewrittenUrl = $location.$$rewriteAppUrl(absHref);\n\n      if (absHref && !elm.attr('target') && rewrittenUrl) {\n        // update location manually\n        $location.$$parse(rewrittenUrl);\n        $rootScope.$apply();\n        event.preventDefault();\n        // hack to work around FF6 bug 684208 when scenario runner clicks on links\n        window.angular['ff-684208-preventDefault'] = true;\n      }\n    });\n\n\n    // rewrite hashbang url <> html5 url\n    if ($location.absUrl() != initUrl) {\n      $browser.url($location.absUrl(), true);\n    }\n\n    // update $location when $browser url changes\n    $browser.onUrlChange(function(newUrl) {\n      if ($location.absUrl() != newUrl) {\n        if ($rootScope.$broadcast('$locationChangeStart', newUrl, $location.absUrl()).defaultPrevented) {\n          $browser.url($location.absUrl());\n          return;\n        }\n        $rootScope.$evalAsync(function() {\n          var oldUrl = $location.absUrl();\n\n          $location.$$parse(newUrl);\n          afterLocationChange(oldUrl);\n        });\n        if (!$rootScope.$$phase) $rootScope.$digest();\n      }\n    });\n\n    // update browser\n    var changeCounter = 0;\n    $rootScope.$watch(function $locationWatch() {\n      var oldUrl = $browser.url();\n      var currentReplace = $location.$$replace;\n\n      if (!changeCounter || oldUrl != $location.absUrl()) {\n        changeCounter++;\n        $rootScope.$evalAsync(function() {\n          if ($rootScope.$broadcast('$locationChangeStart', $location.absUrl(), oldUrl).\n              defaultPrevented) {\n            $location.$$parse(oldUrl);\n          } else {\n            $browser.url($location.absUrl(), currentReplace);\n            afterLocationChange(oldUrl);\n          }\n        });\n      }\n      $location.$$replace = false;\n\n      return changeCounter;\n    });\n\n    return $location;\n\n    function afterLocationChange(oldUrl) {\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl);\n    }\n}];\n}\n\n/**\n * @ngdoc object\n * @name ng.$log\n * @requires $window\n *\n * @description\n * Simple service for logging. Default implementation writes the message\n * into the browser's console (if present).\n *\n * The main purpose of this service is to simplify debugging and troubleshooting.\n *\n * @example\n   <example>\n     <file name=\"script.js\">\n       function LogCtrl($scope, $log) {\n         $scope.$log = $log;\n         $scope.message = 'Hello World!';\n       }\n     </file>\n     <file name=\"index.html\">\n       <div ng-controller=\"LogCtrl\">\n         <p>Reload this page with open console, enter text and hit the log button...</p>\n         Message:\n         <input type=\"text\" ng-model=\"message\"/>\n         <button ng-click=\"$log.log(message)\">log</button>\n         <button ng-click=\"$log.warn(message)\">warn</button>\n         <button ng-click=\"$log.info(message)\">info</button>\n         <button ng-click=\"$log.error(message)\">error</button>\n       </div>\n     </file>\n   </example>\n */\n\nfunction $LogProvider(){\n  this.$get = ['$window', function($window){\n    return {\n      /**\n       * @ngdoc method\n       * @name ng.$log#log\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write a log message\n       */\n      log: consoleLog('log'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#warn\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write a warning message\n       */\n      warn: consoleLog('warn'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#info\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write an information message\n       */\n      info: consoleLog('info'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#error\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write an error message\n       */\n      error: consoleLog('error')\n    };\n\n    function formatError(arg) {\n      if (arg instanceof Error) {\n        if (arg.stack) {\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n              ? 'Error: ' + arg.message + '\\n' + arg.stack\n              : arg.stack;\n        } else if (arg.sourceURL) {\n          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n        }\n      }\n      return arg;\n    }\n\n    function consoleLog(type) {\n      var console = $window.console || {},\n          logFn = console[type] || console.log || noop;\n\n      if (logFn.apply) {\n        return function() {\n          var args = [];\n          forEach(arguments, function(arg) {\n            args.push(formatError(arg));\n          });\n          return logFn.apply(console, args);\n        };\n      }\n\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n      return function(arg1, arg2) {\n        logFn(arg1, arg2);\n      }\n    }\n  }];\n}\n\nvar OPERATORS = {\n    'null':function(){return null;},\n    'true':function(){return true;},\n    'false':function(){return false;},\n    undefined:noop,\n    '+':function(self, locals, a,b){\n      a=a(self, locals); b=b(self, locals);\n      if (isDefined(a)) {\n        if (isDefined(b)) {\n          return a + b;\n        }\n        return a;\n      }\n      return isDefined(b)?b:undefined;},\n    '-':function(self, locals, a,b){a=a(self, locals); b=b(self, locals); return (isDefined(a)?a:0)-(isDefined(b)?b:0);},\n    '*':function(self, locals, a,b){return a(self, locals)*b(self, locals);},\n    '/':function(self, locals, a,b){return a(self, locals)/b(self, locals);},\n    '%':function(self, locals, a,b){return a(self, locals)%b(self, locals);},\n    '^':function(self, locals, a,b){return a(self, locals)^b(self, locals);},\n    '=':noop,\n    '==':function(self, locals, a,b){return a(self, locals)==b(self, locals);},\n    '!=':function(self, locals, a,b){return a(self, locals)!=b(self, locals);},\n    '<':function(self, locals, a,b){return a(self, locals)<b(self, locals);},\n    '>':function(self, locals, a,b){return a(self, locals)>b(self, locals);},\n    '<=':function(self, locals, a,b){return a(self, locals)<=b(self, locals);},\n    '>=':function(self, locals, a,b){return a(self, locals)>=b(self, locals);},\n    '&&':function(self, locals, a,b){return a(self, locals)&&b(self, locals);},\n    '||':function(self, locals, a,b){return a(self, locals)||b(self, locals);},\n    '&':function(self, locals, a,b){return a(self, locals)&b(self, locals);},\n//    '|':function(self, locals, a,b){return a|b;},\n    '|':function(self, locals, a,b){return b(self, locals)(self, locals, a(self, locals));},\n    '!':function(self, locals, a){return !a(self, locals);}\n};\nvar ESCAPE = {\"n\":\"\\n\", \"f\":\"\\f\", \"r\":\"\\r\", \"t\":\"\\t\", \"v\":\"\\v\", \"'\":\"'\", '\"':'\"'};\n\nfunction lex(text, csp){\n  var tokens = [],\n      token,\n      index = 0,\n      json = [],\n      ch,\n      lastCh = ':'; // can start regexp\n\n  while (index < text.length) {\n    ch = text.charAt(index);\n    if (is('\"\\'')) {\n      readString(ch);\n    } else if (isNumber(ch) || is('.') && isNumber(peek())) {\n      readNumber();\n    } else if (isIdent(ch)) {\n      readIdent();\n      // identifiers can only be if the preceding char was a { or ,\n      if (was('{,') && json[0]=='{' &&\n         (token=tokens[tokens.length-1])) {\n        token.json = token.text.indexOf('.') == -1;\n      }\n    } else if (is('(){}[].,;:')) {\n      tokens.push({\n        index:index,\n        text:ch,\n        json:(was(':[,') && is('{[')) || is('}]:,')\n      });\n      if (is('{[')) json.unshift(ch);\n      if (is('}]')) json.shift();\n      index++;\n    } else if (isWhitespace(ch)) {\n      index++;\n      continue;\n    } else {\n      var ch2 = ch + peek(),\n          fn = OPERATORS[ch],\n          fn2 = OPERATORS[ch2];\n      if (fn2) {\n        tokens.push({index:index, text:ch2, fn:fn2});\n        index += 2;\n      } else if (fn) {\n        tokens.push({index:index, text:ch, fn:fn, json: was('[,:') && is('+-')});\n        index += 1;\n      } else {\n        throwError(\"Unexpected next character \", index, index+1);\n      }\n    }\n    lastCh = ch;\n  }\n  return tokens;\n\n  function is(chars) {\n    return chars.indexOf(ch) != -1;\n  }\n\n  function was(chars) {\n    return chars.indexOf(lastCh) != -1;\n  }\n\n  function peek() {\n    return index + 1 < text.length ? text.charAt(index + 1) : false;\n  }\n  function isNumber(ch) {\n    return '0' <= ch && ch <= '9';\n  }\n  function isWhitespace(ch) {\n    return ch == ' ' || ch == '\\r' || ch == '\\t' ||\n           ch == '\\n' || ch == '\\v' || ch == '\\u00A0'; // IE treats non-breaking space as \\u00A0\n  }\n  function isIdent(ch) {\n    return 'a' <= ch && ch <= 'z' ||\n           'A' <= ch && ch <= 'Z' ||\n           '_' == ch || ch == '$';\n  }\n  function isExpOperator(ch) {\n    return ch == '-' || ch == '+' || isNumber(ch);\n  }\n\n  function throwError(error, start, end) {\n    end = end || index;\n    throw Error(\"Lexer Error: \" + error + \" at column\" +\n        (isDefined(start)\n            ? \"s \" + start +  \"-\" + index + \" [\" + text.substring(start, end) + \"]\"\n            : \" \" + end) +\n        \" in expression [\" + text + \"].\");\n  }\n\n  function readNumber() {\n    var number = \"\";\n    var start = index;\n    while (index < text.length) {\n      var ch = lowercase(text.charAt(index));\n      if (ch == '.' || isNumber(ch)) {\n        number += ch;\n      } else {\n        var peekCh = peek();\n        if (ch == 'e' && isExpOperator(peekCh)) {\n          number += ch;\n        } else if (isExpOperator(ch) &&\n            peekCh && isNumber(peekCh) &&\n            number.charAt(number.length - 1) == 'e') {\n          number += ch;\n        } else if (isExpOperator(ch) &&\n            (!peekCh || !isNumber(peekCh)) &&\n            number.charAt(number.length - 1) == 'e') {\n          throwError('Invalid exponent');\n        } else {\n          break;\n        }\n      }\n      index++;\n    }\n    number = 1 * number;\n    tokens.push({index:start, text:number, json:true,\n      fn:function() {return number;}});\n  }\n  function readIdent() {\n    var ident = \"\",\n        start = index,\n        lastDot, peekIndex, methodName, ch;\n\n    while (index < text.length) {\n      ch = text.charAt(index);\n      if (ch == '.' || isIdent(ch) || isNumber(ch)) {\n        if (ch == '.') lastDot = index;\n        ident += ch;\n      } else {\n        break;\n      }\n      index++;\n    }\n\n    //check if this is not a method invocation and if it is back out to last dot\n    if (lastDot) {\n      peekIndex = index;\n      while(peekIndex < text.length) {\n        ch = text.charAt(peekIndex);\n        if (ch == '(') {\n          methodName = ident.substr(lastDot - start + 1);\n          ident = ident.substr(0, lastDot - start);\n          index = peekIndex;\n          break;\n        }\n        if(isWhitespace(ch)) {\n          peekIndex++;\n        } else {\n          break;\n        }\n      }\n    }\n\n\n    var token = {\n      index:start,\n      text:ident\n    };\n\n    if (OPERATORS.hasOwnProperty(ident)) {\n      token.fn = token.json = OPERATORS[ident];\n    } else {\n      var getter = getterFn(ident, csp);\n      token.fn = extend(function(self, locals) {\n        return (getter(self, locals));\n      }, {\n        assign: function(self, value) {\n          return setter(self, ident, value);\n        }\n      });\n    }\n\n    tokens.push(token);\n\n    if (methodName) {\n      tokens.push({\n        index:lastDot,\n        text: '.',\n        json: false\n      });\n      tokens.push({\n        index: lastDot + 1,\n        text: methodName,\n        json: false\n      });\n    }\n  }\n\n  function readString(quote) {\n    var start = index;\n    index++;\n    var string = \"\";\n    var rawString = quote;\n    var escape = false;\n    while (index < text.length) {\n      var ch = text.charAt(index);\n      rawString += ch;\n      if (escape) {\n        if (ch == 'u') {\n          var hex = text.substring(index + 1, index + 5);\n          if (!hex.match(/[\\da-f]{4}/i))\n            throwError( \"Invalid unicode escape [\\\\u\" + hex + \"]\");\n          index += 4;\n          string += String.fromCharCode(parseInt(hex, 16));\n        } else {\n          var rep = ESCAPE[ch];\n          if (rep) {\n            string += rep;\n          } else {\n            string += ch;\n          }\n        }\n        escape = false;\n      } else if (ch == '\\\\') {\n        escape = true;\n      } else if (ch == quote) {\n        index++;\n        tokens.push({\n          index:start,\n          text:rawString,\n          string:string,\n          json:true,\n          fn:function() { return string; }\n        });\n        return;\n      } else {\n        string += ch;\n      }\n      index++;\n    }\n    throwError(\"Unterminated quote\", start);\n  }\n}\n\n/////////////////////////////////////////\n\nfunction parser(text, json, $filter, csp){\n  var ZERO = valueFn(0),\n      value,\n      tokens = lex(text, csp),\n      assignment = _assignment,\n      functionCall = _functionCall,\n      fieldAccess = _fieldAccess,\n      objectIndex = _objectIndex,\n      filterChain = _filterChain;\n\n  if(json){\n    // The extra level of aliasing is here, just in case the lexer misses something, so that\n    // we prevent any accidental execution in JSON.\n    assignment = logicalOR;\n    functionCall =\n      fieldAccess =\n      objectIndex =\n      filterChain =\n        function() { throwError(\"is not valid json\", {text:text, index:0}); };\n    value = primary();\n  } else {\n    value = statements();\n  }\n  if (tokens.length !== 0) {\n    throwError(\"is an unexpected token\", tokens[0]);\n  }\n  return value;\n\n  ///////////////////////////////////\n  function throwError(msg, token) {\n    throw Error(\"Syntax Error: Token '\" + token.text +\n      \"' \" + msg + \" at column \" +\n      (token.index + 1) + \" of the expression [\" +\n      text + \"] starting at [\" + text.substring(token.index) + \"].\");\n  }\n\n  function peekToken() {\n    if (tokens.length === 0)\n      throw Error(\"Unexpected end of expression: \" + text);\n    return tokens[0];\n  }\n\n  function peek(e1, e2, e3, e4) {\n    if (tokens.length > 0) {\n      var token = tokens[0];\n      var t = token.text;\n      if (t==e1 || t==e2 || t==e3 || t==e4 ||\n          (!e1 && !e2 && !e3 && !e4)) {\n        return token;\n      }\n    }\n    return false;\n  }\n\n  function expect(e1, e2, e3, e4){\n    var token = peek(e1, e2, e3, e4);\n    if (token) {\n      if (json && !token.json) {\n        throwError(\"is not valid json\", token);\n      }\n      tokens.shift();\n      return token;\n    }\n    return false;\n  }\n\n  function consume(e1){\n    if (!expect(e1)) {\n      throwError(\"is unexpected, expecting [\" + e1 + \"]\", peek());\n    }\n  }\n\n  function unaryFn(fn, right) {\n    return function(self, locals) {\n      return fn(self, locals, right);\n    };\n  }\n\n  function binaryFn(left, fn, right) {\n    return function(self, locals) {\n      return fn(self, locals, left, right);\n    };\n  }\n\n  function statements() {\n    var statements = [];\n    while(true) {\n      if (tokens.length > 0 && !peek('}', ')', ';', ']'))\n        statements.push(filterChain());\n      if (!expect(';')) {\n        // optimize for the common case where there is only one statement.\n        // TODO(size): maybe we should not support multiple statements?\n        return statements.length == 1\n          ? statements[0]\n          : function(self, locals){\n            var value;\n            for ( var i = 0; i < statements.length; i++) {\n              var statement = statements[i];\n              if (statement)\n                value = statement(self, locals);\n            }\n            return value;\n          };\n      }\n    }\n  }\n\n  function _filterChain() {\n    var left = expression();\n    var token;\n    while(true) {\n      if ((token = expect('|'))) {\n        left = binaryFn(left, token.fn, filter());\n      } else {\n        return left;\n      }\n    }\n  }\n\n  function filter() {\n    var token = expect();\n    var fn = $filter(token.text);\n    var argsFn = [];\n    while(true) {\n      if ((token = expect(':'))) {\n        argsFn.push(expression());\n      } else {\n        var fnInvoke = function(self, locals, input){\n          var args = [input];\n          for ( var i = 0; i < argsFn.length; i++) {\n            args.push(argsFn[i](self, locals));\n          }\n          return fn.apply(self, args);\n        };\n        return function() {\n          return fnInvoke;\n        };\n      }\n    }\n  }\n\n  function expression() {\n    return assignment();\n  }\n\n  function _assignment() {\n    var left = logicalOR();\n    var right;\n    var token;\n    if ((token = expect('='))) {\n      if (!left.assign) {\n        throwError(\"implies assignment but [\" +\n          text.substring(0, token.index) + \"] can not be assigned to\", token);\n      }\n      right = logicalOR();\n      return function(scope, locals){\n        return left.assign(scope, right(scope, locals), locals);\n      };\n    } else {\n      return left;\n    }\n  }\n\n  function logicalOR() {\n    var left = logicalAND();\n    var token;\n    while(true) {\n      if ((token = expect('||'))) {\n        left = binaryFn(left, token.fn, logicalAND());\n      } else {\n        return left;\n      }\n    }\n  }\n\n  function logicalAND() {\n    var left = equality();\n    var token;\n    if ((token = expect('&&'))) {\n      left = binaryFn(left, token.fn, logicalAND());\n    }\n    return left;\n  }\n\n  function equality() {\n    var left = relational();\n    var token;\n    if ((token = expect('==','!='))) {\n      left = binaryFn(left, token.fn, equality());\n    }\n    return left;\n  }\n\n  function relational() {\n    var left = additive();\n    var token;\n    if ((token = expect('<', '>', '<=', '>='))) {\n      left = binaryFn(left, token.fn, relational());\n    }\n    return left;\n  }\n\n  function additive() {\n    var left = multiplicative();\n    var token;\n    while ((token = expect('+','-'))) {\n      left = binaryFn(left, token.fn, multiplicative());\n    }\n    return left;\n  }\n\n  function multiplicative() {\n    var left = unary();\n    var token;\n    while ((token = expect('*','/','%'))) {\n      left = binaryFn(left, token.fn, unary());\n    }\n    return left;\n  }\n\n  function unary() {\n    var token;\n    if (expect('+')) {\n      return primary();\n    } else if ((token = expect('-'))) {\n      return binaryFn(ZERO, token.fn, unary());\n    } else if ((token = expect('!'))) {\n      return unaryFn(token.fn, unary());\n    } else {\n      return primary();\n    }\n  }\n\n\n  function primary() {\n    var primary;\n    if (expect('(')) {\n      primary = filterChain();\n      consume(')');\n    } else if (expect('[')) {\n      primary = arrayDeclaration();\n    } else if (expect('{')) {\n      primary = object();\n    } else {\n      var token = expect();\n      primary = token.fn;\n      if (!primary) {\n        throwError(\"not a primary expression\", token);\n      }\n    }\n\n    var next, context;\n    while ((next = expect('(', '[', '.'))) {\n      if (next.text === '(') {\n        primary = functionCall(primary, context);\n        context = null;\n      } else if (next.text === '[') {\n        context = primary;\n        primary = objectIndex(primary);\n      } else if (next.text === '.') {\n        context = primary;\n        primary = fieldAccess(primary);\n      } else {\n        throwError(\"IMPOSSIBLE\");\n      }\n    }\n    return primary;\n  }\n\n  function _fieldAccess(object) {\n    var field = expect().text;\n    var getter = getterFn(field, csp);\n    return extend(\n        function(scope, locals, self) {\n          return getter(self || object(scope, locals), locals);\n        },\n        {\n          assign:function(scope, value, locals) {\n            return setter(object(scope, locals), field, value);\n          }\n        }\n    );\n  }\n\n  function _objectIndex(obj) {\n    var indexFn = expression();\n    consume(']');\n    return extend(\n      function(self, locals){\n        var o = obj(self, locals),\n            i = indexFn(self, locals),\n            v, p;\n\n        if (!o) return undefined;\n        v = o[i];\n        if (v && v.then) {\n          p = v;\n          if (!('$$v' in v)) {\n            p.$$v = undefined;\n            p.then(function(val) { p.$$v = val; });\n          }\n          v = v.$$v;\n        }\n        return v;\n      }, {\n        assign:function(self, value, locals){\n          return obj(self, locals)[indexFn(self, locals)] = value;\n        }\n      });\n  }\n\n  function _functionCall(fn, contextGetter) {\n    var argsFn = [];\n    if (peekToken().text != ')') {\n      do {\n        argsFn.push(expression());\n      } while (expect(','));\n    }\n    consume(')');\n    return function(scope, locals){\n      var args = [],\n          context = contextGetter ? contextGetter(scope, locals) : scope;\n\n      for ( var i = 0; i < argsFn.length; i++) {\n        args.push(argsFn[i](scope, locals));\n      }\n      var fnPtr = fn(scope, locals, context) || noop;\n      // IE stupidity!\n      return fnPtr.apply\n          ? fnPtr.apply(context, args)\n          : fnPtr(args[0], args[1], args[2], args[3], args[4]);\n    };\n  }\n\n  // This is used with json array declaration\n  function arrayDeclaration () {\n    var elementFns = [];\n    if (peekToken().text != ']') {\n      do {\n        elementFns.push(expression());\n      } while (expect(','));\n    }\n    consume(']');\n    return function(self, locals){\n      var array = [];\n      for ( var i = 0; i < elementFns.length; i++) {\n        array.push(elementFns[i](self, locals));\n      }\n      return array;\n    };\n  }\n\n  function object () {\n    var keyValues = [];\n    if (peekToken().text != '}') {\n      do {\n        var token = expect(),\n        key = token.string || token.text;\n        consume(\":\");\n        var value = expression();\n        keyValues.push({key:key, value:value});\n      } while (expect(','));\n    }\n    consume('}');\n    return function(self, locals){\n      var object = {};\n      for ( var i = 0; i < keyValues.length; i++) {\n        var keyValue = keyValues[i];\n        object[keyValue.key] = keyValue.value(self, locals);\n      }\n      return object;\n    };\n  }\n}\n\n//////////////////////////////////////////////////\n// Parser helper functions\n//////////////////////////////////////////////////\n\nfunction setter(obj, path, setValue) {\n  var element = path.split('.');\n  for (var i = 0; element.length > 1; i++) {\n    var key = element.shift();\n    var propertyObj = obj[key];\n    if (!propertyObj) {\n      propertyObj = {};\n      obj[key] = propertyObj;\n    }\n    obj = propertyObj;\n  }\n  obj[element.shift()] = setValue;\n  return setValue;\n}\n\n/**\n * Return the value accesible from the object by path. Any undefined traversals are ignored\n * @param {Object} obj starting object\n * @param {string} path path to traverse\n * @param {boolean=true} bindFnToScope\n * @returns value as accesbile by path\n */\n//TODO(misko): this function needs to be removed\nfunction getter(obj, path, bindFnToScope) {\n  if (!path) return obj;\n  var keys = path.split('.');\n  var key;\n  var lastInstance = obj;\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    key = keys[i];\n    if (obj) {\n      obj = (lastInstance = obj)[key];\n    }\n  }\n  if (!bindFnToScope && isFunction(obj)) {\n    return bind(lastInstance, obj);\n  }\n  return obj;\n}\n\nvar getterFnCache = {};\n\n/**\n * Implementation of the \"Black Hole\" variant from:\n * - http://jsperf.com/angularjs-parse-getter/4\n * - http://jsperf.com/path-evaluation-simplified/7\n */\nfunction cspSafeGetterFn(key0, key1, key2, key3, key4) {\n  return function(scope, locals) {\n    var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope,\n        promise;\n\n    if (pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key0];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key1 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key1];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key2 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key2];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key3 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key3];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key4 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key4];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    return pathVal;\n  };\n}\n\nfunction getterFn(path, csp) {\n  if (getterFnCache.hasOwnProperty(path)) {\n    return getterFnCache[path];\n  }\n\n  var pathKeys = path.split('.'),\n      pathKeysLength = pathKeys.length,\n      fn;\n\n  if (csp) {\n    fn = (pathKeysLength < 6)\n        ? cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4])\n        : function(scope, locals) {\n          var i = 0, val;\n          do {\n            val = cspSafeGetterFn(\n                    pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++]\n                  )(scope, locals);\n\n            locals = undefined; // clear after first iteration\n            scope = val;\n          } while (i < pathKeysLength);\n          return val;\n        }\n  } else {\n    var code = 'var l, fn, p;\\n';\n    forEach(pathKeys, function(key, index) {\n      code += 'if(s === null || s === undefined) return s;\\n' +\n              'l=s;\\n' +\n              's='+ (index\n                      // we simply dereference 's' on any .dot notation\n                      ? 's'\n                      // but if we are first then we check locals first, and if so read it first\n                      : '((k&&k.hasOwnProperty(\"' + key + '\"))?k:s)') + '[\"' + key + '\"]' + ';\\n' +\n              'if (s && s.then) {\\n' +\n                ' if (!(\"$$v\" in s)) {\\n' +\n                  ' p=s;\\n' +\n                  ' p.$$v = undefined;\\n' +\n                  ' p.then(function(v) {p.$$v=v;});\\n' +\n                  '}\\n' +\n                ' s=s.$$v\\n' +\n              '}\\n';\n    });\n    code += 'return s;';\n    fn = Function('s', 'k', code); // s=scope, k=locals\n    fn.toString = function() { return code; };\n  }\n\n  return getterFnCache[path] = fn;\n}\n\n///////////////////////////////////\n\n/**\n * @ngdoc function\n * @name ng.$parse\n * @function\n *\n * @description\n *\n * Converts Angular {@link guide/expression expression} into a function.\n *\n * <pre>\n *   var getter = $parse('user.name');\n *   var setter = getter.assign;\n *   var context = {user:{name:'angular'}};\n *   var locals = {user:{name:'local'}};\n *\n *   expect(getter(context)).toEqual('angular');\n *   setter(context, 'newValue');\n *   expect(context.user.name).toEqual('newValue');\n *   expect(getter(context, locals)).toEqual('local');\n * </pre>\n *\n *\n * @param {string} expression String expression to compile.\n * @returns {function(context, locals)} a function which represents the compiled expression:\n *\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n *      are evaluated against (tipically a scope object).\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n *      `context`.\n *\n *    The return function also has an `assign` property, if the expression is assignable, which\n *    allows one to set values to expressions.\n *\n */\nfunction $ParseProvider() {\n  var cache = {};\n  this.$get = ['$filter', '$sniffer', function($filter, $sniffer) {\n    return function(exp) {\n      switch(typeof exp) {\n        case 'string':\n          return cache.hasOwnProperty(exp)\n            ? cache[exp]\n            : cache[exp] =  parser(exp, false, $filter, $sniffer.csp);\n        case 'function':\n          return exp;\n        default:\n          return noop;\n      }\n    };\n  }];\n}\n\n/**\n * @ngdoc service\n * @name ng.$q\n * @requires $rootScope\n *\n * @description\n * A promise/deferred implementation inspired by [Kris Kowal's Q](https://github.com/kriskowal/q).\n *\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n * interface for interacting with an object that represents the result of an action that is\n * performed asynchronously, and may or may not be finished at any given point in time.\n *\n * From the perspective of dealing with error handling, deferred and promise APIs are to\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n *\n * <pre>\n *   // for the purpose of this example let's assume that variables `$q` and `scope` are\n *   // available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     var deferred = $q.defer();\n *\n *     setTimeout(function() {\n *       // since this fn executes async in a future turn of the event loop, we need to wrap\n *       // our code into an $apply call so that the model changes are properly observed.\n *       scope.$apply(function() {\n *         if (okToGreet(name)) {\n *           deferred.resolve('Hello, ' + name + '!');\n *         } else {\n *           deferred.reject('Greeting ' + name + ' is not allowed.');\n *         }\n *       });\n *     }, 1000);\n *\n *     return deferred.promise;\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   });\n * </pre>\n *\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n * comes in the way of\n * [guarantees that promise and deferred APIs make](https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md).\n *\n * Additionally the promise api allows for composition that is very hard to do with the\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n * section on serial or parallel joining of promises.\n *\n *\n * # The Deferred API\n *\n * A new instance of deferred is constructed by calling `$q.defer()`.\n *\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n * that can be used for signaling the successful or unsuccessful completion of the task.\n *\n * **Methods**\n *\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n *   constructed via `$q.reject`, the promise will be rejected instead.\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n *   resolving it with a rejection constructed via `$q.reject`.\n *\n * **Properties**\n *\n * - promise – `{Promise}` – promise object associated with this deferred.\n *\n *\n * # The Promise API\n *\n * A new promise instance is created when a deferred instance is created and can be retrieved by\n * calling `deferred.promise`.\n *\n * The purpose of the promise object is to allow for interested parties to get access to the result\n * of the deferred task when it completes.\n *\n * **Methods**\n *\n * - `then(successCallback, errorCallback)` – regardless of when the promise was or will be resolved\n *   or rejected calls one of the success or error callbacks asynchronously as soon as the result\n *   is available. The callbacks are called with a single argument the result or rejection reason.\n *\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\n *   `successCallback` or `errorCallback`.\n *\n *\n * # Chaining promises\n *\n * Because calling `then` api of a promise returns a new derived promise, it is easily possible\n * to create a chain of promises:\n *\n * <pre>\n *   promiseB = promiseA.then(function(result) {\n *     return result + 1;\n *   });\n *\n *   // promiseB will be resolved immediately after promiseA is resolved and its value will be\n *   // the result of promiseA incremented by 1\n * </pre>\n *\n * It is possible to create chains of any length and since a promise can be resolved with another\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n * the promises at any point in the chain. This makes it possible to implement powerful apis like\n * $http's response interceptors.\n *\n *\n * # Differences between Kris Kowal's Q and $q\n *\n *  There are three main differences:\n *\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n * - $q promises are recognized by the templating engine in angular, which means that in templates\n *   you can treat promises attached to a scope as if they were the resulting values.\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n *   all the important functionality needed for common async tasks.\n * \n *  # Testing\n * \n *  <pre>\n *    it('should simulate promise', inject(function($q, $rootScope) {\n *      var deferred = $q.defer();\n *      var promise = deferred.promise;\n *      var resolvedValue;\n * \n *      promise.then(function(value) { resolvedValue = value; });\n *      expect(resolvedValue).toBeUndefined();\n * \n *      // Simulate resolving of promise\n *      deferred.resolve(123);\n *      // Note that the 'then' function does not get called synchronously.\n *      // This is because we want the promise API to always be async, whether or not\n *      // it got called synchronously or asynchronously.\n *      expect(resolvedValue).toBeUndefined();\n * \n *      // Propagate promise resolution to 'then' functions using $apply().\n *      $rootScope.$apply();\n *      expect(resolvedValue).toEqual(123);\n *    });\n *  </pre>\n */\nfunction $QProvider() {\n\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $rootScope.$evalAsync(callback);\n    }, $exceptionHandler);\n  }];\n}\n\n\n/**\n * Constructs a promise manager.\n *\n * @param {function(function)} nextTick Function for executing functions in the next turn.\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n *     debugging purposes.\n * @returns {object} Promise manager.\n */\nfunction qFactory(nextTick, exceptionHandler) {\n\n  /**\n   * @ngdoc\n   * @name ng.$q#defer\n   * @methodOf ng.$q\n   * @description\n   * Creates a `Deferred` object which represents a task which will finish in the future.\n   *\n   * @returns {Deferred} Returns a new instance of deferred.\n   */\n  var defer = function() {\n    var pending = [],\n        value, deferred;\n\n    deferred = {\n\n      resolve: function(val) {\n        if (pending) {\n          var callbacks = pending;\n          pending = undefined;\n          value = ref(val);\n\n          if (callbacks.length) {\n            nextTick(function() {\n              var callback;\n              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n                callback = callbacks[i];\n                value.then(callback[0], callback[1]);\n              }\n            });\n          }\n        }\n      },\n\n\n      reject: function(reason) {\n        deferred.resolve(reject(reason));\n      },\n\n\n      promise: {\n        then: function(callback, errback) {\n          var result = defer();\n\n          var wrappedCallback = function(value) {\n            try {\n              result.resolve((callback || defaultCallback)(value));\n            } catch(e) {\n              exceptionHandler(e);\n              result.reject(e);\n            }\n          };\n\n          var wrappedErrback = function(reason) {\n            try {\n              result.resolve((errback || defaultErrback)(reason));\n            } catch(e) {\n              exceptionHandler(e);\n              result.reject(e);\n            }\n          };\n\n          if (pending) {\n            pending.push([wrappedCallback, wrappedErrback]);\n          } else {\n            value.then(wrappedCallback, wrappedErrback);\n          }\n\n          return result.promise;\n        }\n      }\n    };\n\n    return deferred;\n  };\n\n\n  var ref = function(value) {\n    if (value && value.then) return value;\n    return {\n      then: function(callback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve(callback(value));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#reject\n   * @methodOf ng.$q\n   * @description\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n   * a promise chain, you don't need to worry about it.\n   *\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n   * a promise error callback and you want to forward the error to the promise derived from the\n   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n   * `reject`.\n   *\n   * <pre>\n   *   promiseB = promiseA.then(function(result) {\n   *     // success: do something and resolve promiseB\n   *     //          with the old or a new result\n   *     return result;\n   *   }, function(reason) {\n   *     // error: handle the error if possible and\n   *     //        resolve promiseB with newPromiseOrValue,\n   *     //        otherwise forward the rejection to promiseB\n   *     if (canHandle(reason)) {\n   *      // handle the error and recover\n   *      return newPromiseOrValue;\n   *     }\n   *     return $q.reject(reason);\n   *   });\n   * </pre>\n   *\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n   */\n  var reject = function(reason) {\n    return {\n      then: function(callback, errback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve((errback || defaultErrback)(reason));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#when\n   * @methodOf ng.$q\n   * @description\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\n   * the promise comes from a source that can't be trusted.\n   *\n   * @param {*} value Value or a promise\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n  var when = function(value, callback, errback) {\n    var result = defer(),\n        done;\n\n    var wrappedCallback = function(value) {\n      try {\n        return (callback || defaultCallback)(value);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    var wrappedErrback = function(reason) {\n      try {\n        return (errback || defaultErrback)(reason);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    nextTick(function() {\n      ref(value).then(function(value) {\n        if (done) return;\n        done = true;\n        result.resolve(ref(value).then(wrappedCallback, wrappedErrback));\n      }, function(reason) {\n        if (done) return;\n        done = true;\n        result.resolve(wrappedErrback(reason));\n      });\n    });\n\n    return result.promise;\n  };\n\n\n  function defaultCallback(value) {\n    return value;\n  }\n\n\n  function defaultErrback(reason) {\n    return reject(reason);\n  }\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#all\n   * @methodOf ng.$q\n   * @description\n   * Combines multiple promises into a single promise that is resolved when all of the input\n   * promises are resolved.\n   *\n   * @param {Array.<Promise>} promises An array of promises.\n   * @returns {Promise} Returns a single promise that will be resolved with an array of values,\n   *   each value corresponding to the promise at the same index in the `promises` array. If any of\n   *   the promises is resolved with a rejection, this resulting promise will be resolved with the\n   *   same rejection.\n   */\n  function all(promises) {\n    var deferred = defer(),\n        counter = promises.length,\n        results = [];\n\n    if (counter) {\n      forEach(promises, function(promise, index) {\n        ref(promise).then(function(value) {\n          if (index in results) return;\n          results[index] = value;\n          if (!(--counter)) deferred.resolve(results);\n        }, function(reason) {\n          if (index in results) return;\n          deferred.reject(reason);\n        });\n      });\n    } else {\n      deferred.resolve(results);\n    }\n\n    return deferred.promise;\n  }\n\n  return {\n    defer: defer,\n    reject: reject,\n    when: when,\n    all: all\n  };\n}\n\n/**\n * @ngdoc object\n * @name ng.$routeProvider\n * @function\n *\n * @description\n *\n * Used for configuring routes. See {@link ng.$route $route} for an example.\n */\nfunction $RouteProvider(){\n  var routes = {};\n\n  /**\n   * @ngdoc method\n   * @name ng.$routeProvider#when\n   * @methodOf ng.$routeProvider\n   *\n   * @param {string} path Route path (matched against `$location.path`). If `$location.path`\n   *    contains redundant trailing slash or is missing one, the route will still match and the\n   *    `$location.path` will be updated to add or drop the trailing slash to exactly match the\n   *    route definition.\n   *\n   *    `path` can contain named groups starting with a colon (`:name`). All characters up to the\n   *    next slash are matched and stored in `$routeParams` under the given `name` when the route\n   *    matches.\n   *\n   * @param {Object} route Mapping information to be assigned to `$route.current` on route\n   *    match.\n   *\n   *    Object properties:\n   *\n   *    - `controller` – `{(string|function()=}` – Controller fn that should be associated with newly\n   *      created scope or the name of a {@link angular.Module#controller registered controller}\n   *      if passed as a string.\n   *    - `template` – `{string=}` –  html template as a string that should be used by\n   *      {@link ng.directive:ngView ngView} or\n   *      {@link ng.directive:ngInclude ngInclude} directives.\n   *      this property takes precedence over `templateUrl`.\n   *    - `templateUrl` – `{string=}` – path to an html template that should be used by\n   *      {@link ng.directive:ngView ngView}.\n   *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n   *      be injected into the controller. If any of these dependencies are promises, they will be\n   *      resolved and converted to a value before the controller is instantiated and the\n   *      `$routeChangeSuccess` event is fired. The map object is:\n   *\n   *      - `key` – `{string}`: a name of a dependency to be injected into the controller.\n   *      - `factory` - `{string|function}`: If `string` then it is an alias for a service.\n   *        Otherwise if function, then it is {@link api/AUTO.$injector#invoke injected}\n   *        and the return value is treated as the dependency. If the result is a promise, it is resolved\n   *        before its value is injected into the controller.\n   *\n   *    - `redirectTo` – {(string|function())=} – value to update\n   *      {@link ng.$location $location} path with and trigger route redirection.\n   *\n   *      If `redirectTo` is a function, it will be called with the following parameters:\n   *\n   *      - `{Object.<string>}` - route parameters extracted from the current\n   *        `$location.path()` by applying the current route templateUrl.\n   *      - `{string}` - current `$location.path()`\n   *      - `{Object}` - current `$location.search()`\n   *\n   *      The custom `redirectTo` function is expected to return a string which will be used\n   *      to update `$location.path()` and `$location.search()`.\n   *\n   *    - `[reloadOnSearch=true]` - {boolean=} - reload route when only $location.search()\n   *    changes.\n   *\n   *      If the option is set to `false` and url in the browser changes, then\n   *      `$routeUpdate` event is broadcasted on the root scope.\n   *\n   * @returns {Object} self\n   *\n   * @description\n   * Adds a new route definition to the `$route` service.\n   */\n  this.when = function(path, route) {\n    routes[path] = extend({reloadOnSearch: true}, route);\n\n    // create redirection for trailing slashes\n    if (path) {\n      var redirectPath = (path[path.length-1] == '/')\n          ? path.substr(0, path.length-1)\n          : path +'/';\n\n      routes[redirectPath] = {redirectTo: path};\n    }\n\n    return this;\n  };\n\n  /**\n   * @ngdoc method\n   * @name ng.$routeProvider#otherwise\n   * @methodOf ng.$routeProvider\n   *\n   * @description\n   * Sets route definition that will be used on route change when no other route definition\n   * is matched.\n   *\n   * @param {Object} params Mapping information to be assigned to `$route.current`.\n   * @returns {Object} self\n   */\n  this.otherwise = function(params) {\n    this.when(null, params);\n    return this;\n  };\n\n\n  this.$get = ['$rootScope', '$location', '$routeParams', '$q', '$injector', '$http', '$templateCache',\n      function( $rootScope,   $location,   $routeParams,   $q,   $injector,   $http,   $templateCache) {\n\n    /**\n     * @ngdoc object\n     * @name ng.$route\n     * @requires $location\n     * @requires $routeParams\n     *\n     * @property {Object} current Reference to the current route definition.\n     * The route definition contains:\n     *\n     *   - `controller`: The controller constructor as define in route definition.\n     *   - `locals`: A map of locals which is used by {@link ng.$controller $controller} service for\n     *     controller instantiation. The `locals` contain\n     *     the resolved values of the `resolve` map. Additionally the `locals` also contain:\n     *\n     *     - `$scope` - The current route scope.\n     *     - `$template` - The current route template HTML.\n     *\n     * @property {Array.<Object>} routes Array of all configured routes.\n     *\n     * @description\n     * Is used for deep-linking URLs to controllers and views (HTML partials).\n     * It watches `$location.url()` and tries to map the path to an existing route definition.\n     *\n     * You can define routes through {@link ng.$routeProvider $routeProvider}'s API.\n     *\n     * The `$route` service is typically used in conjunction with {@link ng.directive:ngView ngView}\n     * directive and the {@link ng.$routeParams $routeParams} service.\n     *\n     * @example\n       This example shows how changing the URL hash causes the `$route` to match a route against the\n       URL, and the `ngView` pulls in the partial.\n\n       Note that this example is using {@link ng.directive:script inlined templates}\n       to get it working on jsfiddle as well.\n\n     <example module=\"ngView\">\n       <file name=\"index.html\">\n         <div ng-controller=\"MainCntl\">\n           Choose:\n           <a href=\"Book/Moby\">Moby</a> |\n           <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n           <a href=\"Book/Gatsby\">Gatsby</a> |\n           <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n           <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n           <div ng-view></div>\n           <hr />\n\n           <pre>$location.path() = {{$location.path()}}</pre>\n           <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>\n           <pre>$route.current.params = {{$route.current.params}}</pre>\n           <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>\n           <pre>$routeParams = {{$routeParams}}</pre>\n         </div>\n       </file>\n\n       <file name=\"book.html\">\n         controller: {{name}}<br />\n         Book Id: {{params.bookId}}<br />\n       </file>\n\n       <file name=\"chapter.html\">\n         controller: {{name}}<br />\n         Book Id: {{params.bookId}}<br />\n         Chapter Id: {{params.chapterId}}\n       </file>\n\n       <file name=\"script.js\">\n         angular.module('ngView', [], function($routeProvider, $locationProvider) {\n           $routeProvider.when('/Book/:bookId', {\n             templateUrl: 'book.html',\n             controller: BookCntl,\n             resolve: {\n               // I will cause a 1 second delay\n               delay: function($q, $timeout) {\n                 var delay = $q.defer();\n                 $timeout(delay.resolve, 1000);\n                 return delay.promise;\n               }\n             }\n           });\n           $routeProvider.when('/Book/:bookId/ch/:chapterId', {\n             templateUrl: 'chapter.html',\n             controller: ChapterCntl\n           });\n\n           // configure html5 to get links working on jsfiddle\n           $locationProvider.html5Mode(true);\n         });\n\n         function MainCntl($scope, $route, $routeParams, $location) {\n           $scope.$route = $route;\n           $scope.$location = $location;\n           $scope.$routeParams = $routeParams;\n         }\n\n         function BookCntl($scope, $routeParams) {\n           $scope.name = \"BookCntl\";\n           $scope.params = $routeParams;\n         }\n\n         function ChapterCntl($scope, $routeParams) {\n           $scope.name = \"ChapterCntl\";\n           $scope.params = $routeParams;\n         }\n       </file>\n\n       <file name=\"scenario.js\">\n         it('should load and compile correct template', function() {\n           element('a:contains(\"Moby: Ch1\")').click();\n           var content = element('.doc-example-live [ng-view]').text();\n           expect(content).toMatch(/controller\\: ChapterCntl/);\n           expect(content).toMatch(/Book Id\\: Moby/);\n           expect(content).toMatch(/Chapter Id\\: 1/);\n\n           element('a:contains(\"Scarlet\")').click();\n           sleep(2); // promises are not part of scenario waiting\n           content = element('.doc-example-live [ng-view]').text();\n           expect(content).toMatch(/controller\\: BookCntl/);\n           expect(content).toMatch(/Book Id\\: Scarlet/);\n         });\n       </file>\n     </example>\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeStart\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted before a route change. At this  point the route services starts\n     * resolving all of the dependencies needed for the route change to occurs.\n     * Typically this involves fetching the view template as well as any dependencies\n     * defined in `resolve` route property. Once  all of the dependencies are resolved\n     * `$routeChangeSuccess` is fired.\n     *\n     * @param {Route} next Future route information.\n     * @param {Route} current Current route information.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeSuccess\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted after a route dependencies are resolved.\n     * {@link ng.directive:ngView ngView} listens for the directive\n     * to instantiate the controller and render the view.\n     *\n     * @param {Object} angularEvent Synthetic event object.\n     * @param {Route} current Current route information.\n     * @param {Route|Undefined} previous Previous route information, or undefined if current is first route entered.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeError\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted if any of the resolve promises are rejected.\n     *\n     * @param {Route} current Current route information.\n     * @param {Route} previous Previous route information.\n     * @param {Route} rejection Rejection of the promise. Usually the error of the failed promise.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeUpdate\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     *\n     * The `reloadOnSearch` property has been set to false, and we are reusing the same\n     * instance of the Controller.\n     */\n\n    var forceReload = false,\n        $route = {\n          routes: routes,\n\n          /**\n           * @ngdoc method\n           * @name ng.$route#reload\n           * @methodOf ng.$route\n           *\n           * @description\n           * Causes `$route` service to reload the current route even if\n           * {@link ng.$location $location} hasn't changed.\n           *\n           * As a result of that, {@link ng.directive:ngView ngView}\n           * creates new scope, reinstantiates the controller.\n           */\n          reload: function() {\n            forceReload = true;\n            $rootScope.$evalAsync(updateRoute);\n          }\n        };\n\n    $rootScope.$on('$locationChangeSuccess', updateRoute);\n\n    return $route;\n\n    /////////////////////////////////////////////////////\n\n    /**\n     * @param on {string} current url\n     * @param when {string} route when template to match the url against\n     * @return {?Object}\n     */\n    function switchRouteMatcher(on, when) {\n      // TODO(i): this code is convoluted and inefficient, we should construct the route matching\n      //   regex only once and then reuse it\n\n      // Escape regexp special characters.\n      when = '^' + when.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\") + '$';\n      var regex = '',\n          params = [],\n          dst = {};\n\n      var re = /:(\\w+)/g,\n          paramMatch,\n          lastMatchedIndex = 0;\n\n      while ((paramMatch = re.exec(when)) !== null) {\n        // Find each :param in `when` and replace it with a capturing group.\n        // Append all other sections of when unchanged.\n        regex += when.slice(lastMatchedIndex, paramMatch.index);\n        regex += '([^\\\\/]*)';\n        params.push(paramMatch[1]);\n        lastMatchedIndex = re.lastIndex;\n      }\n      // Append trailing path part.\n      regex += when.substr(lastMatchedIndex);\n\n      var match = on.match(new RegExp(regex));\n      if (match) {\n        forEach(params, function(name, index) {\n          dst[name] = match[index + 1];\n        });\n      }\n      return match ? dst : null;\n    }\n\n    function updateRoute() {\n      var next = parseRoute(),\n          last = $route.current;\n\n      if (next && last && next.$$route === last.$$route\n          && equals(next.pathParams, last.pathParams) && !next.reloadOnSearch && !forceReload) {\n        last.params = next.params;\n        copy(last.params, $routeParams);\n        $rootScope.$broadcast('$routeUpdate', last);\n      } else if (next || last) {\n        forceReload = false;\n        $rootScope.$broadcast('$routeChangeStart', next, last);\n        $route.current = next;\n        if (next) {\n          if (next.redirectTo) {\n            if (isString(next.redirectTo)) {\n              $location.path(interpolate(next.redirectTo, next.params)).search(next.params)\n                       .replace();\n            } else {\n              $location.url(next.redirectTo(next.pathParams, $location.path(), $location.search()))\n                       .replace();\n            }\n          }\n        }\n\n        $q.when(next).\n          then(function() {\n            if (next) {\n              var keys = [],\n                  values = [],\n                  template;\n\n              forEach(next.resolve || {}, function(value, key) {\n                keys.push(key);\n                values.push(isString(value) ? $injector.get(value) : $injector.invoke(value));\n              });\n              if (isDefined(template = next.template)) {\n              } else if (isDefined(template = next.templateUrl)) {\n                template = $http.get(template, {cache: $templateCache}).\n                    then(function(response) { return response.data; });\n              }\n              if (isDefined(template)) {\n                keys.push('$template');\n                values.push(template);\n              }\n              return $q.all(values).then(function(values) {\n                var locals = {};\n                forEach(values, function(value, index) {\n                  locals[keys[index]] = value;\n                });\n                return locals;\n              });\n            }\n          }).\n          // after route change\n          then(function(locals) {\n            if (next == $route.current) {\n              if (next) {\n                next.locals = locals;\n                copy(next.params, $routeParams);\n              }\n              $rootScope.$broadcast('$routeChangeSuccess', next, last);\n            }\n          }, function(error) {\n            if (next == $route.current) {\n              $rootScope.$broadcast('$routeChangeError', next, last, error);\n            }\n          });\n      }\n    }\n\n\n    /**\n     * @returns the current active route, by matching it against the URL\n     */\n    function parseRoute() {\n      // Match a route\n      var params, match;\n      forEach(routes, function(route, path) {\n        if (!match && (params = switchRouteMatcher($location.path(), path))) {\n          match = inherit(route, {\n            params: extend({}, $location.search(), params),\n            pathParams: params});\n          match.$$route = route;\n        }\n      });\n      // No route matched; fallback to \"otherwise\" route\n      return match || routes[null] && inherit(routes[null], {params: {}, pathParams:{}});\n    }\n\n    /**\n     * @returns interpolation of the redirect path with the parametrs\n     */\n    function interpolate(string, params) {\n      var result = [];\n      forEach((string||'').split(':'), function(segment, i) {\n        if (i == 0) {\n          result.push(segment);\n        } else {\n          var segmentMatch = segment.match(/(\\w+)(.*)/);\n          var key = segmentMatch[1];\n          result.push(params[key]);\n          result.push(segmentMatch[2] || '');\n          delete params[key];\n        }\n      });\n      return result.join('');\n    }\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$routeParams\n * @requires $route\n *\n * @description\n * Current set of route parameters. The route parameters are a combination of the\n * {@link ng.$location $location} `search()`, and `path()`. The `path` parameters\n * are extracted when the {@link ng.$route $route} path is matched.\n *\n * In case of parameter name collision, `path` params take precedence over `search` params.\n *\n * The service guarantees that the identity of the `$routeParams` object will remain unchanged\n * (but its properties will likely change) even when a route change occurs.\n *\n * @example\n * <pre>\n *  // Given:\n *  // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby\n *  // Route: /Chapter/:chapterId/Section/:sectionId\n *  //\n *  // Then\n *  $routeParams ==> {chapterId:1, sectionId:2, search:'moby'}\n * </pre>\n */\nfunction $RouteParamsProvider() {\n  this.$get = valueFn({});\n}\n\n/**\n * DESIGN NOTES\n *\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\n *\n * The typical use of scope is to watch the expressions, which most of the time return the same\n * value as last time so we optimize the operation.\n *\n * Closures construction is expensive in terms of speed as well as memory:\n *   - No closures, instead use prototypical inheritance for API\n *   - Internal state needs to be stored on scope directly, which means that private state is\n *     exposed as $$____ properties\n *\n * Loop operations are optimized by using while(count--) { ... }\n *   - this means that in order to keep the same order of execution as addition we have to add\n *     items to the array at the beginning (shift) instead of at the end (push)\n *\n * Child scopes are created and removed often\n *   - Using an array would be slow since inserts in middle are expensive so we use linked list\n *\n * There are few watches then a lot of observers. This is why you don't want the observer to be\n * implemented in the same way as watch. Watch requires return of initialization function which\n * are expensive to construct.\n */\n\n\n/**\n * @ngdoc object\n * @name ng.$rootScopeProvider\n * @description\n *\n * Provider for the $rootScope service.\n */\n\n/**\n * @ngdoc function\n * @name ng.$rootScopeProvider#digestTtl\n * @methodOf ng.$rootScopeProvider\n * @description\n *\n * Sets the number of digest iterations the scope should attempt to execute before giving up and\n * assuming that the model is unstable.\n *\n * The current default is 10 iterations.\n *\n * @param {number} limit The number of digest iterations.\n */\n\n\n/**\n * @ngdoc object\n * @name ng.$rootScope\n * @description\n *\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\n * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide\n * event processing life-cycle. See {@link guide/scope developer guide on scopes}.\n */\nfunction $RootScopeProvider(){\n  var TTL = 10;\n\n  this.digestTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n    }\n    return TTL;\n  };\n\n  this.$get = ['$injector', '$exceptionHandler', '$parse',\n      function( $injector,   $exceptionHandler,   $parse) {\n\n    /**\n     * @ngdoc function\n     * @name ng.$rootScope.Scope\n     *\n     * @description\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n     * {@link AUTO.$injector $injector}. Child scopes are created using the\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n     * compiled HTML template is executed.)\n     *\n     * Here is a simple scope snippet to show how you can interact with the scope.\n     * <pre>\n        angular.injector(['ng']).invoke(function($rootScope) {\n           var scope = $rootScope.$new();\n           scope.salutation = 'Hello';\n           scope.name = 'World';\n\n           expect(scope.greeting).toEqual(undefined);\n\n           scope.$watch('name', function() {\n             scope.greeting = scope.salutation + ' ' + scope.name + '!';\n           }); // initialize the watch\n\n           expect(scope.greeting).toEqual(undefined);\n           scope.name = 'Misko';\n           // still old value, since watches have not been called yet\n           expect(scope.greeting).toEqual(undefined);\n\n           scope.$digest(); // fire all  the watches\n           expect(scope.greeting).toEqual('Hello Misko!');\n        });\n     * </pre>\n     *\n     * # Inheritance\n     * A scope can inherit from a parent scope, as in this example:\n     * <pre>\n         var parent = $rootScope;\n         var child = parent.$new();\n\n         parent.salutation = \"Hello\";\n         child.name = \"World\";\n         expect(child.salutation).toEqual('Hello');\n\n         child.salutation = \"Welcome\";\n         expect(child.salutation).toEqual('Welcome');\n         expect(parent.salutation).toEqual('Hello');\n     * </pre>\n     *\n     *\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be provided\n     *     for the current scope. Defaults to {@link ng}.\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n     *     append/override services provided by `providers`. This is handy when unit-testing and having\n     *     the need to override a default service.\n     * @returns {Object} Newly created scope.\n     *\n     */\n    function Scope() {\n      this.$id = nextUid();\n      this.$$phase = this.$parent = this.$$watchers =\n                     this.$$nextSibling = this.$$prevSibling =\n                     this.$$childHead = this.$$childTail = null;\n      this['this'] = this.$root =  this;\n      this.$$destroyed = false;\n      this.$$asyncQueue = [];\n      this.$$listeners = {};\n      this.$$isolateBindings = {};\n    }\n\n    /**\n     * @ngdoc property\n     * @name ng.$rootScope.Scope#$id\n     * @propertyOf ng.$rootScope.Scope\n     * @returns {number} Unique scope ID (monotonically increasing alphanumeric sequence) useful for\n     *   debugging.\n     */\n\n\n    Scope.prototype = {\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$new\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\n       *\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} and\n       * {@link ng.$rootScope.Scope#$digest $digest()} events. The scope can be removed from the scope\n       * hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n       *\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is desired for\n       * the scope and its child scopes to be permanently detached from the parent and thus stop\n       * participating in model change detection and listener notification by invoking.\n       *\n       * @param {boolean} isolate if true then the scope does not prototypically inherit from the\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n       *         When creating widgets it is useful for the widget to not accidentally read parent\n       *         state.\n       *\n       * @returns {Object} The newly created child scope.\n       *\n       */\n      $new: function(isolate) {\n        var Child,\n            child;\n\n        if (isFunction(isolate)) {\n          // TODO: remove at some point\n          throw Error('API-CHANGE: Use $controller to instantiate controllers.');\n        }\n        if (isolate) {\n          child = new Scope();\n          child.$root = this.$root;\n        } else {\n          Child = function() {}; // should be anonymous; This is so that when the minifier munges\n            // the name it does not become random set of chars. These will then show up as class\n            // name in the debugger.\n          Child.prototype = this;\n          child = new Child();\n          child.$id = nextUid();\n        }\n        child['this'] = child;\n        child.$$listeners = {};\n        child.$parent = this;\n        child.$$asyncQueue = [];\n        child.$$watchers = child.$$nextSibling = child.$$childHead = child.$$childTail = null;\n        child.$$prevSibling = this.$$childTail;\n        if (this.$$childHead) {\n          this.$$childTail.$$nextSibling = child;\n          this.$$childTail = child;\n        } else {\n          this.$$childHead = this.$$childTail = child;\n        }\n        return child;\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$watch\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n       *\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest $digest()} and\n       *   should return the value which will be watched. (Since {@link ng.$rootScope.Scope#$digest $digest()}\n       *   reruns when it detects changes the `watchExpression` can execute multiple times per\n       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n       * - The `listener` is called only when the value from the current `watchExpression` and the\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n       *   see below). The inequality is determined according to\n       *   {@link angular.equals} function. To save the value of the object for later comparison, the\n       *   {@link angular.copy} function is used. It also means that watching complex options will\n       *   have adverse memory and performance implications.\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire. This\n       *   is achieved by rerunning the watchers until no changes are detected. The rerun iteration\n       *   limit is 10 to prevent an infinite loop deadlock.\n       *\n       *\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\n       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a change is\n       * detected, be prepared for multiple calls to your listener.)\n       *\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n       * listener was called due to initialization.\n       *\n       *\n       * # Example\n       * <pre>\n           // let's assume that scope was dependency injected as the $rootScope\n           var scope = $rootScope;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) { scope.counter = scope.counter + 1; });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // no variable change\n           expect(scope.counter).toEqual(0);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(1);\n       * </pre>\n       *\n       *\n       *\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers a\n       *    call to the `listener`.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(scope)`: called with current `scope` as a parameter.\n       * @param {(function()|string)=} listener Callback called whenever the return value of\n       *   the `watchExpression` changes.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(newValue, oldValue, scope)`: called with current and previous values as parameters.\n       *\n       * @param {boolean=} objectEquality Compare object for equality rather than for reference.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $watch: function(watchExp, listener, objectEquality) {\n        var scope = this,\n            get = compileToFn(watchExp, 'watch'),\n            array = scope.$$watchers,\n            watcher = {\n              fn: listener,\n              last: initWatchVal,\n              get: get,\n              exp: watchExp,\n              eq: !!objectEquality\n            };\n\n        // in the case user pass string, we need to compile it, do we really need this ?\n        if (!isFunction(listener)) {\n          var listenFn = compileToFn(listener || noop, 'listener');\n          watcher.fn = function(newVal, oldVal, scope) {listenFn(scope);};\n        }\n\n        if (!array) {\n          array = scope.$$watchers = [];\n        }\n        // we use unshift since we use a while loop in $digest for speed.\n        // the while loop reads in reverse order.\n        array.unshift(watcher);\n\n        return function() {\n          arrayRemove(array, watcher);\n        };\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$digest\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and its children.\n       * Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change the model, the\n       * `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers} until no more listeners are\n       * firing. This means that it is possible to get into an infinite loop. This function will throw\n       * `'Maximum iteration limit exceeded.'` if the number of iterations exceeds 10.\n       *\n       * Usually you don't call `$digest()` directly in\n       * {@link ng.directive:ngController controllers} or in\n       * {@link ng.$compileProvider#directive directives}.\n       * Instead a call to {@link ng.$rootScope.Scope#$apply $apply()} (typically from within a\n       * {@link ng.$compileProvider#directive directives}) will force a `$digest()`.\n       *\n       * If you want to be notified whenever `$digest()` is called,\n       * you can register a `watchExpression` function  with {@link ng.$rootScope.Scope#$watch $watch()}\n       * with no `listener`.\n       *\n       * You may have a need to call `$digest()` from within unit-tests, to simulate the scope\n       * life-cycle.\n       *\n       * # Example\n       * <pre>\n           var scope = ...;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // no variable change\n           expect(scope.counter).toEqual(0);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(1);\n       * </pre>\n       *\n       */\n      $digest: function() {\n        var watch, value, last,\n            watchers,\n            asyncQueue,\n            length,\n            dirty, ttl = TTL,\n            next, current, target = this,\n            watchLog = [],\n            logIdx, logMsg;\n\n        beginPhase('$digest');\n\n        do {\n          dirty = false;\n          current = target;\n          do {\n            asyncQueue = current.$$asyncQueue;\n            while(asyncQueue.length) {\n              try {\n                current.$eval(asyncQueue.shift());\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            }\n            if ((watchers = current.$$watchers)) {\n              // process our watches\n              length = watchers.length;\n              while (length--) {\n                try {\n                  watch = watchers[length];\n                  // Most common watches are on primitives, in which case we can short\n                  // circuit it with === operator, only when === fails do we use .equals\n                  if ((value = watch.get(current)) !== (last = watch.last) &&\n                      !(watch.eq\n                          ? equals(value, last)\n                          : (typeof value == 'number' && typeof last == 'number'\n                             && isNaN(value) && isNaN(last)))) {\n                    dirty = true;\n                    watch.last = watch.eq ? copy(value) : value;\n                    watch.fn(value, ((last === initWatchVal) ? value : last), current);\n                    if (ttl < 5) {\n                      logIdx = 4 - ttl;\n                      if (!watchLog[logIdx]) watchLog[logIdx] = [];\n                      logMsg = (isFunction(watch.exp))\n                          ? 'fn: ' + (watch.exp.name || watch.exp.toString())\n                          : watch.exp;\n                      logMsg += '; newVal: ' + toJson(value) + '; oldVal: ' + toJson(last);\n                      watchLog[logIdx].push(logMsg);\n                    }\n                  }\n                } catch (e) {\n                  $exceptionHandler(e);\n                }\n              }\n            }\n\n            // Insanity Warning: scope depth-first traversal\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n            // this piece should be kept in sync with the traversal in $broadcast\n            if (!(next = (current.$$childHead || (current !== target && current.$$nextSibling)))) {\n              while(current !== target && !(next = current.$$nextSibling)) {\n                current = current.$parent;\n              }\n            }\n          } while ((current = next));\n\n          if(dirty && !(ttl--)) {\n            clearPhase();\n            throw Error(TTL + ' $digest() iterations reached. Aborting!\\n' +\n                'Watchers fired in the last 5 iterations: ' + toJson(watchLog));\n          }\n        } while (dirty || asyncQueue.length);\n\n        clearPhase();\n      },\n\n\n      /**\n       * @ngdoc event\n       * @name ng.$rootScope.Scope#$destroy\n       * @eventOf ng.$rootScope.Scope\n       * @eventType broadcast on scope being destroyed\n       *\n       * @description\n       * Broadcasted when a scope and its children are being destroyed.\n       */\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$destroy\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n       * propagate to the current scope and its children. Removal also implies that the current\n       * scope is eligible for garbage collection.\n       *\n       * The `$destroy()` is usually used by directives such as\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n       * unrolling of the loop.\n       *\n       * Just before a scope is destroyed a `$destroy` event is broadcasted on this scope.\n       * Application code can register a `$destroy` event handler that will give it chance to\n       * perform any necessary cleanup.\n       */\n      $destroy: function() {\n        // we can't destroy the root scope or a scope that has been already destroyed\n        if ($rootScope == this || this.$$destroyed) return;\n        var parent = this.$parent;\n\n        this.$broadcast('$destroy');\n        this.$$destroyed = true;\n\n        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\n        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\n        // This is bogus code that works around Chrome's GC leak\n        // see: https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\n            this.$$childTail = null;\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$eval\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Executes the `expression` on the current scope returning the result. Any exceptions in the\n       * expression are propagated (uncaught). This is useful when evaluating Angular expressions.\n       *\n       * # Example\n       * <pre>\n           var scope = ng.$rootScope.Scope();\n           scope.a = 1;\n           scope.b = 2;\n\n           expect(scope.$eval('a+b')).toEqual(3);\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n       * </pre>\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $eval: function(expr, locals) {\n        return $parse(expr)(this, locals);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$evalAsync\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Executes the expression on the current scope at a later point in time.\n       *\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only that:\n       *\n       *   - it will execute in the current script execution context (before any DOM rendering).\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n       *     `expression` execution.\n       *\n       * Any exceptions from the execution of the expression are forwarded to the\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       */\n      $evalAsync: function(expr) {\n        this.$$asyncQueue.push(expr);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$apply\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * `$apply()` is used to execute an expression in angular from outside of the angular framework.\n       * (For example from browser DOM events, setTimeout, XHR or third party libraries).\n       * Because we are calling into the angular framework we need to perform proper scope life-cycle\n       * of {@link ng.$exceptionHandler exception handling},\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\n       *\n       * ## Life cycle\n       *\n       * # Pseudo-Code of `$apply()`\n       * <pre>\n           function $apply(expr) {\n             try {\n               return $eval(expr);\n             } catch (e) {\n               $exceptionHandler(e);\n             } finally {\n               $root.$digest();\n             }\n           }\n       * </pre>\n       *\n       *\n       * Scope's `$apply()` method transitions through the following stages:\n       *\n       * 1. The {@link guide/expression expression} is executed using the\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n       * 2. Any exceptions from the execution of the expression are forwarded to the\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the expression\n       *    was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n       *\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $apply: function(expr) {\n        try {\n          beginPhase('$apply');\n          return this.$eval(expr);\n        } catch (e) {\n          $exceptionHandler(e);\n        } finally {\n          clearPhase();\n          try {\n            $rootScope.$digest();\n          } catch (e) {\n            $exceptionHandler(e);\n            throw e;\n          }\n        }\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$on\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for discussion of\n       * event life cycle.\n       *\n       * The event listener function format is: `function(event, args...)`. The `event` object\n       * passed into the listener has the following attributes:\n       *\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or `$broadcast`-ed.\n       *   - `currentScope` - `{Scope}`: the current scope which is handling the event.\n       *   - `name` - `{string}`: Name of the event.\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel further event\n       *     propagation (available only for events that were `$emit`-ed).\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag to true.\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n       *\n       * @param {string} name Event name to listen on.\n       * @param {function(event, args...)} listener Function to call when the event is emitted.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $on: function(name, listener) {\n        var namedListeners = this.$$listeners[name];\n        if (!namedListeners) {\n          this.$$listeners[name] = namedListeners = [];\n        }\n        namedListeners.push(listener);\n\n        return function() {\n          namedListeners[indexOf(namedListeners, listener)] = null;\n        };\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$emit\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$emit` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.\n       * Afterwards, the event traverses upwards toward the root scope and calls all registered\n       * listeners along the way. The event will stop propagating if one of the listeners cancels it.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to emit.\n       * @param {...*} args Optional set of arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $emit: function(name, args) {\n        var empty = [],\n            namedListeners,\n            scope = this,\n            stopPropagation = false,\n            event = {\n              name: name,\n              targetScope: scope,\n              stopPropagation: function() {stopPropagation = true;},\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            i, length;\n\n        do {\n          namedListeners = scope.$$listeners[name] || empty;\n          event.currentScope = scope;\n          for (i=0, length=namedListeners.length; i<length; i++) {\n\n            // if listeners were deregistered, defragment the array\n            if (!namedListeners[i]) {\n              namedListeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n            try {\n              namedListeners[i].apply(null, listenerArgs);\n              if (stopPropagation) return event;\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          //traverse upwards\n          scope = scope.$parent;\n        } while (scope);\n\n        return event;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$broadcast\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.\n       * Afterwards, the event propagates to all direct and indirect scopes of the current scope and\n       * calls all registered listeners along the way. The event cannot be canceled.\n       *\n       * Any exception emmited from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to broadcast.\n       * @param {...*} args Optional set of arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $broadcast: function(name, args) {\n        var target = this,\n            current = target,\n            next = target,\n            event = {\n              name: name,\n              targetScope: target,\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            listeners, i, length;\n\n        //down while you can, then up and next sibling or up and next sibling until back at root\n        do {\n          current = next;\n          event.currentScope = current;\n          listeners = current.$$listeners[name] || [];\n          for (i=0, length = listeners.length; i<length; i++) {\n            // if listeners were deregistered, defragment the array\n            if (!listeners[i]) {\n              listeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n\n            try {\n              listeners[i].apply(null, listenerArgs);\n            } catch(e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          // Insanity Warning: scope depth-first traversal\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n          // this piece should be kept in sync with the traversal in $digest\n          if (!(next = (current.$$childHead || (current !== target && current.$$nextSibling)))) {\n            while(current !== target && !(next = current.$$nextSibling)) {\n              current = current.$parent;\n            }\n          }\n        } while ((current = next));\n\n        return event;\n      }\n    };\n\n    var $rootScope = new Scope();\n\n    return $rootScope;\n\n\n    function beginPhase(phase) {\n      if ($rootScope.$$phase) {\n        throw Error($rootScope.$$phase + ' already in progress');\n      }\n\n      $rootScope.$$phase = phase;\n    }\n\n    function clearPhase() {\n      $rootScope.$$phase = null;\n    }\n\n    function compileToFn(exp, name) {\n      var fn = $parse(exp);\n      assertArgFn(fn, name);\n      return fn;\n    }\n\n    /**\n     * function used as an initial value for watchers.\n     * because it's unique we can easily tell it apart from other values\n     */\n    function initWatchVal() {}\n  }];\n}\n\n/**\n * !!! This is an undocumented \"private\" service !!!\n *\n * @name ng.$sniffer\n * @requires $window\n *\n * @property {boolean} history Does the browser support html5 history api ?\n * @property {boolean} hashchange Does the browser support hashchange event ?\n *\n * @description\n * This is very simple implementation of testing browser's features.\n */\nfunction $SnifferProvider() {\n  this.$get = ['$window', function($window) {\n    var eventSupport = {},\n        android = int((/android (\\d+)/.exec(lowercase($window.navigator.userAgent)) || [])[1]);\n\n    return {\n      // Android has history.pushState, but it does not update location correctly\n      // so let's not use the history API at all.\n      // http://code.google.com/p/android/issues/detail?id=17471\n      // https://github.com/angular/angular.js/issues/904\n      history: !!($window.history && $window.history.pushState && !(android < 4)),\n      hashchange: 'onhashchange' in $window &&\n                  // IE8 compatible mode lies\n                  (!$window.document.documentMode || $window.document.documentMode > 7),\n      hasEvent: function(event) {\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n        // it. In particular the event is not fired when backspace or delete key are pressed or\n        // when cut operation is performed.\n        if (event == 'input' && msie == 9) return false;\n\n        if (isUndefined(eventSupport[event])) {\n          var divElm = $window.document.createElement('div');\n          eventSupport[event] = 'on' + event in divElm;\n        }\n\n        return eventSupport[event];\n      },\n      // TODO(i): currently there is no way to feature detect CSP without triggering alerts\n      csp: false\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$window\n *\n * @description\n * A reference to the browser's `window` object. While `window`\n * is globally available in JavaScript, it causes testability problems, because\n * it is a global variable. In angular we always refer to it through the\n * `$window` service, so it may be overriden, removed or mocked for testing.\n *\n * All expressions are evaluated with respect to current scope so they don't\n * suffer from window globality.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope, $window) {\n           $scope.$window = $window;\n           $scope.greeting = 'Hello, World!';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input type=\"text\" ng-model=\"greeting\" />\n         <button ng-click=\"$window.alert(greeting)\">ALERT</button>\n       </div>\n     </doc:source>\n     <doc:scenario>\n      it('should display the greeting in the input box', function() {\n       input('greeting').enter('Hello, E2E Tests');\n       // If we click the button it will block the test runner\n       // element(':button').click();\n      });\n     </doc:scenario>\n   </doc:example>\n */\nfunction $WindowProvider(){\n  this.$get = valueFn(window);\n}\n\n/**\n * Parse headers into key value object\n *\n * @param {string} headers Raw headers as a string\n * @returns {Object} Parsed headers as key value object\n */\nfunction parseHeaders(headers) {\n  var parsed = {}, key, val, i;\n\n  if (!headers) return parsed;\n\n  forEach(headers.split('\\n'), function(line) {\n    i = line.indexOf(':');\n    key = lowercase(trim(line.substr(0, i)));\n    val = trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key]) {\n        parsed[key] += ', ' + val;\n      } else {\n        parsed[key] = val;\n      }\n    }\n  });\n\n  return parsed;\n}\n\n\n/**\n * Returns a function that provides access to parsed headers.\n *\n * Headers are lazy parsed when first requested.\n * @see parseHeaders\n *\n * @param {(string|Object)} headers Headers to provide access to.\n * @returns {function(string=)} Returns a getter function which if called with:\n *\n *   - if called with single an argument returns a single header value or null\n *   - if called with no arguments returns an object containing all headers.\n */\nfunction headersGetter(headers) {\n  var headersObj = isObject(headers) ? headers : undefined;\n\n  return function(name) {\n    if (!headersObj) headersObj =  parseHeaders(headers);\n\n    if (name) {\n      return headersObj[lowercase(name)] || null;\n    }\n\n    return headersObj;\n  };\n}\n\n\n/**\n * Chain all given functions\n *\n * This function is used for both request and response transforming\n *\n * @param {*} data Data to transform.\n * @param {function(string=)} headers Http headers getter fn.\n * @param {(function|Array.<function>)} fns Function or an array of functions.\n * @returns {*} Transformed data.\n */\nfunction transformData(data, headers, fns) {\n  if (isFunction(fns))\n    return fns(data, headers);\n\n  forEach(fns, function(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n}\n\n\nfunction isSuccess(status) {\n  return 200 <= status && status < 300;\n}\n\n\nfunction $HttpProvider() {\n  var JSON_START = /^\\s*(\\[|\\{[^\\{])/,\n      JSON_END = /[\\}\\]]\\s*$/,\n      PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\n\n  var $config = this.defaults = {\n    // transform incoming response data\n    transformResponse: [function(data) {\n      if (isString(data)) {\n        // strip json vulnerability protection prefix\n        data = data.replace(PROTECTION_PREFIX, '');\n        if (JSON_START.test(data) && JSON_END.test(data))\n          data = fromJson(data, true);\n      }\n      return data;\n    }],\n\n    // transform outgoing request data\n    transformRequest: [function(d) {\n      return isObject(d) && !isFile(d) ? toJson(d) : d;\n    }],\n\n    // default headers\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      post: {'Content-Type': 'application/json;charset=utf-8'},\n      put:  {'Content-Type': 'application/json;charset=utf-8'}\n    }\n  };\n\n  var providerResponseInterceptors = this.responseInterceptors = [];\n\n  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\n      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\n\n    var defaultCache = $cacheFactory('$http'),\n        responseInterceptors = [];\n\n    forEach(providerResponseInterceptors, function(interceptor) {\n      responseInterceptors.push(\n          isString(interceptor)\n              ? $injector.get(interceptor)\n              : $injector.invoke(interceptor)\n      );\n    });\n\n\n    /**\n     * @ngdoc function\n     * @name ng.$http\n     * @requires $httpBackend\n     * @requires $browser\n     * @requires $cacheFactory\n     * @requires $rootScope\n     * @requires $q\n     * @requires $injector\n     *\n     * @description\n     * The `$http` service is a core Angular service that facilitates communication with the remote\n     * HTTP servers via the browser's {@link https://developer.mozilla.org/en/xmlhttprequest\n     * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.\n     *\n     * For unit testing applications that use `$http` service, see\n     * {@link ngMock.$httpBackend $httpBackend mock}.\n     *\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n     * $resource} service.\n     *\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n     *\n     *\n     * # General usage\n     * The `$http` service is a function which takes a single argument — a configuration object —\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\n     * with two $http specific methods: `success` and `error`.\n     *\n     * <pre>\n     *   $http({method: 'GET', url: '/someUrl'}).\n     *     success(function(data, status, headers, config) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }).\n     *     error(function(data, status, headers, config) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * </pre>\n     *\n     * Since the returned value of calling the $http function is a `promise`, you can also use\n     * the `then` method to register callbacks, and these callbacks will receive a single argument –\n     * an object representing the response. See the API signature and type info below for more\n     * details.\n     *\n     * A response status code between 200 and 299 is considered a success status and\n     * will result in the success callback being called. Note that if the response is a redirect,\n     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\n     * called for such responses.\n     *\n     * # Shortcut methods\n     *\n     * Since all invocations of the $http service require passing in an HTTP method and URL, and\n     * POST/PUT requests require request data to be provided as well, shortcut methods\n     * were created:\n     *\n     * <pre>\n     *   $http.get('/someUrl').success(successCallback);\n     *   $http.post('/someUrl', data).success(successCallback);\n     * </pre>\n     *\n     * Complete list of shortcut methods:\n     *\n     * - {@link ng.$http#get $http.get}\n     * - {@link ng.$http#head $http.head}\n     * - {@link ng.$http#post $http.post}\n     * - {@link ng.$http#put $http.put}\n     * - {@link ng.$http#delete $http.delete}\n     * - {@link ng.$http#jsonp $http.jsonp}\n     *\n     *\n     * # Setting HTTP Headers\n     *\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n     * object, which currently contains this default configuration:\n     *\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n     *   - `Accept: application/json, text/plain, * / *`\n     *   - `X-Requested-With: XMLHttpRequest`\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n     *   - `Content-Type: application/json`\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n     *   - `Content-Type: application/json`\n     *\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n     * with the lowercased HTTP method name as the key, e.g.\n     * `$httpProvider.defaults.headers.get['My-Header']='value'`.\n     *\n     * Additionally, the defaults can be set at runtime via the `$http.defaults` object in the same\n     * fashion.\n     *\n     *\n     * # Transforming Requests and Responses\n     *\n     * Both requests and responses can be transformed using transform functions. By default, Angular\n     * applies these transformations:\n     *\n     * Request transformations:\n     *\n     * - If the `data` property of the request configuration object contains an object, serialize it into\n     *   JSON format.\n     *\n     * Response transformations:\n     *\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n     *  - If JSON response is detected, deserialize it using a JSON parser.\n     *\n     * To globally augment or override the default transforms, modify the `$httpProvider.defaults.transformRequest` and\n     * `$httpProvider.defaults.transformResponse` properties. These properties are by default an\n     * array of transform functions, which allows you to `push` or `unshift` a new transformation function into the\n     * transformation chain. You can also decide to completely override any default transformations by assigning your\n     * transformation functions to these properties directly without the array wrapper.\n     *\n     * Similarly, to locally override the request/response transforms, augment the `transformRequest` and/or\n     * `transformResponse` properties of the configuration object passed into `$http`.\n     *\n     *\n     * # Caching\n     *\n     * To enable caching, set the configuration property `cache` to `true`. When the cache is\n     * enabled, `$http` stores the response from the server in local cache. Next time the\n     * response is served from the cache without sending a request to the server.\n     *\n     * Note that even if the response is served from cache, delivery of the data is asynchronous in\n     * the same way that real requests are.\n     *\n     * If there are multiple GET requests for the same URL that should be cached using the same\n     * cache, but the cache is not populated yet, only one request to the server will be made and\n     * the remaining requests will be fulfilled using the response from the first request.\n     *\n     *\n     * # Response interceptors\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication or any kind of synchronous or\n     * asynchronous preprocessing of received responses, it is desirable to be able to intercept\n     * responses for http requests before they are handed over to the application code that\n     * initiated these requests. The response interceptors leverage the {@link ng.$q\n     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.\n     *\n     * The interceptors are service factories that are registered with the $httpProvider by\n     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor  — a function that\n     * takes a {@link ng.$q promise} and returns the original or a new promise.\n     *\n     * <pre>\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       return promise.then(function(response) {\n     *         // do something on success\n     *       }, function(response) {\n     *         // do something on error\n     *         if (canRecover(response)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(response);\n     *       });\n     *     }\n     *   });\n     *\n     *   $httpProvider.responseInterceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // register the interceptor via an anonymous factory\n     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       // same as above\n     *     }\n     *   });\n     * </pre>\n     *\n     *\n     * # Security Considerations\n     *\n     * When designing web applications, consider security threats from:\n     *\n     * - {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\n     *   JSON vulnerability}\n     * - {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF}\n     *\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n     * pre-configured with strategies that address these issues, but for this to work backend server\n     * cooperation is required.\n     *\n     * ## JSON Vulnerability Protection\n     *\n     * A {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\n     * JSON vulnerability} allows third party website to turn your JSON resource URL into\n     * {@link http://en.wikipedia.org/wiki/JSONP JSONP} request under some conditions. To\n     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n     * Angular will automatically strip the prefix before processing it as JSON.\n     *\n     * For example if your server needs to return:\n     * <pre>\n     * ['one','two']\n     * </pre>\n     *\n     * which is vulnerable to attack, your server can return:\n     * <pre>\n     * )]}',\n     * ['one','two']\n     * </pre>\n     *\n     * Angular will strip the prefix, before processing the JSON.\n     *\n     *\n     * ## Cross Site Request Forgery (XSRF) Protection\n     *\n     * {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF} is a technique by which\n     * an unauthorized site can gain your user's private data. Angular provides a mechanism\n     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n     * called `XSRF-TOKEN` and sets it as the HTTP header `X-XSRF-TOKEN`. Since only JavaScript that\n     * runs on your domain could read the cookie, your server can be assured that the XHR came from\n     * JavaScript running on your domain.\n     *\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n     * that only JavaScript running on your domain could have sent the request. The token must be\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from making\n     * up its own tokens). We recommend that the token is a digest of your site's authentication\n     * cookie with a {@link https://en.wikipedia.org/wiki/Salt_(cryptography) salt} for added security.\n     *\n     *\n     * @param {object} config Object describing the request to be made and how it should be\n     *    processed. The object has following properties:\n     *\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned to\n     *      `?key1=value1&key2=value2` after the url. If the value is not a string, it will be JSONified.\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n     *    - **headers** – `{Object}` – Map of strings representing HTTP headers to send to the server.\n     *    - **transformRequest** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      request body and headers and returns its transformed (typically serialized) version.\n     *    - **transformResponse** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      response body and headers and returns its transformed (typically deserialized) version.\n     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     *      GET request, otherwise if a cache instance built with\n     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     *      caching.\n     *    - **timeout** – `{number}` – timeout in milliseconds.\n     *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the\n     *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5\n     *      requests with credentials} for more information.\n     *\n     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\n     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\n     *   method takes two arguments a success and an error callback which will be called with a\n     *   response object. The `success` and `error` methods take a single argument - a function that\n     *   will be called when the request succeeds or fails respectively. The arguments passed into\n     *   these functions are destructured representation of the response object passed into the\n     *   `then` method. The response object has these properties:\n     *\n     *   - **data** – `{string|Object}` – The response body transformed with the transform functions.\n     *   - **status** – `{number}` – HTTP status code of the response.\n     *   - **headers** – `{function([headerName])}` – Header getter function.\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n     *\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n     *   requests. This is primarily meant to be used for debugging purposes.\n     *\n     *\n     * @example\n      <example>\n        <file name=\"index.html\">\n          <div ng-controller=\"FetchCtrl\">\n            <select ng-model=\"method\">\n              <option>GET</option>\n              <option>JSONP</option>\n            </select>\n            <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n            <button ng-click=\"fetch()\">fetch</button><br>\n            <button ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n            <button ng-click=\"updateModel('JSONP', 'http://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">Sample JSONP</button>\n            <button ng-click=\"updateModel('JSONP', 'http://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">Invalid JSONP</button>\n            <pre>http status code: {{status}}</pre>\n            <pre>http response data: {{data}}</pre>\n          </div>\n        </file>\n        <file name=\"script.js\">\n          function FetchCtrl($scope, $http, $templateCache) {\n            $scope.method = 'GET';\n            $scope.url = 'http-hello.html';\n\n            $scope.fetch = function() {\n              $scope.code = null;\n              $scope.response = null;\n\n              $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n                success(function(data, status) {\n                  $scope.status = status;\n                  $scope.data = data;\n                }).\n                error(function(data, status) {\n                  $scope.data = data || \"Request failed\";\n                  $scope.status = status;\n              });\n            };\n\n            $scope.updateModel = function(method, url) {\n              $scope.method = method;\n              $scope.url = url;\n            };\n          }\n        </file>\n        <file name=\"http-hello.html\">\n          Hello, $http!\n        </file>\n        <file name=\"scenario.js\">\n          it('should make an xhr GET request', function() {\n            element(':button:contains(\"Sample GET\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('200');\n            expect(binding('data')).toMatch(/Hello, \\$http!/);\n          });\n\n          it('should make a JSONP request to angularjs.org', function() {\n            element(':button:contains(\"Sample JSONP\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('200');\n            expect(binding('data')).toMatch(/Super Hero!/);\n          });\n\n          it('should make JSONP request to invalid URL and invoke the error handler',\n              function() {\n            element(':button:contains(\"Invalid JSONP\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('0');\n            expect(binding('data')).toBe('Request failed');\n          });\n        </file>\n      </example>\n     */\n    function $http(config) {\n      config.method = uppercase(config.method);\n\n      var reqTransformFn = config.transformRequest || $config.transformRequest,\n          respTransformFn = config.transformResponse || $config.transformResponse,\n          defHeaders = $config.headers,\n          reqHeaders = extend({'X-XSRF-TOKEN': $browser.cookies()['XSRF-TOKEN']},\n              defHeaders.common, defHeaders[lowercase(config.method)], config.headers),\n          reqData = transformData(config.data, headersGetter(reqHeaders), reqTransformFn),\n          promise;\n\n      // strip content-type if data is undefined\n      if (isUndefined(config.data)) {\n        delete reqHeaders['Content-Type'];\n      }\n\n      // send request\n      promise = sendReq(config, reqData, reqHeaders);\n\n\n      // transform future response\n      promise = promise.then(transformResponse, transformResponse);\n\n      // apply interceptors\n      forEach(responseInterceptors, function(interceptor) {\n        promise = interceptor(promise);\n      });\n\n      promise.success = function(fn) {\n        promise.then(function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      promise.error = function(fn) {\n        promise.then(null, function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      return promise;\n\n      function transformResponse(response) {\n        // make a copy since the response must be cacheable\n        var resp = extend({}, response, {\n          data: transformData(response.data, response.headers, respTransformFn)\n        });\n        return (isSuccess(response.status))\n          ? resp\n          : $q.reject(resp);\n      }\n    }\n\n    $http.pendingRequests = [];\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#get\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `GET` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#delete\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `DELETE` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#head\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `HEAD` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#jsonp\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `JSONP` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request.\n     *                     Should contain `JSON_CALLBACK` string.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethods('get', 'delete', 'head', 'jsonp');\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#post\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `POST` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#put\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `PUT` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethodsWithData('post', 'put');\n\n        /**\n         * @ngdoc property\n         * @name ng.$http#defaults\n         * @propertyOf ng.$http\n         *\n         * @description\n         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n         * default headers as well as request and response transformations.\n         *\n         * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n         */\n    $http.defaults = $config;\n\n\n    return $http;\n\n\n    function createShortMethods(names) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url\n          }));\n        };\n      });\n    }\n\n\n    function createShortMethodsWithData(name) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, data, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url,\n            data: data\n          }));\n        };\n      });\n    }\n\n\n    /**\n     * Makes the request.\n     *\n     * !!! ACCESSES CLOSURE VARS:\n     * $httpBackend, $config, $log, $rootScope, defaultCache, $http.pendingRequests\n     */\n    function sendReq(config, reqData, reqHeaders) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          cache,\n          cachedResp,\n          url = buildUrl(config.url, config.params);\n\n      $http.pendingRequests.push(config);\n      promise.then(removePendingReq, removePendingReq);\n\n\n      if (config.cache && config.method == 'GET') {\n        cache = isObject(config.cache) ? config.cache : defaultCache;\n      }\n\n      if (cache) {\n        cachedResp = cache.get(url);\n        if (cachedResp) {\n          if (cachedResp.then) {\n            // cached request has already been sent, but there is no response yet\n            cachedResp.then(removePendingReq, removePendingReq);\n            return cachedResp;\n          } else {\n            // serving from cache\n            if (isArray(cachedResp)) {\n              resolvePromise(cachedResp[1], cachedResp[0], copy(cachedResp[2]));\n            } else {\n              resolvePromise(cachedResp, 200, {});\n            }\n          }\n        } else {\n          // put the promise for the non-transformed response into cache as a placeholder\n          cache.put(url, promise);\n        }\n      }\n\n      // if we won't have the response in cache, send the request to the backend\n      if (!cachedResp) {\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n            config.withCredentials);\n      }\n\n      return promise;\n\n\n      /**\n       * Callback registered to $httpBackend():\n       *  - caches the response if desired\n       *  - resolves the raw $http promise\n       *  - calls $apply\n       */\n      function done(status, response, headersString) {\n        if (cache) {\n          if (isSuccess(status)) {\n            cache.put(url, [status, response, parseHeaders(headersString)]);\n          } else {\n            // remove promise from the cache\n            cache.remove(url);\n          }\n        }\n\n        resolvePromise(response, status, headersString);\n        $rootScope.$apply();\n      }\n\n\n      /**\n       * Resolves the raw $http promise.\n       */\n      function resolvePromise(response, status, headers) {\n        // normalize internal statuses to 0\n        status = Math.max(status, 0);\n\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n          data: response,\n          status: status,\n          headers: headersGetter(headers),\n          config: config\n        });\n      }\n\n\n      function removePendingReq() {\n        var idx = indexOf($http.pendingRequests, config);\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n      }\n    }\n\n\n    function buildUrl(url, params) {\n          if (!params) return url;\n          var parts = [];\n          forEachSorted(params, function(value, key) {\n            if (value == null || value == undefined) return;\n            if (isObject(value)) {\n              value = toJson(value);\n            }\n            parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n          });\n          return url + ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\n        }\n\n\n  }];\n}\n\nvar XHR = window.XMLHttpRequest || function() {\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n  throw new Error(\"This browser does not support XMLHttpRequest.\");\n};\n\n\n/**\n * @ngdoc object\n * @name ng.$httpBackend\n * @requires $browser\n * @requires $window\n * @requires $document\n *\n * @description\n * HTTP backend used by the {@link ng.$http service} that delegates to\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n *\n * You should never need to use this service directly, instead use the higher-level abstractions:\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n *\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n * $httpBackend} which can be trained with responses.\n */\nfunction $HttpBackendProvider() {\n  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\n    return createHttpBackend($browser, XHR, $browser.defer, $window.angular.callbacks,\n        $document[0], $window.location.protocol.replace(':', ''));\n  }];\n}\n\nfunction createHttpBackend($browser, XHR, $browserDefer, callbacks, rawDocument, locationProtocol) {\n  // TODO(vojta): fix the signature\n  return function(method, url, post, callback, headers, timeout, withCredentials) {\n    $browser.$$incOutstandingRequestCount();\n    url = url || $browser.url();\n\n    if (lowercase(method) == 'jsonp') {\n      var callbackId = '_' + (callbacks.counter++).toString(36);\n      callbacks[callbackId] = function(data) {\n        callbacks[callbackId].data = data;\n      };\n\n      jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\n          function() {\n        if (callbacks[callbackId].data) {\n          completeRequest(callback, 200, callbacks[callbackId].data);\n        } else {\n          completeRequest(callback, -2);\n        }\n        delete callbacks[callbackId];\n      });\n    } else {\n      var xhr = new XHR();\n      xhr.open(method, url, true);\n      forEach(headers, function(value, key) {\n        if (value) xhr.setRequestHeader(key, value);\n      });\n\n      var status;\n\n      // In IE6 and 7, this might be called synchronously when xhr.send below is called and the\n      // response is in the cache. the promise api will ensure that to the app code the api is\n      // always async\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState == 4) {\n          var responseHeaders = xhr.getAllResponseHeaders();\n\n          // TODO(vojta): remove once Firefox 21 gets released.\n          // begin: workaround to overcome Firefox CORS http response headers bug\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=608735\n          // Firefox already patched in nightly. Should land in Firefox 21.\n\n          // CORS \"simple response headers\" http://www.w3.org/TR/cors/\n          var value,\n              simpleHeaders = [\"Cache-Control\", \"Content-Language\", \"Content-Type\",\n                                  \"Expires\", \"Last-Modified\", \"Pragma\"];\n          if (!responseHeaders) {\n            responseHeaders = \"\";\n            forEach(simpleHeaders, function (header) {\n              var value = xhr.getResponseHeader(header);\n              if (value) {\n                  responseHeaders += header + \": \" + value + \"\\n\";\n              }\n            });\n          }\n          // end of the workaround.\n\n          completeRequest(callback, status || xhr.status, xhr.responseText,\n                          responseHeaders);\n        }\n      };\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      xhr.send(post || '');\n\n      if (timeout > 0) {\n        $browserDefer(function() {\n          status = -1;\n          xhr.abort();\n        }, timeout);\n      }\n    }\n\n\n    function completeRequest(callback, status, response, headersString) {\n      // URL_MATCH is defined in src/service/location.js\n      var protocol = (url.match(URL_MATCH) || ['', locationProtocol])[1];\n\n      // fix status code for file protocol (it's always 0)\n      status = (protocol == 'file') ? (response ? 200 : 404) : status;\n\n      // normalize IE bug (http://bugs.jquery.com/ticket/1450)\n      status = status == 1223 ? 204 : status;\n\n      callback(status, response, headersString);\n      $browser.$$completeOutstandingRequest(noop);\n    }\n  };\n\n  function jsonpReq(url, done) {\n    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\n    // - fetches local scripts via XHR and evals them\n    // - adds and immediately removes script elements from the document\n    var script = rawDocument.createElement('script'),\n        doneWrapper = function() {\n          rawDocument.body.removeChild(script);\n          if (done) done();\n        };\n\n    script.type = 'text/javascript';\n    script.src = url;\n\n    if (msie) {\n      script.onreadystatechange = function() {\n        if (/loaded|complete/.test(script.readyState)) doneWrapper();\n      };\n    } else {\n      script.onload = script.onerror = doneWrapper;\n    }\n\n    rawDocument.body.appendChild(script);\n  }\n}\n\n/**\n * @ngdoc object\n * @name ng.$locale\n *\n * @description\n * $locale service provides localization rules for various Angular components. As of right now the\n * only public api is:\n *\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n */\nfunction $LocaleProvider(){\n  this.$get = function() {\n    return {\n      id: 'en-us',\n\n      NUMBER_FORMATS: {\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n          { // Decimal Pattern\n            minInt: 1,\n            minFrac: 0,\n            maxFrac: 3,\n            posPre: '',\n            posSuf: '',\n            negPre: '-',\n            negSuf: '',\n            gSize: 3,\n            lgSize: 3\n          },{ //Currency Pattern\n            minInt: 1,\n            minFrac: 2,\n            maxFrac: 2,\n            posPre: '\\u00A4',\n            posSuf: '',\n            negPre: '(\\u00A4',\n            negSuf: ')',\n            gSize: 3,\n            lgSize: 3\n          }\n        ],\n        CURRENCY_SYM: '$'\n      },\n\n      DATETIME_FORMATS: {\n        MONTH: 'January,February,March,April,May,June,July,August,September,October,November,December'\n                .split(','),\n        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n        AMPMS: ['AM','PM'],\n        medium: 'MMM d, y h:mm:ss a',\n        short: 'M/d/yy h:mm a',\n        fullDate: 'EEEE, MMMM d, y',\n        longDate: 'MMMM d, y',\n        mediumDate: 'MMM d, y',\n        shortDate: 'M/d/yy',\n        mediumTime: 'h:mm:ss a',\n        shortTime: 'h:mm a'\n      },\n\n      pluralCat: function(num) {\n        if (num === 1) {\n          return 'one';\n        }\n        return 'other';\n      }\n    };\n  };\n}\n\nfunction $TimeoutProvider() {\n  this.$get = ['$rootScope', '$browser', '$q', '$exceptionHandler',\n       function($rootScope,   $browser,   $q,   $exceptionHandler) {\n    var deferreds = {};\n\n\n     /**\n      * @ngdoc function\n      * @name ng.$timeout\n      * @requires $browser\n      *\n      * @description\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n      * block and delegates any exceptions to\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\n      *\n      * The return value of registering a timeout function is a promise, which will be resolved when\n      * the timeout is reached and the timeout function is executed.\n      *\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n      * synchronously flush the queue of deferred functions.\n      *\n      * @param {function()} fn A function, whose execution should be delayed.\n      * @param {number=} [delay=0] Delay in milliseconds.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\n      *   promise will be resolved with is the return value of the `fn` function.\n      */\n    function timeout(fn, delay, invokeApply) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          timeoutId, cleanup;\n\n      timeoutId = $browser.defer(function() {\n        try {\n          deferred.resolve(fn());\n        } catch(e) {\n          deferred.reject(e);\n          $exceptionHandler(e);\n        }\n\n        if (!skipApply) $rootScope.$apply();\n      }, delay);\n\n      cleanup = function() {\n        delete deferreds[promise.$$timeoutId];\n      };\n\n      promise.$$timeoutId = timeoutId;\n      deferreds[timeoutId] = deferred;\n      promise.then(cleanup, cleanup);\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc function\n      * @name ng.$timeout#cancel\n      * @methodOf ng.$timeout\n      *\n      * @description\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n      * resolved with a rejection.\n      *\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n      *   canceled.\n      */\n    timeout.cancel = function(promise) {\n      if (promise && promise.$$timeoutId in deferreds) {\n        deferreds[promise.$$timeoutId].reject('canceled');\n        return $browser.defer.cancel(promise.$$timeoutId);\n      }\n      return false;\n    };\n\n    return timeout;\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$filterProvider\n * @description\n *\n * Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To\n * achieve this a filter definition consists of a factory function which is annotated with dependencies and is\n * responsible for creating a filter function.\n *\n * <pre>\n *   // Filter registration\n *   function MyModule($provide, $filterProvider) {\n *     // create a service to demonstrate injection (not always needed)\n *     $provide.value('greet', function(name){\n *       return 'Hello ' + name + '!';\n *     });\n *\n *     // register a filter factory which uses the\n *     // greet service to demonstrate DI.\n *     $filterProvider.register('greet', function(greet){\n *       // return the filter function which uses the greet service\n *       // to generate salutation\n *       return function(text) {\n *         // filters need to be forgiving so check input validity\n *         return text && greet(text) || text;\n *       };\n *     });\n *   }\n * </pre>\n *\n * The filter function is registered with the `$injector` under the filter name suffixe with `Filter`.\n * <pre>\n *   it('should be the same instance', inject(\n *     function($filterProvider) {\n *       $filterProvider.register('reverse', function(){\n *         return ...;\n *       });\n *     },\n *     function($filter, reverseFilter) {\n *       expect($filter('reverse')).toBe(reverseFilter);\n *     });\n * </pre>\n *\n *\n * For more information about how angular filters work, and how to create your own filters, see\n * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer\n * Guide.\n */\n/**\n * @ngdoc method\n * @name ng.$filterProvider#register\n * @methodOf ng.$filterProvider\n * @description\n * Register filter factory function.\n *\n * @param {String} name Name of the filter.\n * @param {function} fn The filter factory function which is injectable.\n */\n\n\n/**\n * @ngdoc function\n * @name ng.$filter\n * @function\n * @description\n * Filters are used for formatting data displayed to the user.\n *\n * The general syntax in templates is as follows:\n *\n *         {{ expression [| filter_name[:parameter_value] ... ] }}\n *\n * @param {String} name Name of the filter function to retrieve\n * @return {Function} the filter function\n */\n$FilterProvider.$inject = ['$provide'];\nfunction $FilterProvider($provide) {\n  var suffix = 'Filter';\n\n  function register(name, factory) {\n    return $provide.factory(name + suffix, factory);\n  }\n  this.register = register;\n\n  this.$get = ['$injector', function($injector) {\n    return function(name) {\n      return $injector.get(name + suffix);\n    }\n  }];\n\n  ////////////////////////////////////////\n\n  register('currency', currencyFilter);\n  register('date', dateFilter);\n  register('filter', filterFilter);\n  register('json', jsonFilter);\n  register('limitTo', limitToFilter);\n  register('lowercase', lowercaseFilter);\n  register('number', numberFilter);\n  register('orderBy', orderByFilter);\n  register('uppercase', uppercaseFilter);\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:filter\n * @function\n *\n * @description\n * Selects a subset of items from `array` and returns it as a new array.\n *\n * Note: This function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array} array The source array.\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\n *   `array`.\n *\n *   Can be one of:\n *\n *   - `string`: Predicate that results in a substring match using the value of `expression`\n *     string. All strings or objects with string properties in `array` that contain this string\n *     will be returned. The predicate can be negated by prefixing the string with `!`.\n *\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n *     property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n *     property of the object. That's equivalent to the simple substring match with a `string`\n *     as described above.\n *\n *   - `function`: A predicate function can be used to write arbitrary filters. The function is\n *     called for each element of `array`. The final result is an array of those elements that\n *     the predicate returned true for.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                                {name:'Mary', phone:'800-BIG-MARY'},\n                                {name:'Mike', phone:'555-4321'},\n                                {name:'Adam', phone:'555-5678'},\n                                {name:'Julie', phone:'555-8765'}]\"></div>\n\n       Search: <input ng-model=\"searchText\">\n       <table id=\"searchTextResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:searchText\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n       <hr>\n       Any: <input ng-model=\"search.$\"> <br>\n       Name only <input ng-model=\"search.name\"><br>\n       Phone only <input ng-model=\"search.phone\"><br>\n       <table id=\"searchObjResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:search\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n     </doc:source>\n     <doc:scenario>\n       it('should search across all fields when filtering with a string', function() {\n         input('searchText').enter('m');\n         expect(repeater('#searchTextResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Mike', 'Adam']);\n\n         input('searchText').enter('76');\n         expect(repeater('#searchTextResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['John', 'Julie']);\n       });\n\n       it('should search in specific fields when filtering with a predicate object', function() {\n         input('search.$').enter('i');\n         expect(repeater('#searchObjResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Mike', 'Julie']);\n       });\n     </doc:scenario>\n   </doc:example>\n */\nfunction filterFilter() {\n  return function(array, expression) {\n    if (!isArray(array)) return array;\n    var predicates = [];\n    predicates.check = function(value) {\n      for (var j = 0; j < predicates.length; j++) {\n        if(!predicates[j](value)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var search = function(obj, text){\n      if (text.charAt(0) === '!') {\n        return !search(obj, text.substr(1));\n      }\n      switch (typeof obj) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          return ('' + obj).toLowerCase().indexOf(text) > -1;\n        case \"object\":\n          for ( var objKey in obj) {\n            if (objKey.charAt(0) !== '$' && search(obj[objKey], text)) {\n              return true;\n            }\n          }\n          return false;\n        case \"array\":\n          for ( var i = 0; i < obj.length; i++) {\n            if (search(obj[i], text)) {\n              return true;\n            }\n          }\n          return false;\n        default:\n          return false;\n      }\n    };\n    switch (typeof expression) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        expression = {$:expression};\n      case \"object\":\n        for (var key in expression) {\n          if (key == '$') {\n            (function() {\n              var text = (''+expression[key]).toLowerCase();\n              if (!text) return;\n              predicates.push(function(value) {\n                return search(value, text);\n              });\n            })();\n          } else {\n            (function() {\n              var path = key;\n              var text = (''+expression[key]).toLowerCase();\n              if (!text) return;\n              predicates.push(function(value) {\n                return search(getter(value, path), text);\n              });\n            })();\n          }\n        }\n        break;\n      case 'function':\n        predicates.push(expression);\n        break;\n      default:\n        return array;\n    }\n    var filtered = [];\n    for ( var j = 0; j < array.length; j++) {\n      var value = array[j];\n      if (predicates.check(value)) {\n        filtered.push(value);\n      }\n    }\n    return filtered;\n  }\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:currency\n * @function\n *\n * @description\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n * symbol for current locale is used.\n *\n * @param {number} amount Input to filter.\n * @param {string=} symbol Currency symbol or identifier to be displayed.\n * @returns {string} Formatted number.\n *\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.amount = 1234.56;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input type=\"number\" ng-model=\"amount\"> <br>\n         default currency symbol ($): {{amount | currency}}<br>\n         custom currency identifier (USD$): {{amount | currency:\"USD$\"}}\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should init with 1234.56', function() {\n         expect(binding('amount | currency')).toBe('$1,234.56');\n         expect(binding('amount | currency:\"USD$\"')).toBe('USD$1,234.56');\n       });\n       it('should update', function() {\n         input('amount').enter('-1234');\n         expect(binding('amount | currency')).toBe('($1,234.00)');\n         expect(binding('amount | currency:\"USD$\"')).toBe('(USD$1,234.00)');\n       });\n     </doc:scenario>\n   </doc:example>\n */\ncurrencyFilter.$inject = ['$locale'];\nfunction currencyFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(amount, currencySymbol){\n    if (isUndefined(currencySymbol)) currencySymbol = formats.CURRENCY_SYM;\n    return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).\n                replace(/\\u00A4/g, currencySymbol);\n  };\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:number\n * @function\n *\n * @description\n * Formats a number as text.\n *\n * If the input is not a number an empty string is returned.\n *\n * @param {number|string} number Number to format.\n * @param {(number|string)=} [fractionSize=2] Number of decimal places to round the number to.\n * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.val = 1234.56789;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Enter number: <input ng-model='val'><br>\n         Default formatting: {{val | number}}<br>\n         No fractions: {{val | number:0}}<br>\n         Negative number: {{-val | number:4}}\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should format numbers', function() {\n         expect(binding('val | number')).toBe('1,234.568');\n         expect(binding('val | number:0')).toBe('1,235');\n         expect(binding('-val | number:4')).toBe('-1,234.5679');\n       });\n\n       it('should update', function() {\n         input('val').enter('3374.333');\n         expect(binding('val | number')).toBe('3,374.333');\n         expect(binding('val | number:0')).toBe('3,374');\n         expect(binding('-val | number:4')).toBe('-3,374.3330');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n\n\nnumberFilter.$inject = ['$locale'];\nfunction numberFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(number, fractionSize) {\n    return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n      fractionSize);\n  };\n}\n\nvar DECIMAL_SEP = '.';\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n  if (isNaN(number) || !isFinite(number)) return '';\n\n  var isNegative = number < 0;\n  number = Math.abs(number);\n  var numStr = number + '',\n      formatedText = '',\n      parts = [];\n\n  var hasExponent = false;\n  if (numStr.indexOf('e') !== -1) {\n    var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\n      numStr = '0';\n    } else {\n      formatedText = numStr;\n      hasExponent = true;\n    }\n  }\n\n  if (!hasExponent) {\n    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\n    // determine fractionSize if it is not specified\n    if (isUndefined(fractionSize)) {\n      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n    }\n\n    var pow = Math.pow(10, fractionSize);\n    number = Math.round(number * pow) / pow;\n    var fraction = ('' + number).split(DECIMAL_SEP);\n    var whole = fraction[0];\n    fraction = fraction[1] || '';\n\n    var pos = 0,\n        lgroup = pattern.lgSize,\n        group = pattern.gSize;\n\n    if (whole.length >= (lgroup + group)) {\n      pos = whole.length - lgroup;\n      for (var i = 0; i < pos; i++) {\n        if ((pos - i)%group === 0 && i !== 0) {\n          formatedText += groupSep;\n        }\n        formatedText += whole.charAt(i);\n      }\n    }\n\n    for (i = pos; i < whole.length; i++) {\n      if ((whole.length - i)%lgroup === 0 && i !== 0) {\n        formatedText += groupSep;\n      }\n      formatedText += whole.charAt(i);\n    }\n\n    // format fraction part.\n    while(fraction.length < fractionSize) {\n      fraction += '0';\n    }\n\n    if (fractionSize && fractionSize !== \"0\") formatedText += decimalSep + fraction.substr(0, fractionSize);\n  }\n\n  parts.push(isNegative ? pattern.negPre : pattern.posPre);\n  parts.push(formatedText);\n  parts.push(isNegative ? pattern.negSuf : pattern.posSuf);\n  return parts.join('');\n}\n\nfunction padNumber(num, digits, trim) {\n  var neg = '';\n  if (num < 0) {\n    neg =  '-';\n    num = -num;\n  }\n  num = '' + num;\n  while(num.length < digits) num = '0' + num;\n  if (trim)\n    num = num.substr(num.length - digits);\n  return neg + num;\n}\n\n\nfunction dateGetter(name, size, offset, trim) {\n  offset = offset || 0;\n  return function(date) {\n    var value = date['get' + name]();\n    if (offset > 0 || value > -offset)\n      value += offset;\n    if (value === 0 && offset == -12 ) value = 12;\n    return padNumber(value, size, trim);\n  };\n}\n\nfunction dateStrGetter(name, shortForm) {\n  return function(date, formats) {\n    var value = date['get' + name]();\n    var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date) {\n  var zone = -1 * date.getTimezoneOffset();\n  var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                padNumber(Math.abs(zone % 60), 2);\n\n  return paddedZone;\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4),\n    yy: dateGetter('FullYear', 2, 0, true),\n     y: dateGetter('FullYear', 1),\n  MMMM: dateStrGetter('Month'),\n   MMM: dateStrGetter('Month', true),\n    MM: dateGetter('Month', 2, 1),\n     M: dateGetter('Month', 1, 1),\n    dd: dateGetter('Date', 2),\n     d: dateGetter('Date', 1),\n    HH: dateGetter('Hours', 2),\n     H: dateGetter('Hours', 1),\n    hh: dateGetter('Hours', 2, -12),\n     h: dateGetter('Hours', 1, -12),\n    mm: dateGetter('Minutes', 2),\n     m: dateGetter('Minutes', 1),\n    ss: dateGetter('Seconds', 2),\n     s: dateGetter('Seconds', 1),\n  EEEE: dateStrGetter('Day'),\n   EEE: dateStrGetter('Day', true),\n     a: ampmGetter,\n     Z: timeZoneGetter\n};\n\nvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,\n    NUMBER_STRING = /^\\d+$/;\n\n/**\n * @ngdoc filter\n * @name ng.filter:date\n * @function\n *\n * @description\n *   Formats `date` to a string based on the requested `format`.\n *\n *   `format` string can be composed of the following elements:\n *\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n *   * `'MMMM'`: Month in year (January-December)\n *   * `'MMM'`: Month in year (Jan-Dec)\n *   * `'MM'`: Month in year, padded (01-12)\n *   * `'M'`: Month in year (1-12)\n *   * `'dd'`: Day in month, padded (01-31)\n *   * `'d'`: Day in month (1-31)\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n *   * `'EEE'`: Day in Week, (Sun-Sat)\n *   * `'HH'`: Hour in day, padded (00-23)\n *   * `'H'`: Hour in day (0-23)\n *   * `'hh'`: Hour in am/pm, padded (01-12)\n *   * `'h'`: Hour in am/pm, (1-12)\n *   * `'mm'`: Minute in hour, padded (00-59)\n *   * `'m'`: Minute in hour (0-59)\n *   * `'ss'`: Second in minute, padded (00-59)\n *   * `'s'`: Second in minute (0-59)\n *   * `'a'`: am/pm marker\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n *\n *   `format` string can also be one of the following predefined\n *   {@link guide/i18n localizable formats}:\n *\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n *     (e.g. Sep 3, 2010 12:05:08 pm)\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale\n *     (e.g. Friday, September 3, 2010)\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)\n *\n *   `format` string can contain literal values. These need to be quoted with single quotes (e.g.\n *   `\"h 'in the morning'\"`). In order to output single quote, use two single quotes in a sequence\n *   (e.g. `\"h o''clock\"`).\n *\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.SSSZ and its\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n *    specified in the string input, the time is considered to be in the local timezone.\n * @param {string=} format Formatting rules (see Description). If not specified,\n *    `mediumDate` is used.\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n           {{1288323623006 | date:'medium'}}<br>\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n          {{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}<br>\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n          {{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}<br>\n     </doc:source>\n     <doc:scenario>\n       it('should format date', function() {\n         expect(binding(\"1288323623006 | date:'medium'\")).\n            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n         expect(binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).\n            toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n         expect(binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).\n            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n       });\n     </doc:scenario>\n   </doc:example>\n */\ndateFilter.$inject = ['$locale'];\nfunction dateFilter($locale) {\n\n\n  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n  function jsonStringToDate(string){\n    var match;\n    if (match = string.match(R_ISO8601_STR)) {\n      var date = new Date(0),\n          tzHour = 0,\n          tzMin  = 0;\n      if (match[9]) {\n        tzHour = int(match[9] + match[10]);\n        tzMin = int(match[9] + match[11]);\n      }\n      date.setUTCFullYear(int(match[1]), int(match[2]) - 1, int(match[3]));\n      date.setUTCHours(int(match[4]||0) - tzHour, int(match[5]||0) - tzMin, int(match[6]||0), int(match[7]||0));\n      return date;\n    }\n    return string;\n  }\n\n\n  return function(date, format) {\n    var text = '',\n        parts = [],\n        fn, match;\n\n    format = format || 'mediumDate';\n    format = $locale.DATETIME_FORMATS[format] || format;\n    if (isString(date)) {\n      if (NUMBER_STRING.test(date)) {\n        date = int(date);\n      } else {\n        date = jsonStringToDate(date);\n      }\n    }\n\n    if (isNumber(date)) {\n      date = new Date(date);\n    }\n\n    if (!isDate(date)) {\n      return date;\n    }\n\n    while(format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = concat(parts, match, 1);\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    forEach(parts, function(value){\n      fn = DATE_FORMATS[value];\n      text += fn ? fn(date, $locale.DATETIME_FORMATS)\n                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n    });\n\n    return text;\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:json\n * @function\n *\n * @description\n *   Allows you to convert a JavaScript object into JSON string.\n *\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n *   the binding is automatically converted to JSON.\n *\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n * @returns {string} JSON string.\n *\n *\n * @example:\n   <doc:example>\n     <doc:source>\n       <pre>{{ {'name':'value'} | json }}</pre>\n     </doc:source>\n     <doc:scenario>\n       it('should jsonify filtered objects', function() {\n         expect(binding(\"{'name':'value'}\")).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n       });\n     </doc:scenario>\n   </doc:example>\n *\n */\nfunction jsonFilter() {\n  return function(object) {\n    return toJson(object, true);\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:lowercase\n * @function\n * @description\n * Converts string to lowercase.\n * @see angular.lowercase\n */\nvar lowercaseFilter = valueFn(lowercase);\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:uppercase\n * @function\n * @description\n * Converts string to uppercase.\n * @see angular.uppercase\n */\nvar uppercaseFilter = valueFn(uppercase);\n\n/**\n * @ngdoc function\n * @name ng.filter:limitTo\n * @function\n *\n * @description\n * Creates a new array containing only a specified number of elements in an array. The elements\n * are taken from either the beginning or the end of the source array, as specified by the\n * value and sign (positive or negative) of `limit`.\n *\n * Note: This function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array} array Source array to be limited.\n * @param {string|Number} limit The length of the returned array. If the `limit` number is\n *     positive, `limit` number of items from the beginning of the source array are copied.\n *     If the number is negative, `limit` number  of items from the end of the source array are\n *     copied. The `limit` will be trimmed if it exceeds `array.length`\n * @returns {Array} A new sub-array of length `limit` or less if input array had less than `limit`\n *     elements.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.numbers = [1,2,3,4,5,6,7,8,9];\n           $scope.limit = 3;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Limit {{numbers}} to: <input type=\"integer\" ng-model=\"limit\">\n         <p>Output: {{ numbers | limitTo:limit }}</p>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should limit the numer array to first three items', function() {\n         expect(element('.doc-example-live input[ng-model=limit]').val()).toBe('3');\n         expect(binding('numbers | limitTo:limit')).toEqual('[1,2,3]');\n       });\n\n       it('should update the output when -3 is entered', function() {\n         input('limit').enter(-3);\n         expect(binding('numbers | limitTo:limit')).toEqual('[7,8,9]');\n       });\n\n       it('should not exceed the maximum size of input array', function() {\n         input('limit').enter(100);\n         expect(binding('numbers | limitTo:limit')).toEqual('[1,2,3,4,5,6,7,8,9]');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nfunction limitToFilter(){\n  return function(array, limit) {\n    if (!(array instanceof Array)) return array;\n    limit = int(limit);\n    var out = [],\n      i, n;\n\n    // check that array is iterable\n    if (!array || !(array instanceof Array))\n      return out;\n\n    // if abs(limit) exceeds maximum length, trim it\n    if (limit > array.length)\n      limit = array.length;\n    else if (limit < -array.length)\n      limit = -array.length;\n\n    if (limit > 0) {\n      i = 0;\n      n = limit;\n    } else {\n      i = array.length + limit;\n      n = array.length;\n    }\n\n    for (; i<n; i++) {\n      out.push(array[i]);\n    }\n\n    return out;\n  }\n}\n\n/**\n * @ngdoc function\n * @name ng.filter:orderBy\n * @function\n *\n * @description\n * Orders a specified `array` by the `expression` predicate.\n *\n * Note: this function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more informaton about Angular arrays.\n *\n * @param {Array} array The array to sort.\n * @param {function(*)|string|Array.<(function(*)|string)>} expression A predicate to be\n *    used by the comparator to determine the order of elements.\n *\n *    Can be one of:\n *\n *    - `function`: Getter function. The result of this function will be sorted using the\n *      `<`, `=`, `>` operator.\n *    - `string`: An Angular expression which evaluates to an object to order by, such as 'name'\n *      to sort by a property called 'name'. Optionally prefixed with `+` or `-` to control\n *      ascending or descending sort order (for example, +name or -name).\n *    - `Array`: An array of function or string predicates. The first predicate in the array\n *      is used for sorting, but when two items are equivalent, the next predicate is used.\n *\n * @param {boolean=} reverse Reverse the order the array.\n * @returns {Array} Sorted copy of the source array.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.friends =\n               [{name:'John', phone:'555-1212', age:10},\n                {name:'Mary', phone:'555-9876', age:19},\n                {name:'Mike', phone:'555-4321', age:21},\n                {name:'Adam', phone:'555-5678', age:35},\n                {name:'Julie', phone:'555-8765', age:29}]\n           $scope.predicate = '-age';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n         <hr/>\n         [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n         <table class=\"friend\">\n           <tr>\n             <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n                 (<a href ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n             <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n             <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should be reverse ordered by aged', function() {\n         expect(binding('predicate')).toBe('-age');\n         expect(repeater('table.friend', 'friend in friends').column('friend.age')).\n           toEqual(['35', '29', '21', '19', '10']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Adam', 'Julie', 'Mike', 'Mary', 'John']);\n       });\n\n       it('should reorder the table when user selects different predicate', function() {\n         element('.doc-example-live a:contains(\"Name\")').click();\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Adam', 'John', 'Julie', 'Mary', 'Mike']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.age')).\n           toEqual(['35', '10', '29', '19', '21']);\n\n         element('.doc-example-live a:contains(\"Phone\")').click();\n         expect(repeater('table.friend', 'friend in friends').column('friend.phone')).\n           toEqual(['555-9876', '555-8765', '555-5678', '555-4321', '555-1212']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Julie', 'Adam', 'Mike', 'John']);\n       });\n     </doc:scenario>\n   </doc:example>\n */\norderByFilter.$inject = ['$parse'];\nfunction orderByFilter($parse){\n  return function(array, sortPredicate, reverseOrder) {\n    if (!isArray(array)) return array;\n    if (!sortPredicate) return array;\n    sortPredicate = isArray(sortPredicate) ? sortPredicate: [sortPredicate];\n    sortPredicate = map(sortPredicate, function(predicate){\n      var descending = false, get = predicate || identity;\n      if (isString(predicate)) {\n        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\n          descending = predicate.charAt(0) == '-';\n          predicate = predicate.substring(1);\n        }\n        get = $parse(predicate);\n      }\n      return reverseComparator(function(a,b){\n        return compare(get(a),get(b));\n      }, descending);\n    });\n    var arrayCopy = [];\n    for ( var i = 0; i < array.length; i++) { arrayCopy.push(array[i]); }\n    return arrayCopy.sort(reverseComparator(comparator, reverseOrder));\n\n    function comparator(o1, o2){\n      for ( var i = 0; i < sortPredicate.length; i++) {\n        var comp = sortPredicate[i](o1, o2);\n        if (comp !== 0) return comp;\n      }\n      return 0;\n    }\n    function reverseComparator(comp, descending) {\n      return toBoolean(descending)\n          ? function(a,b){return comp(b,a);}\n          : comp;\n    }\n    function compare(v1, v2){\n      var t1 = typeof v1;\n      var t2 = typeof v2;\n      if (t1 == t2) {\n        if (t1 == \"string\") v1 = v1.toLowerCase();\n        if (t1 == \"string\") v2 = v2.toLowerCase();\n        if (v1 === v2) return 0;\n        return v1 < v2 ? -1 : 1;\n      } else {\n        return t1 < t2 ? -1 : 1;\n      }\n    }\n  }\n}\n\nfunction ngDirective(directive) {\n  if (isFunction(directive)) {\n    directive = {\n      link: directive\n    }\n  }\n  directive.restrict = directive.restrict || 'AC';\n  return valueFn(directive);\n}\n\n/**\n * @ngdoc directive\n * @name ng.directive:a\n * @restrict E\n *\n * @description\n * Modifies the default behavior of html A tag, so that the default action is prevented when href\n * attribute is empty.\n *\n * The reasoning for this change is to allow easy creation of action links with `ngClick` directive\n * without changing the location or causing page reloads, e.g.:\n * `<a href=\"\" ng-click=\"model.$save()\">Save</a>`\n */\nvar htmlAnchorDirective = valueFn({\n  restrict: 'E',\n  compile: function(element, attr) {\n\n    if (msie <= 8) {\n\n      // turn <a href ng-click=\"..\">link</a> into a stylable link in IE\n      // but only if it doesn't have name attribute, in which case it's an anchor\n      if (!attr.href && !attr.name) {\n        attr.$set('href', '');\n      }\n\n      // add a comment node to anchors to workaround IE bug that causes element content to be reset\n      // to new attribute content if attribute is updated with value containing @ and element also\n      // contains value with @\n      // see issue #1949\n      element.append(document.createComment('IE fix'));\n    }\n\n    return function(scope, element) {\n      element.bind('click', function(event){\n        // if we have no href url, then don't navigate anywhere.\n        if (!element.attr('href')) {\n          event.preventDefault();\n        }\n      });\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngHref\n * @restrict A\n *\n * @description\n * Using Angular markup like {{hash}} in an href attribute makes\n * the page open to a wrong URL, if the user clicks that link before\n * angular has a chance to replace the {{hash}} with actual URL, the\n * link will be broken and will most likely return a 404 error.\n * The `ngHref` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <a href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * @element A\n * @param {template} ngHref any string which can contain `{{}}` markup.\n *\n * @example\n * This example uses `link` variable inside `href` attribute:\n    <doc:example>\n      <doc:source>\n        <input ng-model=\"value\" /><br />\n        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n      </doc:source>\n      <doc:scenario>\n        it('should execute ng-click but not reload when href without value', function() {\n          element('#link-1').click();\n          expect(input('value').val()).toEqual('1');\n          expect(element('#link-1').attr('href')).toBe(\"\");\n        });\n\n        it('should execute ng-click but not reload when href empty string', function() {\n          element('#link-2').click();\n          expect(input('value').val()).toEqual('2');\n          expect(element('#link-2').attr('href')).toBe(\"\");\n        });\n\n        it('should execute ng-click and change url when ng-href specified', function() {\n          expect(element('#link-3').attr('href')).toBe(\"/123\");\n\n          element('#link-3').click();\n          expect(browser().window().path()).toEqual('/123');\n        });\n\n        it('should execute ng-click but not reload when href empty string and name specified', function() {\n          element('#link-4').click();\n          expect(input('value').val()).toEqual('4');\n          expect(element('#link-4').attr('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when no href but name specified', function() {\n          element('#link-5').click();\n          expect(input('value').val()).toEqual('5');\n          expect(element('#link-5').attr('href')).toBe(undefined);\n        });\n\n        it('should only change url when only ng-href', function() {\n          input('value').enter('6');\n          expect(element('#link-6').attr('href')).toBe('6');\n\n          element('#link-6').click();\n          expect(browser().location().url()).toEqual('/6');\n        });\n      </doc:scenario>\n    </doc:example>\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSrc\n * @restrict A\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrc` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * @element IMG\n * @param {template} ngSrc any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngDisabled\n * @restrict A\n *\n * @description\n *\n * The following markup will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:\n * <pre>\n * <div ng-init=\"scope = { isDisabled: false }\">\n *  <button disabled=\"{{scope.isDisabled}}\">Disabled</button>\n * </div>\n * </pre>\n *\n * The HTML specs do not require browsers to preserve the special attributes such as disabled.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngDisabled` directive.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n      </doc:source>\n      <doc:scenario>\n        it('should toggle button', function() {\n          expect(element('.doc-example-live :button').prop('disabled')).toBeFalsy();\n          input('checked').check();\n          expect(element('.doc-example-live :button').prop('disabled')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {expression} ngDisabled Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngChecked\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as checked.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngChecked` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n      </doc:source>\n      <doc:scenario>\n        it('should check both checkBoxes', function() {\n          expect(element('.doc-example-live #checkSlave').prop('checked')).toBeFalsy();\n          input('master').check();\n          expect(element('.doc-example-live #checkSlave').prop('checked')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {expression} ngChecked Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMultiple\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as multiple.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngMultiple` directive.\n *\n * @example\n     <doc:example>\n       <doc:source>\n         Check me check multiple: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n         <select id=\"select\" ng-multiple=\"checked\">\n           <option>Misko</option>\n           <option>Igor</option>\n           <option>Vojta</option>\n           <option>Di</option>\n         </select>\n       </doc:source>\n       <doc:scenario>\n         it('should toggle multiple', function() {\n           expect(element('.doc-example-live #select').prop('multiple')).toBeFalsy();\n           input('checked').check();\n           expect(element('.doc-example-live #select').prop('multiple')).toBeTruthy();\n         });\n       </doc:scenario>\n     </doc:example>\n *\n * @element SELECT\n * @param {expression} ngMultiple Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngReadonly\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as readonly.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngReadonly` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n      </doc:source>\n      <doc:scenario>\n        it('should toggle readonly attr', function() {\n          expect(element('.doc-example-live :text').prop('readonly')).toBeFalsy();\n          input('checked').check();\n          expect(element('.doc-example-live :text').prop('readonly')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {string} expression Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSelected\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as selected.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduced the `ngSelected` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n        <select>\n          <option>Hello!</option>\n          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n        </select>\n      </doc:source>\n      <doc:scenario>\n        it('should select Greetings!', function() {\n          expect(element('.doc-example-live #greet').prop('selected')).toBeFalsy();\n          input('selected').check();\n          expect(element('.doc-example-live #greet').prop('selected')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element OPTION\n * @param {string} expression Angular expression that will be evaluated.\n */\n\n\nvar ngAttributeAliasDirectives = {};\n\n\n// boolean attrs are evaluated\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 100,\n      compile: function() {\n        return function(scope, element, attr) {\n          scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n            attr.$set(attrName, !!value);\n          });\n        };\n      }\n    };\n  };\n});\n\n\n// ng-src, ng-href are interpolated\nforEach(['src', 'href'], function(attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 99, // it needs to run after the attributes are interpolated\n      link: function(scope, element, attr) {\n        attr.$observe(normalized, function(value) {\n          if (!value)\n             return;\n\n          attr.$set(attrName, value);\n\n          // on IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n          // to set the property as well to achieve the desired effect.\n          // we use attr[attrName] value since $set can sanitize the url.\n          if (msie) element.prop(attrName, attr[attrName]);\n        });\n      }\n    };\n  };\n});\n\nvar nullFormCtrl = {\n  $addControl: noop,\n  $removeControl: noop,\n  $setValidity: noop,\n  $setDirty: noop\n};\n\n/**\n * @ngdoc object\n * @name ng.directive:form.FormController\n *\n * @property {boolean} $pristine True if user has not interacted with the form yet.\n * @property {boolean} $dirty True if user has already interacted with the form.\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\n *\n * @property {Object} $error Is an object hash, containing references to all invalid controls or\n *  forms, where:\n *\n *  - keys are validation tokens (error names) — such as `required`, `url` or `email`),\n *  - values are arrays of controls or forms that are invalid with given error.\n *\n * @description\n * `FormController` keeps track of all its controls and nested forms as well as state of them,\n * such as being valid/invalid or dirty/pristine.\n *\n * Each {@link ng.directive:form form} directive creates an instance\n * of `FormController`.\n *\n */\n//asks for $scope to fool the BC controller module\nFormController.$inject = ['$element', '$attrs', '$scope'];\nfunction FormController(element, attrs) {\n  var form = this,\n      parentForm = element.parent().controller('form') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      errors = form.$error = {};\n\n  // init state\n  form.$name = attrs.name;\n  form.$dirty = false;\n  form.$pristine = true;\n  form.$valid = true;\n  form.$invalid = false;\n\n  parentForm.$addControl(form);\n\n  // Setup initial state of the control\n  element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    element.\n      removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).\n      addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  form.$addControl = function(control) {\n    if (control.$name && !form.hasOwnProperty(control.$name)) {\n      form[control.$name] = control;\n    }\n  };\n\n  form.$removeControl = function(control) {\n    if (control.$name && form[control.$name] === control) {\n      delete form[control.$name];\n    }\n    forEach(errors, function(queue, validationToken) {\n      form.$setValidity(validationToken, true, control);\n    });\n  };\n\n  form.$setValidity = function(validationToken, isValid, control) {\n    var queue = errors[validationToken];\n\n    if (isValid) {\n      if (queue) {\n        arrayRemove(queue, control);\n        if (!queue.length) {\n          invalidCount--;\n          if (!invalidCount) {\n            toggleValidCss(isValid);\n            form.$valid = true;\n            form.$invalid = false;\n          }\n          errors[validationToken] = false;\n          toggleValidCss(true, validationToken);\n          parentForm.$setValidity(validationToken, true, form);\n        }\n      }\n\n    } else {\n      if (!invalidCount) {\n        toggleValidCss(isValid);\n      }\n      if (queue) {\n        if (includes(queue, control)) return;\n      } else {\n        errors[validationToken] = queue = [];\n        invalidCount++;\n        toggleValidCss(false, validationToken);\n        parentForm.$setValidity(validationToken, false, form);\n      }\n      queue.push(control);\n\n      form.$valid = false;\n      form.$invalid = true;\n    }\n  };\n\n  form.$setDirty = function() {\n    element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);\n    form.$dirty = true;\n    form.$pristine = false;\n    parentForm.$setDirty();\n  };\n\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngForm\n * @restrict EAC\n *\n * @description\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n * sub-group of controls needs to be determined.\n *\n * @param {string=} name|ngForm Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n */\n\n /**\n * @ngdoc directive\n * @name ng.directive:form\n * @restrict E\n *\n * @description\n * Directive that instantiates\n * {@link ng.directive:form.FormController FormController}.\n *\n * If `name` attribute is specified, the form controller is published onto the current scope under\n * this name.\n *\n * # Alias: {@link ng.directive:ngForm `ngForm`}\n *\n * In angular forms can be nested. This means that the outer form is valid when all of the child\n * forms are valid as well. However browsers do not allow nesting of `<form>` elements, for this\n * reason angular provides {@link ng.directive:ngForm `ngForm`} alias\n * which behaves identical to `<form>` but allows form nesting.\n *\n *\n * # CSS classes\n *  - `ng-valid` Is set if the form is valid.\n *  - `ng-invalid` Is set if the form is invalid.\n *  - `ng-pristine` Is set if the form is pristine.\n *  - `ng-dirty` Is set if the form is dirty.\n *\n *\n * # Submitting a form and preventing default action\n *\n * Since the role of forms in client-side Angular applications is different than in classical\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\n * to handle the form submission in application specific way.\n *\n * For this reason, Angular prevents the default action (form submission to the server) unless the\n * `<form>` element has an `action` attribute specified.\n *\n * You can use one of the following two ways to specify what javascript method should be called when\n * a form is submitted:\n *\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n * - {@link ng.directive:ngClick ngClick} directive on the first\n  *  button or input field of type submit (input[type=submit])\n *\n * To prevent double execution of the handler, use only one of ngSubmit or ngClick directives. This\n * is because of the following form submission rules coming from the html spec:\n *\n * - If a form has only one input field then hitting enter in this field triggers form submit\n * (`ngSubmit`)\n * - if a form has has 2+ input fields and no buttons or input[type=submit] then hitting enter\n * doesn't trigger submit\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n *\n * @param {string=} name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.userType = 'guest';\n         }\n       </script>\n       <form name=\"myForm\" ng-controller=\"Ctrl\">\n         userType: <input name=\"input\" ng-model=\"userType\" required>\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n         <tt>userType = {{userType}}</tt><br>\n         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n        </form>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n         expect(binding('userType')).toEqual('guest');\n         expect(binding('myForm.input.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty', function() {\n         input('userType').enter('');\n         expect(binding('userType')).toEqual('');\n         expect(binding('myForm.input.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar formDirectiveFactory = function(isNgForm) {\n  return ['$timeout', function($timeout) {\n    var formDirective = {\n      name: 'form',\n      restrict: 'E',\n      controller: FormController,\n      compile: function() {\n        return {\n          pre: function(scope, formElement, attr, controller) {\n            if (!attr.action) {\n              // we can't use jq events because if a form is destroyed during submission the default\n              // action is not prevented. see #1238\n              //\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n              // page reload if the form was destroyed by submission of the form via a click handler\n              // on a button in the form. Looks like an IE9 specific bug.\n              var preventDefaultListener = function(event) {\n                event.preventDefault\n                  ? event.preventDefault()\n                  : event.returnValue = false; // IE\n              };\n\n              addEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n\n              // unregister the preventDefault listener so that we don't not leak memory but in a\n              // way that will achieve the prevention of the default action.\n              formElement.bind('$destroy', function() {\n                $timeout(function() {\n                  removeEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n                }, 0, false);\n              });\n            }\n\n            var parentFormCtrl = formElement.parent().controller('form'),\n                alias = attr.name || attr.ngForm;\n\n            if (alias) {\n              scope[alias] = controller;\n            }\n            if (parentFormCtrl) {\n              formElement.bind('$destroy', function() {\n                parentFormCtrl.$removeControl(controller);\n                if (alias) {\n                  scope[alias] = undefined;\n                }\n                extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n              });\n            }\n          }\n        };\n      }\n    };\n\n    return isNgForm ? extend(copy(formDirective), {restrict: 'EAC'}) : formDirective;\n  }];\n};\n\nvar formDirective = formDirectiveFactory();\nvar ngFormDirective = formDirectiveFactory(true);\n\nvar URL_REGEXP = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\nvar EMAIL_REGEXP = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/;\nvar NUMBER_REGEXP = /^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/;\n\nvar inputType = {\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.text\n   *\n   * @description\n   * Standard HTML text input with angular data binding.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'guest';\n             $scope.word = /^\\w*$/;\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Single word: <input type=\"text\" name=\"input\" ng-model=\"text\"\n                               ng-pattern=\"word\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n             Single word only!</span>\n\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('guest');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if multi word', function() {\n            input('text').enter('hello world');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'text': textInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.number\n   *\n   * @description\n   * Text input with number validation and transformation. Sets the `number` validation\n   * error if not a valid number.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.value = 12;\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Number: <input type=\"number\" name=\"input\" ng-model=\"value\"\n                          min=\"0\" max=\"99\" required>\n           <span class=\"error\" ng-show=\"myForm.list.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.list.$error.number\">\n             Not valid number!</span>\n           <tt>value = {{value}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n           expect(binding('value')).toEqual('12');\n           expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n           input('value').enter('');\n           expect(binding('value')).toEqual('');\n           expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if over max', function() {\n           input('value').enter('123');\n           expect(binding('value')).toEqual('');\n           expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'number': numberInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.url\n   *\n   * @description\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n   * valid URL.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'http://google.com';\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           URL: <input type=\"url\" name=\"input\" ng-model=\"text\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n             Not valid url!</span>\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('http://google.com');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if not url', function() {\n            input('text').enter('xxx');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'url': urlInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.email\n   *\n   * @description\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\n   * address.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'me@example.com';\n           }\n         </script>\n           <form name=\"myForm\" ng-controller=\"Ctrl\">\n             Email: <input type=\"email\" name=\"input\" ng-model=\"text\" required>\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n               Not valid email!</span>\n             <tt>text = {{text}}</tt><br/>\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n           </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('me@example.com');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if not email', function() {\n            input('text').enter('xxx');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'email': emailInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.radio\n   *\n   * @description\n   * HTML radio button.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string} value The value to which the expression should be set when selected.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.color = 'blue';\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           <input type=\"radio\" ng-model=\"color\" value=\"red\">  Red <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"green\"> Green <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"blue\"> Blue <br/>\n           <tt>color = {{color}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should change state', function() {\n            expect(binding('color')).toEqual('blue');\n\n            input('color').select('red');\n            expect(binding('color')).toEqual('red');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'radio': radioInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.checkbox\n   *\n   * @description\n   * HTML checkbox.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngTrueValue The value to which the expression should be set when selected.\n   * @param {string=} ngFalseValue The value to which the expression should be set when not selected.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.value1 = true;\n             $scope.value2 = 'YES'\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Value1: <input type=\"checkbox\" ng-model=\"value1\"> <br/>\n           Value2: <input type=\"checkbox\" ng-model=\"value2\"\n                          ng-true-value=\"YES\" ng-false-value=\"NO\"> <br/>\n           <tt>value1 = {{value1}}</tt><br/>\n           <tt>value2 = {{value2}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should change state', function() {\n            expect(binding('value1')).toEqual('true');\n            expect(binding('value2')).toEqual('YES');\n\n            input('value1').check();\n            input('value2').check();\n            expect(binding('value1')).toEqual('false');\n            expect(binding('value2')).toEqual('NO');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'checkbox': checkboxInputType,\n\n  'hidden': noop,\n  'button': noop,\n  'submit': noop,\n  'reset': noop\n};\n\n\nfunction isEmpty(value) {\n  return isUndefined(value) || value === '' || value === null || value !== value;\n}\n\n\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\n  var listener = function() {\n    var value = trim(element.val());\n\n    if (ctrl.$viewValue !== value) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(value);\n      });\n    }\n  };\n\n  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n  // input event on backspace, delete or cut\n  if ($sniffer.hasEvent('input')) {\n    element.bind('input', listener);\n  } else {\n    var timeout;\n\n    var deferListener = function() {\n      if (!timeout) {\n        timeout = $browser.defer(function() {\n          listener();\n          timeout = null;\n        });\n      }\n    };\n\n    element.bind('keydown', function(event) {\n      var key = event.keyCode;\n\n      // ignore\n      //    command            modifiers                   arrows\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\n      deferListener();\n    });\n\n    // if user paste into input using mouse, we need \"change\" event to catch it\n    element.bind('change', listener);\n\n    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n    if ($sniffer.hasEvent('paste')) {\n      element.bind('paste cut', deferListener);\n    }\n  }\n\n\n  ctrl.$render = function() {\n    element.val(isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\n  };\n\n  // pattern validator\n  var pattern = attr.ngPattern,\n      patternValidator;\n\n  var validate = function(regexp, value) {\n    if (isEmpty(value) || regexp.test(value)) {\n      ctrl.$setValidity('pattern', true);\n      return value;\n    } else {\n      ctrl.$setValidity('pattern', false);\n      return undefined;\n    }\n  };\n\n  if (pattern) {\n    if (pattern.match(/^\\/(.*)\\/$/)) {\n      pattern = new RegExp(pattern.substr(1, pattern.length - 2));\n      patternValidator = function(value) {\n        return validate(pattern, value)\n      };\n    } else {\n      patternValidator = function(value) {\n        var patternObj = scope.$eval(pattern);\n\n        if (!patternObj || !patternObj.test) {\n          throw new Error('Expected ' + pattern + ' to be a RegExp but was ' + patternObj);\n        }\n        return validate(patternObj, value);\n      };\n    }\n\n    ctrl.$formatters.push(patternValidator);\n    ctrl.$parsers.push(patternValidator);\n  }\n\n  // min length validator\n  if (attr.ngMinlength) {\n    var minlength = int(attr.ngMinlength);\n    var minLengthValidator = function(value) {\n      if (!isEmpty(value) && value.length < minlength) {\n        ctrl.$setValidity('minlength', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('minlength', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(minLengthValidator);\n    ctrl.$formatters.push(minLengthValidator);\n  }\n\n  // max length validator\n  if (attr.ngMaxlength) {\n    var maxlength = int(attr.ngMaxlength);\n    var maxLengthValidator = function(value) {\n      if (!isEmpty(value) && value.length > maxlength) {\n        ctrl.$setValidity('maxlength', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('maxlength', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(maxLengthValidator);\n    ctrl.$formatters.push(maxLengthValidator);\n  }\n}\n\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  ctrl.$parsers.push(function(value) {\n    var empty = isEmpty(value);\n    if (empty || NUMBER_REGEXP.test(value)) {\n      ctrl.$setValidity('number', true);\n      return value === '' ? null : (empty ? value : parseFloat(value));\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n\n  ctrl.$formatters.push(function(value) {\n    return isEmpty(value) ? '' : '' + value;\n  });\n\n  if (attr.min) {\n    var min = parseFloat(attr.min);\n    var minValidator = function(value) {\n      if (!isEmpty(value) && value < min) {\n        ctrl.$setValidity('min', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('min', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(minValidator);\n    ctrl.$formatters.push(minValidator);\n  }\n\n  if (attr.max) {\n    var max = parseFloat(attr.max);\n    var maxValidator = function(value) {\n      if (!isEmpty(value) && value > max) {\n        ctrl.$setValidity('max', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('max', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(maxValidator);\n    ctrl.$formatters.push(maxValidator);\n  }\n\n  ctrl.$formatters.push(function(value) {\n\n    if (isEmpty(value) || isNumber(value)) {\n      ctrl.$setValidity('number', true);\n      return value;\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n}\n\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var urlValidator = function(value) {\n    if (isEmpty(value) || URL_REGEXP.test(value)) {\n      ctrl.$setValidity('url', true);\n      return value;\n    } else {\n      ctrl.$setValidity('url', false);\n      return undefined;\n    }\n  };\n\n  ctrl.$formatters.push(urlValidator);\n  ctrl.$parsers.push(urlValidator);\n}\n\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var emailValidator = function(value) {\n    if (isEmpty(value) || EMAIL_REGEXP.test(value)) {\n      ctrl.$setValidity('email', true);\n      return value;\n    } else {\n      ctrl.$setValidity('email', false);\n      return undefined;\n    }\n  };\n\n  ctrl.$formatters.push(emailValidator);\n  ctrl.$parsers.push(emailValidator);\n}\n\nfunction radioInputType(scope, element, attr, ctrl) {\n  // make the name unique, if not defined\n  if (isUndefined(attr.name)) {\n    element.attr('name', nextUid());\n  }\n\n  element.bind('click', function() {\n    if (element[0].checked) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(attr.value);\n      });\n    }\n  });\n\n  ctrl.$render = function() {\n    var value = attr.value;\n    element[0].checked = (value == ctrl.$viewValue);\n  };\n\n  attr.$observe('value', ctrl.$render);\n}\n\nfunction checkboxInputType(scope, element, attr, ctrl) {\n  var trueValue = attr.ngTrueValue,\n      falseValue = attr.ngFalseValue;\n\n  if (!isString(trueValue)) trueValue = true;\n  if (!isString(falseValue)) falseValue = false;\n\n  element.bind('click', function() {\n    scope.$apply(function() {\n      ctrl.$setViewValue(element[0].checked);\n    });\n  });\n\n  ctrl.$render = function() {\n    element[0].checked = ctrl.$viewValue;\n  };\n\n  ctrl.$formatters.push(function(value) {\n    return value === trueValue;\n  });\n\n  ctrl.$parsers.push(function(value) {\n    return value ? trueValue : falseValue;\n  });\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:textarea\n * @restrict E\n *\n * @description\n * HTML textarea element control with angular data-binding. The data-binding and validation\n * properties of this element are exactly the same as those of the\n * {@link ng.directive:input input element}.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:input\n * @restrict E\n *\n * @description\n * HTML input element control with angular data-binding. Input control follows HTML5 input types\n * and polyfills the HTML5 validation behavior for older browsers.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.user = {name: 'guest', last: 'visitor'};\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <form name=\"myForm\">\n           User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n           <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n             Required!</span><br>\n           Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n             ng-minlength=\"3\" ng-maxlength=\"10\">\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n             Too short!</span>\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n             Too long!</span><br>\n         </form>\n         <hr>\n         <tt>user = {{user}}</tt><br/>\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n       </div>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n          expect(binding('user')).toEqual('{\"name\":\"guest\",\"last\":\"visitor\"}');\n          expect(binding('myForm.userName.$valid')).toEqual('true');\n          expect(binding('myForm.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty when required', function() {\n          input('user.name').enter('');\n          expect(binding('user')).toEqual('{\"last\":\"visitor\"}');\n          expect(binding('myForm.userName.$valid')).toEqual('false');\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n\n        it('should be valid if empty when min length is set', function() {\n          input('user.last').enter('');\n          expect(binding('user')).toEqual('{\"name\":\"guest\",\"last\":\"\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('true');\n          expect(binding('myForm.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if less than required min length', function() {\n          input('user.last').enter('xx');\n          expect(binding('user')).toEqual('{\"name\":\"guest\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('false');\n          expect(binding('myForm.lastName.$error')).toMatch(/minlength/);\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n\n        it('should be invalid if longer than max length', function() {\n          input('user.last').enter('some ridiculously long name');\n          expect(binding('user'))\n            .toEqual('{\"name\":\"guest\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('false');\n          expect(binding('myForm.lastName.$error')).toMatch(/maxlength/);\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar inputDirective = ['$browser', '$sniffer', function($browser, $sniffer) {\n  return {\n    restrict: 'E',\n    require: '?ngModel',\n    link: function(scope, element, attr, ctrl) {\n      if (ctrl) {\n        (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer,\n                                                            $browser);\n      }\n    }\n  };\n}];\n\nvar VALID_CLASS = 'ng-valid',\n    INVALID_CLASS = 'ng-invalid',\n    PRISTINE_CLASS = 'ng-pristine',\n    DIRTY_CLASS = 'ng-dirty';\n\n/**\n * @ngdoc object\n * @name ng.directive:ngModel.NgModelController\n *\n * @property {string} $viewValue Actual string value in the view.\n * @property {*} $modelValue The value in the model, that the control is bound to.\n * @property {Array.<Function>} $parsers Whenever the control reads value from the DOM, it executes\n *     all of these functions to sanitize / convert the value as well as validate.\n *\n * @property {Array.<Function>} $formatters Whenever the model value changes, it executes all of\n *     these functions to convert the value as well as validate.\n *\n * @property {Object} $error An bject hash with all errors as keys.\n *\n * @property {boolean} $pristine True if user has not interacted with the control yet.\n * @property {boolean} $dirty True if user has already interacted with the control.\n * @property {boolean} $valid True if there is no error.\n * @property {boolean} $invalid True if at least one error on the control.\n *\n * @description\n *\n * `NgModelController` provides API for the `ng-model` directive. The controller contains\n * services for data-binding, validation, CSS update, value formatting and parsing. It\n * specifically does not contain any logic which deals with DOM rendering or listening to\n * DOM events. The `NgModelController` is meant to be extended by other directives where, the\n * directive provides DOM manipulation and the `NgModelController` provides the data-binding.\n *\n * This example shows how to use `NgModelController` with a custom control to achieve\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n * collaborate together to achieve the desired result.\n *\n * <example module=\"customControl\">\n    <file name=\"style.css\">\n      [contenteditable] {\n        border: 1px solid black;\n        background-color: white;\n        min-height: 20px;\n      }\n\n      .ng-invalid {\n        border: 1px solid red;\n      }\n\n    </file>\n    <file name=\"script.js\">\n      angular.module('customControl', []).\n        directive('contenteditable', function() {\n          return {\n            restrict: 'A', // only activate on element attribute\n            require: '?ngModel', // get a hold of NgModelController\n            link: function(scope, element, attrs, ngModel) {\n              if(!ngModel) return; // do nothing if no ng-model\n\n              // Specify how UI should be updated\n              ngModel.$render = function() {\n                element.html(ngModel.$viewValue || '');\n              };\n\n              // Listen for change events to enable binding\n              element.bind('blur keyup change', function() {\n                scope.$apply(read);\n              });\n              read(); // initialize\n\n              // Write data to the model\n              function read() {\n                ngModel.$setViewValue(element.html());\n              }\n            }\n          };\n        });\n    </file>\n    <file name=\"index.html\">\n      <form name=\"myForm\">\n       <div contenteditable\n            name=\"myWidget\" ng-model=\"userContent\"\n            required>Change me!</div>\n        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n       <hr>\n       <textarea ng-model=\"userContent\"></textarea>\n      </form>\n    </file>\n    <file name=\"scenario.js\">\n      it('should data-bind and become invalid', function() {\n        var contentEditable = element('[contenteditable]');\n\n        expect(contentEditable.text()).toEqual('Change me!');\n        input('userContent').enter('');\n        expect(contentEditable.text()).toEqual('');\n        expect(contentEditable.prop('className')).toMatch(/ng-invalid-required/);\n      });\n    </file>\n * </example>\n *\n */\nvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse',\n    function($scope, $exceptionHandler, $attr, $element, $parse) {\n  this.$viewValue = Number.NaN;\n  this.$modelValue = Number.NaN;\n  this.$parsers = [];\n  this.$formatters = [];\n  this.$viewChangeListeners = [];\n  this.$pristine = true;\n  this.$dirty = false;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$name = $attr.name;\n\n  var ngModelGet = $parse($attr.ngModel),\n      ngModelSet = ngModelGet.assign;\n\n  if (!ngModelSet) {\n    throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + $attr.ngModel +\n        ' (' + startingTag($element) + ')');\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$render\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\n   * directive will implement this method.\n   */\n  this.$render = noop;\n\n  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      $error = this.$error = {}; // keep invalid keys here\n\n\n  // Setup initial state of the control\n  $element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    $element.\n      removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).\n      addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setValidity\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Change the validity state, and notifies the form when the control changes validity. (i.e. it\n   * does not notify form if given validator is already marked as invalid).\n   *\n   * This method should be called by validators - i.e. the parser or formatter functions.\n   *\n   * @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign\n   *        to `$error[validationErrorKey]=isValid` so that it is available for data-binding.\n   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n   * @param {boolean} isValid Whether the current state is valid (true) or invalid (false).\n   */\n  this.$setValidity = function(validationErrorKey, isValid) {\n    if ($error[validationErrorKey] === !isValid) return;\n\n    if (isValid) {\n      if ($error[validationErrorKey]) invalidCount--;\n      if (!invalidCount) {\n        toggleValidCss(true);\n        this.$valid = true;\n        this.$invalid = false;\n      }\n    } else {\n      toggleValidCss(false);\n      this.$invalid = true;\n      this.$valid = false;\n      invalidCount++;\n    }\n\n    $error[validationErrorKey] = !isValid;\n    toggleValidCss(isValid, validationErrorKey);\n\n    parentForm.$setValidity(validationErrorKey, isValid, this);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setViewValue\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Read a value from view.\n   *\n   * This method should be called from within a DOM event handler.\n   * For example {@link ng.directive:input input} or\n   * {@link ng.directive:select select} directives call it.\n   *\n   * It internally calls all `parsers` and if resulted value is valid, updates the model and\n   * calls all registered change listeners.\n   *\n   * @param {string} value Value from the view.\n   */\n  this.$setViewValue = function(value) {\n    this.$viewValue = value;\n\n    // change to dirty\n    if (this.$pristine) {\n      this.$dirty = true;\n      this.$pristine = false;\n      $element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);\n      parentForm.$setDirty();\n    }\n\n    forEach(this.$parsers, function(fn) {\n      value = fn(value);\n    });\n\n    if (this.$modelValue !== value) {\n      this.$modelValue = value;\n      ngModelSet($scope, value);\n      forEach(this.$viewChangeListeners, function(listener) {\n        try {\n          listener();\n        } catch(e) {\n          $exceptionHandler(e);\n        }\n      })\n    }\n  };\n\n  // model -> value\n  var ctrl = this;\n\n  $scope.$watch(function ngModelWatch() {\n    var value = ngModelGet($scope);\n\n    // if scope model value and ngModel value are out of sync\n    if (ctrl.$modelValue !== value) {\n\n      var formatters = ctrl.$formatters,\n          idx = formatters.length;\n\n      ctrl.$modelValue = value;\n      while(idx--) {\n        value = formatters[idx](value);\n      }\n\n      if (ctrl.$viewValue !== value) {\n        ctrl.$viewValue = value;\n        ctrl.$render();\n      }\n    }\n  });\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngModel\n *\n * @element input\n *\n * @description\n * Is directive that tells Angular to do two-way data binding. It works together with `input`,\n * `select`, `textarea`. You can easily write your own directives to use `ngModel` as well.\n *\n * `ngModel` is responsible for:\n *\n * - binding the view into the model, which other directives such as `input`, `textarea` or `select`\n *   require,\n * - providing validation behavior (i.e. required, number, email, url),\n * - keeping state of the control (valid/invalid, dirty/pristine, validation errors),\n * - setting related css class onto the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`),\n * - register the control with parent {@link ng.directive:form form}.\n *\n * For basic examples, how to use `ngModel`, see:\n *\n *  - {@link ng.directive:input input}\n *    - {@link ng.directive:input.text text}\n *    - {@link ng.directive:input.checkbox checkbox}\n *    - {@link ng.directive:input.radio radio}\n *    - {@link ng.directive:input.number number}\n *    - {@link ng.directive:input.email email}\n *    - {@link ng.directive:input.url url}\n *  - {@link ng.directive:select select}\n *  - {@link ng.directive:textarea textarea}\n *\n */\nvar ngModelDirective = function() {\n  return {\n    require: ['ngModel', '^?form'],\n    controller: NgModelController,\n    link: function(scope, element, attr, ctrls) {\n      // notify others, especially parent forms\n\n      var modelCtrl = ctrls[0],\n          formCtrl = ctrls[1] || nullFormCtrl;\n\n      formCtrl.$addControl(modelCtrl);\n\n      element.bind('$destroy', function() {\n        formCtrl.$removeControl(modelCtrl);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngChange\n * @restrict E\n *\n * @description\n * Evaluate given expression when user changes the input.\n * The expression is not evaluated when the value change is coming from the model.\n *\n * Note, this directive requires `ngModel` to be present.\n *\n * @element input\n *\n * @example\n * <doc:example>\n *   <doc:source>\n *     <script>\n *       function Controller($scope) {\n *         $scope.counter = 0;\n *         $scope.change = function() {\n *           $scope.counter++;\n *         };\n *       }\n *     </script>\n *     <div ng-controller=\"Controller\">\n *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n *       <label for=\"ng-change-example2\">Confirmed</label><br />\n *       debug = {{confirmed}}<br />\n *       counter = {{counter}}\n *     </div>\n *   </doc:source>\n *   <doc:scenario>\n *     it('should evaluate the expression if changing from view', function() {\n *       expect(binding('counter')).toEqual('0');\n *       element('#ng-change-example1').click();\n *       expect(binding('counter')).toEqual('1');\n *       expect(binding('confirmed')).toEqual('true');\n *     });\n *\n *     it('should not evaluate the expression if changing from model', function() {\n *       element('#ng-change-example2').click();\n *       expect(binding('counter')).toEqual('0');\n *       expect(binding('confirmed')).toEqual('true');\n *     });\n *   </doc:scenario>\n * </doc:example>\n */\nvar ngChangeDirective = valueFn({\n  require: 'ngModel',\n  link: function(scope, element, attr, ctrl) {\n    ctrl.$viewChangeListeners.push(function() {\n      scope.$eval(attr.ngChange);\n    });\n  }\n});\n\n\nvar requiredDirective = function() {\n  return {\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n      attr.required = true; // force truthy in case we are on non input element\n\n      var validator = function(value) {\n        if (attr.required && (isEmpty(value) || value === false)) {\n          ctrl.$setValidity('required', false);\n          return;\n        } else {\n          ctrl.$setValidity('required', true);\n          return value;\n        }\n      };\n\n      ctrl.$formatters.push(validator);\n      ctrl.$parsers.unshift(validator);\n\n      attr.$observe('required', function() {\n        validator(ctrl.$viewValue);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngList\n *\n * @description\n * Text input that converts between comma-separated string into an array of strings.\n *\n * @element input\n * @param {string=} ngList optional delimiter that should be used to split the value. If\n *   specified in form `/something/` then the value will be converted into a regular expression.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.names = ['igor', 'misko', 'vojta'];\n         }\n       </script>\n       <form name=\"myForm\" ng-controller=\"Ctrl\">\n         List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n         <span class=\"error\" ng-show=\"myForm.list.$error.required\">\n           Required!</span>\n         <tt>names = {{names}}</tt><br/>\n         <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n         <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n        </form>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n          expect(binding('names')).toEqual('[\"igor\",\"misko\",\"vojta\"]');\n          expect(binding('myForm.namesInput.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty', function() {\n          input('names').enter('');\n          expect(binding('names')).toEqual('[]');\n          expect(binding('myForm.namesInput.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngListDirective = function() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attr, ctrl) {\n      var match = /\\/(.*)\\//.exec(attr.ngList),\n          separator = match && new RegExp(match[1]) || attr.ngList || ',';\n\n      var parse = function(viewValue) {\n        var list = [];\n\n        if (viewValue) {\n          forEach(viewValue.split(separator), function(value) {\n            if (value) list.push(trim(value));\n          });\n        }\n\n        return list;\n      };\n\n      ctrl.$parsers.push(parse);\n      ctrl.$formatters.push(function(value) {\n        if (isArray(value)) {\n          return value.join(', ');\n        }\n\n        return undefined;\n      });\n    }\n  };\n};\n\n\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n\nvar ngValueDirective = function() {\n  return {\n    priority: 100,\n    compile: function(tpl, tplAttr) {\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n        return function(scope, elm, attr) {\n          attr.$set('value', scope.$eval(attr.ngValue));\n        };\n      } else {\n        return function(scope, elm, attr) {\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n            attr.$set('value', value, false);\n          });\n        };\n      }\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBind\n *\n * @description\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n * with the value of a given expression, and to update the text content when the value of that\n * expression changes.\n *\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n * `{{ expression }}` which is similar but less verbose.\n *\n * One scenario in which the use of `ngBind` is preferred over `{{ expression }}` binding is when\n * it's desirable to put bindings into template that is momentarily displayed by the browser in its\n * raw state before Angular compiles it. Since `ngBind` is an element attribute, it makes the\n * bindings invisible to the user while the page is loading.\n *\n * An alternative solution to this problem would be using the\n * {@link ng.directive:ngCloak ngCloak} directive.\n *\n *\n * @element ANY\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n *\n * @example\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.name = 'Whirled';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Enter name: <input type=\"text\" ng-model=\"name\"><br>\n         Hello <span ng-bind=\"name\"></span>!\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-bind', function() {\n         expect(using('.doc-example-live').binding('name')).toBe('Whirled');\n         using('.doc-example-live').input('name').enter('world');\n         expect(using('.doc-example-live').binding('name')).toBe('world');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngBindDirective = ngDirective(function(scope, element, attr) {\n  element.addClass('ng-binding').data('$binding', attr.ngBind);\n  scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n    element.text(value == undefined ? '' : value);\n  });\n});\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBindTemplate\n *\n * @description\n * The `ngBindTemplate` directive specifies that the element\n * text should be replaced with the template in ngBindTemplate.\n * Unlike ngBind the ngBindTemplate can contain multiple `{{` `}}`\n * expressions. (This is required since some HTML elements\n * can not have SPAN elements such as TITLE, or OPTION to name a few.)\n *\n * @element ANY\n * @param {string} ngBindTemplate template of form\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n *\n * @example\n * Try it here: enter text in text box and watch the greeting change.\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.salutation = 'Hello';\n           $scope.name = 'World';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n        Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n        Name: <input type=\"text\" ng-model=\"name\"><br>\n        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-bind', function() {\n         expect(using('.doc-example-live').binding('salutation')).\n           toBe('Hello');\n         expect(using('.doc-example-live').binding('name')).\n           toBe('World');\n         using('.doc-example-live').input('salutation').enter('Greetings');\n         using('.doc-example-live').input('name').enter('user');\n         expect(using('.doc-example-live').binding('salutation')).\n           toBe('Greetings');\n         expect(using('.doc-example-live').binding('name')).\n           toBe('user');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngBindTemplateDirective = ['$interpolate', function($interpolate) {\n  return function(scope, element, attr) {\n    // TODO: move this to scenario runner\n    var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n    element.addClass('ng-binding').data('$binding', interpolateFn);\n    attr.$observe('ngBindTemplate', function(value) {\n      element.text(value);\n    });\n  }\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBindHtmlUnsafe\n *\n * @description\n * Creates a binding that will innerHTML the result of evaluating the `expression` into the current\n * element. *The innerHTML-ed content will not be sanitized!* You should use this directive only if\n * {@link ngSanitize.directive:ngBindHtml ngBindHtml} directive is too\n * restrictive and when you absolutely trust the source of the content you are binding to.\n *\n * See {@link ngSanitize.$sanitize $sanitize} docs for examples.\n *\n * @element ANY\n * @param {expression} ngBindHtmlUnsafe {@link guide/expression Expression} to evaluate.\n */\nvar ngBindHtmlUnsafeDirective = [function() {\n  return function(scope, element, attr) {\n    element.addClass('ng-binding').data('$binding', attr.ngBindHtmlUnsafe);\n    scope.$watch(attr.ngBindHtmlUnsafe, function ngBindHtmlUnsafeWatchAction(value) {\n      element.html(value || '');\n    });\n  };\n}];\n\nfunction classDirective(name, selector) {\n  name = 'ngClass' + name;\n  return ngDirective(function(scope, element, attr) {\n    var oldVal = undefined;\n\n    scope.$watch(attr[name], ngClassWatchAction, true);\n\n    attr.$observe('class', function(value) {\n      var ngClass = scope.$eval(attr[name]);\n      ngClassWatchAction(ngClass, ngClass);\n    });\n\n\n    if (name !== 'ngClass') {\n      scope.$watch('$index', function($index, old$index) {\n        var mod = $index & 1;\n        if (mod !== old$index & 1) {\n          if (mod === selector) {\n            addClass(scope.$eval(attr[name]));\n          } else {\n            removeClass(scope.$eval(attr[name]));\n          }\n        }\n      });\n    }\n\n\n    function ngClassWatchAction(newVal) {\n      if (selector === true || scope.$index % 2 === selector) {\n        if (oldVal && !equals(newVal,oldVal)) {\n          removeClass(oldVal);\n        }\n        addClass(newVal);\n      }\n      oldVal = copy(newVal);\n    }\n\n\n    function removeClass(classVal) {\n      if (isObject(classVal) && !isArray(classVal)) {\n        classVal = map(classVal, function(v, k) { if (v) return k });\n      }\n      element.removeClass(isArray(classVal) ? classVal.join(' ') : classVal);\n    }\n\n\n    function addClass(classVal) {\n      if (isObject(classVal) && !isArray(classVal)) {\n        classVal = map(classVal, function(v, k) { if (v) return k });\n      }\n      if (classVal) {\n        element.addClass(isArray(classVal) ? classVal.join(' ') : classVal);\n      }\n    }\n  });\n}\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClass\n *\n * @description\n * The `ngClass` allows you to set CSS class on HTML element dynamically by databinding an\n * expression that represents all classes to be added.\n *\n * The directive won't add duplicate classes if a particular class was already set.\n *\n * When the expression changes, the previously added classes are removed and only then the\n * new classes are added.\n *\n * @element ANY\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class\n *   names, an array, or a map of class names to boolean values.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n      <input type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n      <br>\n      <span ng-class=\"myVar\">Sample Text</span>\n     </file>\n     <file name=\"style.css\">\n       .my-class {\n         color: red;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class', function() {\n         expect(element('.doc-example-live span').prop('className')).not().\n           toMatch(/my-class/);\n\n         using('.doc-example-live').element(':button:first').click();\n\n         expect(element('.doc-example-live span').prop('className')).\n           toMatch(/my-class/);\n\n         using('.doc-example-live').element(':button:last').click();\n\n         expect(element('.doc-example-live span').prop('className')).not().\n           toMatch(/my-class/);\n       });\n     </file>\n   </example>\n */\nvar ngClassDirective = classDirective('', true);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClassOdd\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except it works in\n * conjunction with `ngRepeat` and takes affect only on odd (even) rows.\n *\n * This directive can be applied only within a scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}}\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element('.doc-example-live li:first span').prop('className')).\n           toMatch(/odd/);\n         expect(element('.doc-example-live li:last span').prop('className')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassOddDirective = classDirective('Odd', 0);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClassEven\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except it works in\n * conjunction with `ngRepeat` and takes affect only on odd (even) rows.\n *\n * This directive can be applied only within a scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n *   result of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}} &nbsp; &nbsp; &nbsp;\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element('.doc-example-live li:first span').prop('className')).\n           toMatch(/odd/);\n         expect(element('.doc-example-live li:last span').prop('className')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassEvenDirective = classDirective('Even', 1);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngCloak\n *\n * @description\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n * directive to avoid the undesirable flicker effect caused by the html template display.\n *\n * The directive can be applied to the `<body>` element, but typically a fine-grained application is\n * prefered in order to benefit from progressive rendering of the browser view.\n *\n * `ngCloak` works in cooperation with a css rule that is embedded within `angular.js` and\n *  `angular.min.js` files. Following is the css rule:\n *\n * <pre>\n * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n *   display: none;\n * }\n * </pre>\n *\n * When this css rule is loaded by the browser, all html elements (including their children) that\n * are tagged with the `ng-cloak` directive are hidden. When Angular comes across this directive\n * during the compilation of the template it deletes the `ngCloak` element attribute, which\n * makes the compiled element visible.\n *\n * For the best result, `angular.js` script must be loaded in the head section of the html file;\n * alternatively, the css rule (above) must be included in the external stylesheet of the\n * application.\n *\n * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\n * cannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\n * class `ngCloak` in addition to `ngCloak` directive as shown in the example below.\n *\n * @element ANY\n *\n * @example\n   <doc:example>\n     <doc:source>\n        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n        <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n     </doc:source>\n     <doc:scenario>\n       it('should remove the template directive and css class', function() {\n         expect(element('.doc-example-live #template1').attr('ng-cloak')).\n           not().toBeDefined();\n         expect(element('.doc-example-live #template2').attr('ng-cloak')).\n           not().toBeDefined();\n       });\n     </doc:scenario>\n   </doc:example>\n *\n */\nvar ngCloakDirective = ngDirective({\n  compile: function(element, attr) {\n    attr.$set('ngCloak', undefined);\n    element.removeClass('ng-cloak');\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngController\n *\n * @description\n * The `ngController` directive assigns behavior to a scope. This is a key aspect of how angular\n * supports the principles behind the Model-View-Controller design pattern.\n *\n * MVC components in angular:\n *\n * * Model — The Model is data in scope properties; scopes are attached to the DOM.\n * * View — The template (HTML with data bindings) is rendered into the View.\n * * Controller — The `ngController` directive specifies a Controller class; the class has\n *   methods that typically express the business logic behind the application.\n *\n * Note that an alternative way to define controllers is via the {@link ng.$route $route} service.\n *\n * @element ANY\n * @scope\n * @param {expression} ngController Name of a globally accessible constructor function or an\n *     {@link guide/expression expression} that on the current scope evaluates to a\n *     constructor function.\n *\n * @example\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n * greeting are methods declared on the controller (see source tab). These methods can\n * easily be called from the angular markup. Notice that the scope becomes the `this` for the\n * controller's instance. This allows for easy access to the view data from the controller. Also\n * notice that any changes to the data are automatically reflected in the View without the need\n * for a manual update.\n   <doc:example>\n     <doc:source>\n      <script>\n        function SettingsController($scope) {\n          $scope.name = \"John Smith\";\n          $scope.contacts = [\n            {type:'phone', value:'408 555 1212'},\n            {type:'email', value:'john.smith@example.org'} ];\n\n          $scope.greet = function() {\n           alert(this.name);\n          };\n\n          $scope.addContact = function() {\n           this.contacts.push({type:'email', value:'yourname@example.org'});\n          };\n\n          $scope.removeContact = function(contactToRemove) {\n           var index = this.contacts.indexOf(contactToRemove);\n           this.contacts.splice(index, 1);\n          };\n\n          $scope.clearContact = function(contact) {\n           contact.type = 'phone';\n           contact.value = '';\n          };\n        }\n      </script>\n      <div ng-controller=\"SettingsController\">\n        Name: <input type=\"text\" ng-model=\"name\"/>\n        [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n        Contact:\n        <ul>\n          <li ng-repeat=\"contact in contacts\">\n            <select ng-model=\"contact.type\">\n               <option>phone</option>\n               <option>email</option>\n            </select>\n            <input type=\"text\" ng-model=\"contact.value\"/>\n            [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n            | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n          </li>\n          <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n       </ul>\n      </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check controller', function() {\n         expect(element('.doc-example-live div>:input').val()).toBe('John Smith');\n         expect(element('.doc-example-live li:nth-child(1) input').val())\n           .toBe('408 555 1212');\n         expect(element('.doc-example-live li:nth-child(2) input').val())\n           .toBe('john.smith@example.org');\n\n         element('.doc-example-live li:first a:contains(\"clear\")').click();\n         expect(element('.doc-example-live li:first input').val()).toBe('');\n\n         element('.doc-example-live li:last a:contains(\"add\")').click();\n         expect(element('.doc-example-live li:nth-child(3) input').val())\n           .toBe('yourname@example.org');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngControllerDirective = [function() {\n  return {\n    scope: true,\n    controller: '@'\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngCsp\n * @priority 1000\n *\n * @element html\n * @description\n * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n * \n * This is necessary when developing things like Google Chrome Extensions.\n * \n * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\n * For us to be compatible, we just need to implement the \"getterFn\" in $parse without violating\n * any of these restrictions.\n * \n * AngularJS uses `Function(string)` generated functions as a speed optimization. By applying `ngCsp`\n * it is be possible to opt into the CSP compatible mode. When this mode is on AngularJS will\n * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\n * be raised.\n * \n * In order to use this feature put `ngCsp` directive on the root element of the application.\n * \n * @example\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\n   <pre>\n     <!doctype html>\n     <html ng-app ng-csp>\n     ...\n     ...\n     </html>\n   </pre>\n */\n\nvar ngCspDirective = ['$sniffer', function($sniffer) {\n  return {\n    priority: 1000,\n    compile: function() {\n      $sniffer.csp = true;\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClick\n *\n * @description\n * The ngClick allows you to specify custom behavior when\n * element is clicked.\n *\n * @element ANY\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n * click. (Event object is available as `$event`)\n *\n * @example\n   <doc:example>\n     <doc:source>\n      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n        Increment\n      </button>\n      count: {{count}}\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-click', function() {\n         expect(binding('count')).toBe('0');\n         element('.doc-example-live :button').click();\n         expect(binding('count')).toBe('1');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n/*\n * A directive that allows creation of custom onclick handlers that are defined as angular\n * expressions and are compiled and executed within the current scope.\n *\n * Events that are handled via these handler are always configured not to propagate further.\n */\nvar ngEventDirectives = {};\nforEach(\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave'.split(' '),\n  function(name) {\n    var directiveName = directiveNormalize('ng-' + name);\n    ngEventDirectives[directiveName] = ['$parse', function($parse) {\n      return function(scope, element, attr) {\n        var fn = $parse(attr[directiveName]);\n        element.bind(lowercase(name), function(event) {\n          scope.$apply(function() {\n            fn(scope, {$event:event});\n          });\n        });\n      };\n    }];\n  }\n);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngDblclick\n *\n * @description\n * The `ngDblclick` directive allows you to specify custom behavior on dblclick event.\n *\n * @element ANY\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n * dblclick. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMousedown\n *\n * @description\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n *\n * @element ANY\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n * mousedown. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseup\n *\n * @description\n * Specify custom behavior on mouseup event.\n *\n * @element ANY\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n * mouseup. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseover\n *\n * @description\n * Specify custom behavior on mouseover event.\n *\n * @element ANY\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n * mouseover. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseenter\n *\n * @description\n * Specify custom behavior on mouseenter event.\n *\n * @element ANY\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n * mouseenter. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseleave\n *\n * @description\n * Specify custom behavior on mouseleave event.\n *\n * @element ANY\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n * mouseleave. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMousemove\n *\n * @description\n * Specify custom behavior on mousemove event.\n *\n * @element ANY\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n * mousemove. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSubmit\n *\n * @description\n * Enables binding angular expressions to onsubmit events.\n *\n * Additionally it prevents the default action (which for form means sending the request to the\n * server and reloading the current page).\n *\n * @element form\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\n *\n * @example\n   <doc:example>\n     <doc:source>\n      <script>\n        function Ctrl($scope) {\n          $scope.list = [];\n          $scope.text = 'hello';\n          $scope.submit = function() {\n            if (this.text) {\n              this.list.push(this.text);\n              this.text = '';\n            }\n          };\n        }\n      </script>\n      <form ng-submit=\"submit()\" ng-controller=\"Ctrl\">\n        Enter text and hit enter:\n        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n        <pre>list={{list}}</pre>\n      </form>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-submit', function() {\n         expect(binding('list')).toBe('[]');\n         element('.doc-example-live #submit').click();\n         expect(binding('list')).toBe('[\"hello\"]');\n         expect(input('text').val()).toBe('');\n       });\n       it('should ignore empty strings', function() {\n         expect(binding('list')).toBe('[]');\n         element('.doc-example-live #submit').click();\n         element('.doc-example-live #submit').click();\n         expect(binding('list')).toBe('[\"hello\"]');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngSubmitDirective = ngDirective(function(scope, element, attrs) {\n  element.bind('submit', function() {\n    scope.$apply(attrs.ngSubmit);\n  });\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngInclude\n * @restrict ECA\n *\n * @description\n * Fetches, compiles and includes an external HTML fragment.\n *\n * Keep in mind that Same Origin Policy applies to included resources\n * (e.g. ngInclude won't work for cross-domain requests on all browsers and for\n *  file:// access on some browsers).\n *\n * @scope\n *\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n *                 make sure you wrap it in quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\n *\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\n *\n *                  - If the attribute is not set, disable scrolling.\n *                  - If the attribute is set without value, enable scrolling.\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n *\n * @example\n  <example>\n    <file name=\"index.html\">\n     <div ng-controller=\"Ctrl\">\n       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n        <option value=\"\">(blank)</option>\n       </select>\n       url of the template: <tt>{{template.url}}</tt>\n       <hr/>\n       <div ng-include src=\"template.url\"></div>\n     </div>\n    </file>\n    <file name=\"script.js\">\n      function Ctrl($scope) {\n        $scope.templates =\n          [ { name: 'template1.html', url: 'template1.html'}\n          , { name: 'template2.html', url: 'template2.html'} ];\n        $scope.template = $scope.templates[0];\n      }\n     </file>\n    <file name=\"template1.html\">\n      Content of template1.html\n    </file>\n    <file name=\"template2.html\">\n      Content of template2.html\n    </file>\n    <file name=\"scenario.js\">\n      it('should load template1.html', function() {\n       expect(element('.doc-example-live [ng-include]').text()).\n         toMatch(/Content of template1.html/);\n      });\n      it('should load template2.html', function() {\n       select('template').option('1');\n       expect(element('.doc-example-live [ng-include]').text()).\n         toMatch(/Content of template2.html/);\n      });\n      it('should change to blank', function() {\n       select('template').option('');\n       expect(element('.doc-example-live [ng-include]').text()).toEqual('');\n      });\n    </file>\n  </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngInclude#$includeContentLoaded\n * @eventOf ng.directive:ngInclude\n * @eventType emit on the current ngInclude scope\n * @description\n * Emitted every time the ngInclude content is reloaded.\n */\nvar ngIncludeDirective = ['$http', '$templateCache', '$anchorScroll', '$compile',\n                  function($http,   $templateCache,   $anchorScroll,   $compile) {\n  return {\n    restrict: 'ECA',\n    terminal: true,\n    compile: function(element, attr) {\n      var srcExp = attr.ngInclude || attr.src,\n          onloadExp = attr.onload || '',\n          autoScrollExp = attr.autoscroll;\n\n      return function(scope, element) {\n        var changeCounter = 0,\n            childScope;\n\n        var clearContent = function() {\n          if (childScope) {\n            childScope.$destroy();\n            childScope = null;\n          }\n\n          element.html('');\n        };\n\n        scope.$watch(srcExp, function ngIncludeWatchAction(src) {\n          var thisChangeId = ++changeCounter;\n\n          if (src) {\n            $http.get(src, {cache: $templateCache}).success(function(response) {\n              if (thisChangeId !== changeCounter) return;\n\n              if (childScope) childScope.$destroy();\n              childScope = scope.$new();\n\n              element.html(response);\n              $compile(element.contents())(childScope);\n\n              if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\n                $anchorScroll();\n              }\n\n              childScope.$emit('$includeContentLoaded');\n              scope.$eval(onloadExp);\n            }).error(function() {\n              if (thisChangeId === changeCounter) clearContent();\n            });\n          } else clearContent();\n        });\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngInit\n *\n * @description\n * The `ngInit` directive specifies initialization tasks to be executed\n *  before the template enters execution mode during bootstrap.\n *\n * @element ANY\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\n *\n * @example\n   <doc:example>\n     <doc:source>\n    <div ng-init=\"greeting='Hello'; person='World'\">\n      {{greeting}} {{person}}!\n    </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check greeting', function() {\n         expect(binding('greeting')).toBe('Hello');\n         expect(binding('person')).toBe('World');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngInitDirective = ngDirective({\n  compile: function() {\n    return {\n      pre: function(scope, element, attrs) {\n        scope.$eval(attrs.ngInit);\n      }\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngNonBindable\n * @priority 1000\n *\n * @description\n * Sometimes it is necessary to write code which looks like bindings but which should be left alone\n * by angular. Use `ngNonBindable` to make angular ignore a chunk of HTML.\n *\n * @element ANY\n *\n * @example\n * In this example there are two location where a simple binding (`{{}}`) is present, but the one\n * wrapped in `ngNonBindable` is left alone.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <div>Normal: {{1 + 2}}</div>\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n      </doc:source>\n      <doc:scenario>\n       it('should check ng-non-bindable', function() {\n         expect(using('.doc-example-live').binding('1 + 2')).toBe('3');\n         expect(using('.doc-example-live').element('div:last').text()).\n           toMatch(/1 \\+ 2/);\n       });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngPluralize\n * @restrict EA\n *\n * @description\n * # Overview\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n * These rules are bundled with angular.js and the rules can be overridden\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n * by specifying the mappings between\n * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n * plural categories} and the strings to be displayed.\n *\n * # Plural categories and explicit number rules\n * There are two\n * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n * plural categories} in Angular's default en-US locale: \"one\" and \"other\".\n *\n * While a pural category may match many numbers (for example, in en-US locale, \"other\" can match\n * any number that is not 1), an explicit number rule can only match one number. For example, the\n * explicit number rule for \"3\" matches the number 3. You will see the use of plural categories\n * and explicit number rules throughout later parts of this documentation.\n *\n * # Configuring ngPluralize\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n * You can also provide an optional attribute, `offset`.\n *\n * The value of the `count` attribute can be either a string or an {@link guide/expression\n * Angular expression}; these are evaluated on the current scope for its bound value.\n *\n * The `when` attribute specifies the mappings between plural categories and the actual\n * string to be displayed. The value of the attribute should be a JSON object so that Angular\n * can interpret it correctly.\n *\n * The following example shows how to configure ngPluralize:\n *\n * <pre>\n * <ng-pluralize count=\"personCount\"\n                 when=\"{'0': 'Nobody is viewing.',\n *                      'one': '1 person is viewing.',\n *                      'other': '{} people are viewing.'}\">\n * </ng-pluralize>\n *</pre>\n *\n * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n * show \"a dozen people are viewing\".\n *\n * You can use a set of closed braces(`{}`) as a placeholder for the number that you want substituted\n * into pluralized strings. In the previous example, Angular will replace `{}` with\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n * for <span ng-non-bindable>{{numberExpression}}</span>.\n *\n * # Configuring ngPluralize with offset\n * The `offset` attribute allows further customization of pluralized text, which can result in\n * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n * you might display \"John, Kate and 2 others are viewing this document\".\n * The offset attribute allows you to offset a number by any desired value.\n * Let's take a look at an example:\n *\n * <pre>\n * <ng-pluralize count=\"personCount\" offset=2\n *               when=\"{'0': 'Nobody is viewing.',\n *                      '1': '{{person1}} is viewing.',\n *                      '2': '{{person1}} and {{person2}} are viewing.',\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n * </ng-pluralize>\n * </pre>\n *\n * Notice that we are still using two plural categories(one, other), but we added\n * three explicit number rules 0, 1 and 2.\n * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n * When three people view the document, no explicit number rule is found, so\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n * In this case, plural category 'one' is matched and \"John, Marry and one other person are viewing\"\n * is shown.\n *\n * Note that when you specify offsets, you must provide explicit number rules for\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n * plural categories \"one\" and \"other\".\n *\n * @param {string|expression} count The variable to be bounded to.\n * @param {string} when The mapping between plural category to its correspoding strings.\n * @param {number=} offset Offset to deduct from the total number.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n          function Ctrl($scope) {\n            $scope.person1 = 'Igor';\n            $scope.person2 = 'Misko';\n            $scope.personCount = 1;\n          }\n        </script>\n        <div ng-controller=\"Ctrl\">\n          Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n          Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n          Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\n          <!--- Example with simple pluralization rules for en locale --->\n          Without Offset:\n          <ng-pluralize count=\"personCount\"\n                        when=\"{'0': 'Nobody is viewing.',\n                               'one': '1 person is viewing.',\n                               'other': '{} people are viewing.'}\">\n          </ng-pluralize><br>\n\n          <!--- Example with offset --->\n          With Offset(2):\n          <ng-pluralize count=\"personCount\" offset=2\n                        when=\"{'0': 'Nobody is viewing.',\n                               '1': '{{person1}} is viewing.',\n                               '2': '{{person1}} and {{person2}} are viewing.',\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n          </ng-pluralize>\n        </div>\n      </doc:source>\n      <doc:scenario>\n        it('should show correct pluralized string', function() {\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                             toBe('1 person is viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                                                toBe('Igor is viewing.');\n\n          using('.doc-example-live').input('personCount').enter('0');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                               toBe('Nobody is viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                                              toBe('Nobody is viewing.');\n\n          using('.doc-example-live').input('personCount').enter('2');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('2 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor and Misko are viewing.');\n\n          using('.doc-example-live').input('personCount').enter('3');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('3 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor, Misko and one other person are viewing.');\n\n          using('.doc-example-live').input('personCount').enter('4');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('4 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor, Misko and 2 other people are viewing.');\n        });\n\n        it('should show data-binded names', function() {\n          using('.doc-example-live').input('personCount').enter('4');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n              toBe('Igor, Misko and 2 other people are viewing.');\n\n          using('.doc-example-live').input('person1').enter('Di');\n          using('.doc-example-live').input('person2').enter('Vojta');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n              toBe('Di, Vojta and 2 other people are viewing.');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\n  var BRACE = /{}/g;\n  return {\n    restrict: 'EA',\n    link: function(scope, element, attr) {\n      var numberExp = attr.count,\n          whenExp = element.attr(attr.$attr.when), // this is because we have {{}} in attrs\n          offset = attr.offset || 0,\n          whens = scope.$eval(whenExp),\n          whensExpFns = {},\n          startSymbol = $interpolate.startSymbol(),\n          endSymbol = $interpolate.endSymbol();\n\n      forEach(whens, function(expression, key) {\n        whensExpFns[key] =\n          $interpolate(expression.replace(BRACE, startSymbol + numberExp + '-' +\n            offset + endSymbol));\n      });\n\n      scope.$watch(function ngPluralizeWatch() {\n        var value = parseFloat(scope.$eval(numberExp));\n\n        if (!isNaN(value)) {\n          //if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,\n          //check it against pluralization rules in $locale service\n          if (!(value in whens)) value = $locale.pluralCat(value - offset);\n           return whensExpFns[value](scope, element, true);\n        } else {\n          return '';\n        }\n      }, function ngPluralizeWatchAction(newVal) {\n        element.text(newVal);\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngRepeat\n *\n * @description\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n * instance gets its own scope, where the given loop variable is set to the current collection item,\n * and `$index` is set to the item index or key.\n *\n * Special properties are exposed on the local scope of each template instance, including:\n *\n *   * `$index` – `{number}` – iterator offset of the repeated element (0..length-1)\n *   * `$first` – `{boolean}` – true if the repeated element is first in the iterator.\n *   * `$middle` – `{boolean}` – true if the repeated element is between the first and last in the iterator.\n *   * `$last` – `{boolean}` – true if the repeated element is last in the iterator.\n *\n *\n * @element ANY\n * @scope\n * @priority 1000\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. Two\n *   formats are currently supported:\n *\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n *     is a scope expression giving the collection to enumerate.\n *\n *     For example: `track in cd.tracks`.\n *\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n *     and `expression` is the scope expression giving the collection to enumerate.\n *\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n *\n * @example\n * This example initializes the scope to a list of names and\n * then uses `ngRepeat` to display every person:\n    <doc:example>\n      <doc:source>\n        <div ng-init=\"friends = [{name:'John', age:25}, {name:'Mary', age:28}]\">\n          I have {{friends.length}} friends. They are:\n          <ul>\n            <li ng-repeat=\"friend in friends\">\n              [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n            </li>\n          </ul>\n        </div>\n      </doc:source>\n      <doc:scenario>\n         it('should check ng-repeat', function() {\n           var r = using('.doc-example-live').repeater('ul li');\n           expect(r.count()).toBe(2);\n           expect(r.row(0)).toEqual([\"1\",\"John\",\"25\"]);\n           expect(r.row(1)).toEqual([\"2\",\"Mary\",\"28\"]);\n         });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngRepeatDirective = ngDirective({\n  transclude: 'element',\n  priority: 1000,\n  terminal: true,\n  compile: function(element, attr, linker) {\n    return function(scope, iterStartElement, attr){\n      var expression = attr.ngRepeat;\n      var match = expression.match(/^\\s*(.+)\\s+in\\s+(.*)\\s*$/),\n        lhs, rhs, valueIdent, keyIdent;\n      if (! match) {\n        throw Error(\"Expected ngRepeat in form of '_item_ in _collection_' but got '\" +\n          expression + \"'.\");\n      }\n      lhs = match[1];\n      rhs = match[2];\n      match = lhs.match(/^(?:([\\$\\w]+)|\\(([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\))$/);\n      if (!match) {\n        throw Error(\"'item' in 'item in collection' should be identifier or (key, value) but got '\" +\n            lhs + \"'.\");\n      }\n      valueIdent = match[3] || match[1];\n      keyIdent = match[2];\n\n      // Store a list of elements from previous run. This is a hash where key is the item from the\n      // iterator, and the value is an array of objects with following properties.\n      //   - scope: bound scope\n      //   - element: previous element.\n      //   - index: position\n      // We need an array of these objects since the same object can be returned from the iterator.\n      // We expect this to be a rare case.\n      var lastOrder = new HashQueueMap();\n\n      scope.$watch(function ngRepeatWatch(scope){\n        var index, length,\n            collection = scope.$eval(rhs),\n            cursor = iterStartElement,     // current position of the node\n            // Same as lastOrder but it has the current state. It will become the\n            // lastOrder on the next iteration.\n            nextOrder = new HashQueueMap(),\n            arrayBound,\n            childScope,\n            key, value, // key/value of iteration\n            array,\n            last;       // last object information {scope, element, index}\n\n\n\n        if (!isArray(collection)) {\n          // if object, extract keys, sort them and use to determine order of iteration over obj props\n          array = [];\n          for(key in collection) {\n            if (collection.hasOwnProperty(key) && key.charAt(0) != '$') {\n              array.push(key);\n            }\n          }\n          array.sort();\n        } else {\n          array = collection || [];\n        }\n\n        arrayBound = array.length-1;\n\n        // we are not using forEach for perf reasons (trying to avoid #call)\n        for (index = 0, length = array.length; index < length; index++) {\n          key = (collection === array) ? index : array[index];\n          value = collection[key];\n\n          last = lastOrder.shift(value);\n\n          if (last) {\n            // if we have already seen this object, then we need to reuse the\n            // associated scope/element\n            childScope = last.scope;\n            nextOrder.push(value, last);\n\n            if (index === last.index) {\n              // do nothing\n              cursor = last.element;\n            } else {\n              // existing item which got moved\n              last.index = index;\n              // This may be a noop, if the element is next, but I don't know of a good way to\n              // figure this out,  since it would require extra DOM access, so let's just hope that\n              // the browsers realizes that it is noop, and treats it as such.\n              cursor.after(last.element);\n              cursor = last.element;\n            }\n          } else {\n            // new item which we don't know about\n            childScope = scope.$new();\n          }\n\n          childScope[valueIdent] = value;\n          if (keyIdent) childScope[keyIdent] = key;\n          childScope.$index = index;\n\n          childScope.$first = (index === 0);\n          childScope.$last = (index === arrayBound);\n          childScope.$middle = !(childScope.$first || childScope.$last);\n\n          if (!last) {\n            linker(childScope, function(clone){\n              cursor.after(clone);\n              last = {\n                  scope: childScope,\n                  element: (cursor = clone),\n                  index: index\n                };\n              nextOrder.push(value, last);\n            });\n          }\n        }\n\n        //shrink children\n        for (key in lastOrder) {\n          if (lastOrder.hasOwnProperty(key)) {\n            array = lastOrder[key];\n            while(array.length) {\n              value = array.pop();\n              value.element.remove();\n              value.scope.$destroy();\n            }\n          }\n        }\n\n        lastOrder = nextOrder;\n      });\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngShow\n *\n * @description\n * The `ngShow` and `ngHide` directives show or hide a portion of the DOM tree (HTML)\n * conditionally.\n *\n * @element ANY\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy\n *     then the element is shown or hidden respectively.\n *\n * @example\n   <doc:example>\n     <doc:source>\n        Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        Show: <span ng-show=\"checked\">I show up when your checkbox is checked.</span> <br/>\n        Hide: <span ng-hide=\"checked\">I hide when your checkbox is checked.</span>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-show / ng-hide', function() {\n         expect(element('.doc-example-live span:first:hidden').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:visible').count()).toEqual(1);\n\n         input('checked').check();\n\n         expect(element('.doc-example-live span:first:visible').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:hidden').count()).toEqual(1);\n       });\n     </doc:scenario>\n   </doc:example>\n */\n//TODO(misko): refactor to remove element from the DOM\nvar ngShowDirective = ngDirective(function(scope, element, attr){\n  scope.$watch(attr.ngShow, function ngShowWatchAction(value){\n    element.css('display', toBoolean(value) ? '' : 'none');\n  });\n});\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngHide\n *\n * @description\n * The `ngHide` and `ngShow` directives hide or show a portion of the DOM tree (HTML)\n * conditionally.\n *\n * @element ANY\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\n *     the element is shown or hidden respectively.\n *\n * @example\n   <doc:example>\n     <doc:source>\n        Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        Show: <span ng-show=\"checked\">I show up when you checkbox is checked?</span> <br/>\n        Hide: <span ng-hide=\"checked\">I hide when you checkbox is checked?</span>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-show / ng-hide', function() {\n         expect(element('.doc-example-live span:first:hidden').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:visible').count()).toEqual(1);\n\n         input('checked').check();\n\n         expect(element('.doc-example-live span:first:visible').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:hidden').count()).toEqual(1);\n       });\n     </doc:scenario>\n   </doc:example>\n */\n//TODO(misko): refactor to remove element from the DOM\nvar ngHideDirective = ngDirective(function(scope, element, attr){\n  scope.$watch(attr.ngHide, function ngHideWatchAction(value){\n    element.css('display', toBoolean(value) ? 'none' : '');\n  });\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngStyle\n *\n * @description\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n *\n * @element ANY\n * @param {expression} ngStyle {@link guide/expression Expression} which evals to an\n *      object whose keys are CSS style names and values are corresponding values for those CSS\n *      keys.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <input type=\"button\" value=\"set\" ng-click=\"myStyle={color:'red'}\">\n        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n        <br/>\n        <span ng-style=\"myStyle\">Sample Text</span>\n        <pre>myStyle={{myStyle}}</pre>\n     </file>\n     <file name=\"style.css\">\n       span {\n         color: black;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-style', function() {\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(0, 0, 0)');\n         element('.doc-example-live :button[value=set]').click();\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(255, 0, 0)');\n         element('.doc-example-live :button[value=clear]').click();\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(0, 0, 0)');\n       });\n     </file>\n   </example>\n */\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n    if (oldStyles && (newStyles !== oldStyles)) {\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\n    }\n    if (newStyles) element.css(newStyles);\n  }, true);\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSwitch\n * @restrict EA\n *\n * @description\n * Conditionally change the DOM structure.\n *\n * @usage\n * <ANY ng-switch=\"expression\">\n *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n *   ...\n *   <ANY ng-switch-default>...</ANY>\n * </ANY>\n *\n * @scope\n * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\n * @paramDescription\n * On child elments add:\n *\n * * `ngSwitchWhen`: the case statement to match against. If match then this\n *   case will be displayed.\n * * `ngSwitchDefault`: the default case when no other casses match.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n          function Ctrl($scope) {\n            $scope.items = ['settings', 'home', 'other'];\n            $scope.selection = $scope.items[0];\n          }\n        </script>\n        <div ng-controller=\"Ctrl\">\n          <select ng-model=\"selection\" ng-options=\"item for item in items\">\n          </select>\n          <tt>selection={{selection}}</tt>\n          <hr/>\n          <div ng-switch on=\"selection\" >\n            <div ng-switch-when=\"settings\">Settings Div</div>\n            <span ng-switch-when=\"home\">Home Span</span>\n            <span ng-switch-default>default</span>\n          </div>\n        </div>\n      </doc:source>\n      <doc:scenario>\n        it('should start in settings', function() {\n         expect(element('.doc-example-live [ng-switch]').text()).toMatch(/Settings Div/);\n        });\n        it('should change to home', function() {\n         select('selection').option('home');\n         expect(element('.doc-example-live [ng-switch]').text()).toMatch(/Home Span/);\n        });\n        it('should select deafault', function() {\n         select('selection').option('other');\n         expect(element('.doc-example-live [ng-switch]').text()).toMatch(/default/);\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar NG_SWITCH = 'ng-switch';\nvar ngSwitchDirective = valueFn({\n  restrict: 'EA',\n  require: 'ngSwitch',\n  // asks for $scope to fool the BC controller module\n  controller: ['$scope', function ngSwitchController() {\n    this.cases = {};\n  }],\n  link: function(scope, element, attr, ctrl) {\n    var watchExpr = attr.ngSwitch || attr.on,\n        selectedTransclude,\n        selectedElement,\n        selectedScope;\n\n    scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n      if (selectedElement) {\n        selectedScope.$destroy();\n        selectedElement.remove();\n        selectedElement = selectedScope = null;\n      }\n      if ((selectedTransclude = ctrl.cases['!' + value] || ctrl.cases['?'])) {\n        scope.$eval(attr.change);\n        selectedScope = scope.$new();\n        selectedTransclude(selectedScope, function(caseElement) {\n          selectedElement = caseElement;\n          element.append(caseElement);\n        });\n      }\n    });\n  }\n});\n\nvar ngSwitchWhenDirective = ngDirective({\n  transclude: 'element',\n  priority: 500,\n  require: '^ngSwitch',\n  compile: function(element, attrs, transclude) {\n    return function(scope, element, attr, ctrl) {\n      ctrl.cases['!' + attrs.ngSwitchWhen] = transclude;\n    };\n  }\n});\n\nvar ngSwitchDefaultDirective = ngDirective({\n  transclude: 'element',\n  priority: 500,\n  require: '^ngSwitch',\n  compile: function(element, attrs, transclude) {\n    return function(scope, element, attr, ctrl) {\n      ctrl.cases['?'] = transclude;\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngTransclude\n *\n * @description\n * Insert the transcluded DOM here.\n *\n * @element ANY\n *\n * @example\n   <doc:example module=\"transclude\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.title = 'Lorem Ipsum';\n           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n         }\n\n         angular.module('transclude', [])\n          .directive('pane', function(){\n             return {\n               restrict: 'E',\n               transclude: true,\n               scope: 'isolate',\n               locals: { title:'bind' },\n               template: '<div style=\"border: 1px solid black;\">' +\n                           '<div style=\"background-color: gray\">{{title}}</div>' +\n                           '<div ng-transclude></div>' +\n                         '</div>'\n             };\n         });\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input ng-model=\"title\"><br>\n         <textarea ng-model=\"text\"></textarea> <br/>\n         <pane title=\"{{title}}\">{{text}}</pane>\n       </div>\n     </doc:source>\n     <doc:scenario>\n        it('should have transcluded', function() {\n          input('title').enter('TITLE');\n          input('text').enter('TEXT');\n          expect(binding('title')).toEqual('TITLE');\n          expect(binding('text')).toEqual('TEXT');\n        });\n     </doc:scenario>\n   </doc:example>\n *\n */\nvar ngTranscludeDirective = ngDirective({\n  controller: ['$transclude', '$element', function($transclude, $element) {\n    $transclude(function(clone) {\n      $element.append(clone);\n    });\n  }]\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngView\n * @restrict ECA\n *\n * @description\n * # Overview\n * `ngView` is a directive that complements the {@link ng.$route $route} service by\n * including the rendered template of the current route into the main layout (`index.html`) file.\n * Every time the current route changes, the included view changes with it according to the\n * configuration of the `$route` service.\n *\n * @scope\n * @example\n    <example module=\"ngView\">\n      <file name=\"index.html\">\n        <div ng-controller=\"MainCntl\">\n          Choose:\n          <a href=\"Book/Moby\">Moby</a> |\n          <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n          <a href=\"Book/Gatsby\">Gatsby</a> |\n          <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n          <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n          <div ng-view></div>\n          <hr />\n\n          <pre>$location.path() = {{$location.path()}}</pre>\n          <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>\n          <pre>$route.current.params = {{$route.current.params}}</pre>\n          <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>\n          <pre>$routeParams = {{$routeParams}}</pre>\n        </div>\n      </file>\n\n      <file name=\"book.html\">\n        controller: {{name}}<br />\n        Book Id: {{params.bookId}}<br />\n      </file>\n\n      <file name=\"chapter.html\">\n        controller: {{name}}<br />\n        Book Id: {{params.bookId}}<br />\n        Chapter Id: {{params.chapterId}}\n      </file>\n\n      <file name=\"script.js\">\n        angular.module('ngView', [], function($routeProvider, $locationProvider) {\n          $routeProvider.when('/Book/:bookId', {\n            templateUrl: 'book.html',\n            controller: BookCntl\n          });\n          $routeProvider.when('/Book/:bookId/ch/:chapterId', {\n            templateUrl: 'chapter.html',\n            controller: ChapterCntl\n          });\n\n          // configure html5 to get links working on jsfiddle\n          $locationProvider.html5Mode(true);\n        });\n\n        function MainCntl($scope, $route, $routeParams, $location) {\n          $scope.$route = $route;\n          $scope.$location = $location;\n          $scope.$routeParams = $routeParams;\n        }\n\n        function BookCntl($scope, $routeParams) {\n          $scope.name = \"BookCntl\";\n          $scope.params = $routeParams;\n        }\n\n        function ChapterCntl($scope, $routeParams) {\n          $scope.name = \"ChapterCntl\";\n          $scope.params = $routeParams;\n        }\n      </file>\n\n      <file name=\"scenario.js\">\n        it('should load and compile correct template', function() {\n          element('a:contains(\"Moby: Ch1\")').click();\n          var content = element('.doc-example-live [ng-view]').text();\n          expect(content).toMatch(/controller\\: ChapterCntl/);\n          expect(content).toMatch(/Book Id\\: Moby/);\n          expect(content).toMatch(/Chapter Id\\: 1/);\n\n          element('a:contains(\"Scarlet\")').click();\n          content = element('.doc-example-live [ng-view]').text();\n          expect(content).toMatch(/controller\\: BookCntl/);\n          expect(content).toMatch(/Book Id\\: Scarlet/);\n        });\n      </file>\n    </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngView#$viewContentLoaded\n * @eventOf ng.directive:ngView\n * @eventType emit on the current ngView scope\n * @description\n * Emitted every time the ngView content is reloaded.\n */\nvar ngViewDirective = ['$http', '$templateCache', '$route', '$anchorScroll', '$compile',\n                       '$controller',\n               function($http,   $templateCache,   $route,   $anchorScroll,   $compile,\n                        $controller) {\n  return {\n    restrict: 'ECA',\n    terminal: true,\n    link: function(scope, element, attr) {\n      var lastScope,\n          onloadExp = attr.onload || '';\n\n      scope.$on('$routeChangeSuccess', update);\n      update();\n\n\n      function destroyLastScope() {\n        if (lastScope) {\n          lastScope.$destroy();\n          lastScope = null;\n        }\n      }\n\n      function clearContent() {\n        element.html('');\n        destroyLastScope();\n      }\n\n      function update() {\n        var locals = $route.current && $route.current.locals,\n            template = locals && locals.$template;\n\n        if (template) {\n          element.html(template);\n          destroyLastScope();\n\n          var link = $compile(element.contents()),\n              current = $route.current,\n              controller;\n\n          lastScope = current.scope = scope.$new();\n          if (current.controller) {\n            locals.$scope = lastScope;\n            controller = $controller(current.controller, locals);\n            element.children().data('$ngControllerController', controller);\n          }\n\n          link(lastScope);\n          lastScope.$emit('$viewContentLoaded');\n          lastScope.$eval(onloadExp);\n\n          // $anchorScroll might listen on event...\n          $anchorScroll();\n        } else {\n          clearContent();\n        }\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:script\n *\n * @description\n * Load content of a script tag, with type `text/ng-template`, into `$templateCache`, so that the\n * template can be used by `ngInclude`, `ngView` or directive templates.\n *\n * @restrict E\n * @param {'text/ng-template'} type must be set to `'text/ng-template'`\n *\n * @example\n  <doc:example>\n    <doc:source>\n      <script type=\"text/ng-template\" id=\"/tpl.html\">\n        Content of the template.\n      </script>\n\n      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n    </doc:source>\n    <doc:scenario>\n      it('should load template defined inside script tag', function() {\n        element('#tpl-link').click();\n        expect(element('#tpl-content').text()).toMatch(/Content of the template/);\n      });\n    </doc:scenario>\n  </doc:example>\n */\nvar scriptDirective = ['$templateCache', function($templateCache) {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element, attr) {\n      if (attr.type == 'text/ng-template') {\n        var templateUrl = attr.id,\n            // IE is not consistent, in scripts we have to read .text but in other nodes we have to read .textContent\n            text = element[0].text;\n\n        $templateCache.put(templateUrl, text);\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:select\n * @restrict E\n *\n * @description\n * HTML `SELECT` element with angular data-binding.\n *\n * # `ngOptions`\n *\n * Optionally `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n * elements for a `<select>` element using an array or an object obtained by evaluating the\n * `ngOptions` expression.\n *˝˝\n * When an item in the select menu is select, the value of array element or object property\n * represented by the selected option will be bound to the model identified by the `ngModel`\n * directive of the parent select element.\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * Note: `ngOptions` provides iterator facility for `<option>` element which should be used instead\n * of {@link ng.directive:ngRepeat ngRepeat} when you want the\n * `select` model to be bound to a non-string value. This is because an option element can currently\n * be bound to string values only.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required The control is considered valid only if value is entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {comprehension_expression=} ngOptions in one of the following forms:\n *\n *   * for array data sources:\n *     * `label` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array`\n *   * for object data sources:\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`group by`** `group`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *\n * Where:\n *\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n *   * `value`: local variable which will refer to each item in the `array` or each property value\n *      of `object` during iteration.\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\n *   * `label`: The result of this expression will be the label for `<option>` element. The\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n *      element. If not specified, `select` expression will default to `value`.\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n *      DOM element.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n        function MyCntrl($scope) {\n          $scope.colors = [\n            {name:'black', shade:'dark'},\n            {name:'white', shade:'light'},\n            {name:'red', shade:'dark'},\n            {name:'blue', shade:'dark'},\n            {name:'yellow', shade:'light'}\n          ];\n          $scope.color = $scope.colors[2]; // red\n        }\n        </script>\n        <div ng-controller=\"MyCntrl\">\n          <ul>\n            <li ng-repeat=\"color in colors\">\n              Name: <input ng-model=\"color.name\">\n              [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n            </li>\n            <li>\n              [<a href ng-click=\"colors.push({})\">add</a>]\n            </li>\n          </ul>\n          <hr/>\n          Color (null not allowed):\n          <select ng-model=\"color\" ng-options=\"c.name for c in colors\"></select><br>\n\n          Color (null allowed):\n          <span  class=\"nullable\">\n            <select ng-model=\"color\" ng-options=\"c.name for c in colors\">\n              <option value=\"\">-- chose color --</option>\n            </select>\n          </span><br/>\n\n          Color grouped by shade:\n          <select ng-model=\"color\" ng-options=\"c.name group by c.shade for c in colors\">\n          </select><br/>\n\n\n          Select <a href ng-click=\"color={name:'not in list'}\">bogus</a>.<br>\n          <hr/>\n          Currently selected: {{ {selected_color:color}  }}\n          <div style=\"border:solid 1px black; height:20px\"\n               ng-style=\"{'background-color':color.name}\">\n          </div>\n        </div>\n      </doc:source>\n      <doc:scenario>\n         it('should check ng-options', function() {\n           expect(binding('{selected_color:color}')).toMatch('red');\n           select('color').option('0');\n           expect(binding('{selected_color:color}')).toMatch('black');\n           using('.nullable').select('color').option('');\n           expect(binding('{selected_color:color}')).toMatch('null');\n         });\n      </doc:scenario>\n    </doc:example>\n */\n\nvar ngOptionsDirective = valueFn({ terminal: true });\nvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\n                         //0000111110000000000022220000000000000000000000333300000000000000444444444444444440000000005555555555555555500000006666666666666666600000000000000077770\n  var NG_OPTIONS_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*)|(?:\\(\\s*([\\$\\w][\\$\\w\\d]*)\\s*,\\s*([\\$\\w][\\$\\w\\d]*)\\s*\\)))\\s+in\\s+(.*)$/,\n      nullModelCtrl = {$setViewValue: noop};\n\n  return {\n    restrict: 'E',\n    require: ['select', '?ngModel'],\n    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\n      var self = this,\n          optionsMap = {},\n          ngModelCtrl = nullModelCtrl,\n          nullOption,\n          unknownOption;\n\n\n      self.databound = $attrs.ngModel;\n\n\n      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\n        ngModelCtrl = ngModelCtrl_;\n        nullOption = nullOption_;\n        unknownOption = unknownOption_;\n      }\n\n\n      self.addOption = function(value) {\n        optionsMap[value] = true;\n\n        if (ngModelCtrl.$viewValue == value) {\n          $element.val(value);\n          if (unknownOption.parent()) unknownOption.remove();\n        }\n      };\n\n\n      self.removeOption = function(value) {\n        if (this.hasOption(value)) {\n          delete optionsMap[value];\n          if (ngModelCtrl.$viewValue == value) {\n            this.renderUnknownOption(value);\n          }\n        }\n      };\n\n\n      self.renderUnknownOption = function(val) {\n        var unknownVal = '? ' + hashKey(val) + ' ?';\n        unknownOption.val(unknownVal);\n        $element.prepend(unknownOption);\n        $element.val(unknownVal);\n        unknownOption.prop('selected', true); // needed for IE\n      }\n\n\n      self.hasOption = function(value) {\n        return optionsMap.hasOwnProperty(value);\n      }\n\n      $scope.$on('$destroy', function() {\n        // disable unknown option so that we don't do work when the whole select is being destroyed\n        self.renderUnknownOption = noop;\n      });\n    }],\n\n    link: function(scope, element, attr, ctrls) {\n      // if ngModel is not defined, we don't need to do anything\n      if (!ctrls[1]) return;\n\n      var selectCtrl = ctrls[0],\n          ngModelCtrl = ctrls[1],\n          multiple = attr.multiple,\n          optionsExp = attr.ngOptions,\n          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\n          emptyOption,\n          // we can't just jqLite('<option>') since jqLite is not smart enough\n          // to create it in <select> and IE barfs otherwise.\n          optionTemplate = jqLite(document.createElement('option')),\n          optGroupTemplate =jqLite(document.createElement('optgroup')),\n          unknownOption = optionTemplate.clone();\n\n      // find \"null\" option\n      for(var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\n        if (children[i].value == '') {\n          emptyOption = nullOption = children.eq(i);\n          break;\n        }\n      }\n\n      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\n\n      // required validator\n      if (multiple && (attr.required || attr.ngRequired)) {\n        var requiredValidator = function(value) {\n          ngModelCtrl.$setValidity('required', !attr.required || (value && value.length));\n          return value;\n        };\n\n        ngModelCtrl.$parsers.push(requiredValidator);\n        ngModelCtrl.$formatters.unshift(requiredValidator);\n\n        attr.$observe('required', function() {\n          requiredValidator(ngModelCtrl.$viewValue);\n        });\n      }\n\n      if (optionsExp) Options(scope, element, ngModelCtrl);\n      else if (multiple) Multiple(scope, element, ngModelCtrl);\n      else Single(scope, element, ngModelCtrl, selectCtrl);\n\n\n      ////////////////////////////\n\n\n\n      function Single(scope, selectElement, ngModelCtrl, selectCtrl) {\n        ngModelCtrl.$render = function() {\n          var viewValue = ngModelCtrl.$viewValue;\n\n          if (selectCtrl.hasOption(viewValue)) {\n            if (unknownOption.parent()) unknownOption.remove();\n            selectElement.val(viewValue);\n            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\n          } else {\n            if (isUndefined(viewValue) && emptyOption) {\n              selectElement.val('');\n            } else {\n              selectCtrl.renderUnknownOption(viewValue);\n            }\n          }\n        };\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            if (unknownOption.parent()) unknownOption.remove();\n            ngModelCtrl.$setViewValue(selectElement.val());\n          });\n        });\n      }\n\n      function Multiple(scope, selectElement, ctrl) {\n        var lastView;\n        ctrl.$render = function() {\n          var items = new HashMap(ctrl.$viewValue);\n          forEach(selectElement.find('option'), function(option) {\n            option.selected = isDefined(items.get(option.value));\n          });\n        };\n\n        // we have to do it on each watch since ngModel watches reference, but\n        // we need to work of an array, so we need to see if anything was inserted/removed\n        scope.$watch(function selectMultipleWatch() {\n          if (!equals(lastView, ctrl.$viewValue)) {\n            lastView = copy(ctrl.$viewValue);\n            ctrl.$render();\n          }\n        });\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            var array = [];\n            forEach(selectElement.find('option'), function(option) {\n              if (option.selected) {\n                array.push(option.value);\n              }\n            });\n            ctrl.$setViewValue(array);\n          });\n        });\n      }\n\n      function Options(scope, selectElement, ctrl) {\n        var match;\n\n        if (! (match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n          throw Error(\n            \"Expected ngOptions in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_'\" +\n            \" but got '\" + optionsExp + \"'.\");\n        }\n\n        var displayFn = $parse(match[2] || match[1]),\n            valueName = match[4] || match[6],\n            keyName = match[5],\n            groupByFn = $parse(match[3] || ''),\n            valueFn = $parse(match[2] ? match[1] : valueName),\n            valuesFn = $parse(match[7]),\n            // This is an array of array of existing option groups in DOM. We try to reuse these if possible\n            // optionGroupsCache[0] is the options with no option group\n            // optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\n            optionGroupsCache = [[{element: selectElement, label:''}]];\n\n        if (nullOption) {\n          // compile the element since there might be bindings in it\n          $compile(nullOption)(scope);\n\n          // remove the class, which is added automatically because we recompile the element and it\n          // becomes the compilation root\n          nullOption.removeClass('ng-scope');\n\n          // we need to remove it before calling selectElement.html('') because otherwise IE will\n          // remove the label from the element. wtf?\n          nullOption.remove();\n        }\n\n        // clear contents, we'll add what's needed based on the model\n        selectElement.html('');\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            var optionGroup,\n                collection = valuesFn(scope) || [],\n                locals = {},\n                key, value, optionElement, index, groupIndex, length, groupLength;\n\n            if (multiple) {\n              value = [];\n              for (groupIndex = 0, groupLength = optionGroupsCache.length;\n                   groupIndex < groupLength;\n                   groupIndex++) {\n                // list of options for that group. (first item has the parent)\n                optionGroup = optionGroupsCache[groupIndex];\n\n                for(index = 1, length = optionGroup.length; index < length; index++) {\n                  if ((optionElement = optionGroup[index].element)[0].selected) {\n                    key = optionElement.val();\n                    if (keyName) locals[keyName] = key;\n                    locals[valueName] = collection[key];\n                    value.push(valueFn(scope, locals));\n                  }\n                }\n              }\n            } else {\n              key = selectElement.val();\n              if (key == '?') {\n                value = undefined;\n              } else if (key == ''){\n                value = null;\n              } else {\n                locals[valueName] = collection[key];\n                if (keyName) locals[keyName] = key;\n                value = valueFn(scope, locals);\n              }\n            }\n            ctrl.$setViewValue(value);\n          });\n        });\n\n        ctrl.$render = render;\n\n        // TODO(vojta): can't we optimize this ?\n        scope.$watch(render);\n\n        function render() {\n          var optionGroups = {'':[]}, // Temporary location for the option groups before we render them\n              optionGroupNames = [''],\n              optionGroupName,\n              optionGroup,\n              option,\n              existingParent, existingOptions, existingOption,\n              modelValue = ctrl.$modelValue,\n              values = valuesFn(scope) || [],\n              keys = keyName ? sortedKeys(values) : values,\n              groupLength, length,\n              groupIndex, index,\n              locals = {},\n              selected,\n              selectedSet = false, // nothing is selected yet\n              lastElement,\n              element,\n              label;\n\n          if (multiple) {\n            selectedSet = new HashMap(modelValue);\n          }\n\n          // We now build up the list of options we need (we merge later)\n          for (index = 0; length = keys.length, index < length; index++) {\n               locals[valueName] = values[keyName ? locals[keyName]=keys[index]:index];\n               optionGroupName = groupByFn(scope, locals) || '';\n            if (!(optionGroup = optionGroups[optionGroupName])) {\n              optionGroup = optionGroups[optionGroupName] = [];\n              optionGroupNames.push(optionGroupName);\n            }\n            if (multiple) {\n              selected = selectedSet.remove(valueFn(scope, locals)) != undefined;\n            } else {\n              selected = modelValue === valueFn(scope, locals);\n              selectedSet = selectedSet || selected; // see if at least one item is selected\n            }\n            label = displayFn(scope, locals); // what will be seen by the user\n            label = label === undefined ? '' : label; // doing displayFn(scope, locals) || '' overwrites zero values\n            optionGroup.push({\n              id: keyName ? keys[index] : index,   // either the index into array or key from object\n              label: label,\n              selected: selected                   // determine if we should be selected\n            });\n          }\n          if (!multiple) {\n            if (nullOption || modelValue === null) {\n              // insert null option if we have a placeholder, or the model is null\n              optionGroups[''].unshift({id:'', label:'', selected:!selectedSet});\n            } else if (!selectedSet) {\n              // option could not be found, we have to insert the undefined item\n              optionGroups[''].unshift({id:'?', label:'', selected:true});\n            }\n          }\n\n          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\n          for (groupIndex = 0, groupLength = optionGroupNames.length;\n               groupIndex < groupLength;\n               groupIndex++) {\n            // current option group name or '' if no group\n            optionGroupName = optionGroupNames[groupIndex];\n\n            // list of options for that group. (first item has the parent)\n            optionGroup = optionGroups[optionGroupName];\n\n            if (optionGroupsCache.length <= groupIndex) {\n              // we need to grow the optionGroups\n              existingParent = {\n                element: optGroupTemplate.clone().attr('label', optionGroupName),\n                label: optionGroup.label\n              };\n              existingOptions = [existingParent];\n              optionGroupsCache.push(existingOptions);\n              selectElement.append(existingParent.element);\n            } else {\n              existingOptions = optionGroupsCache[groupIndex];\n              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\n\n              // update the OPTGROUP label if not the same.\n              if (existingParent.label != optionGroupName) {\n                existingParent.element.attr('label', existingParent.label = optionGroupName);\n              }\n            }\n\n            lastElement = null;  // start at the beginning\n            for(index = 0, length = optionGroup.length; index < length; index++) {\n              option = optionGroup[index];\n              if ((existingOption = existingOptions[index+1])) {\n                // reuse elements\n                lastElement = existingOption.element;\n                if (existingOption.label !== option.label) {\n                  lastElement.text(existingOption.label = option.label);\n                }\n                if (existingOption.id !== option.id) {\n                  lastElement.val(existingOption.id = option.id);\n                }\n                // lastElement.prop('selected') provided by jQuery has side-effects\n                if (lastElement[0].selected !== option.selected) {\n                  lastElement.prop('selected', (existingOption.selected = option.selected));\n                }\n              } else {\n                // grow elements\n\n                // if it's a null option\n                if (option.id === '' && nullOption) {\n                  // put back the pre-compiled element\n                  element = nullOption;\n                } else {\n                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\n                  // in this version of jQuery on some browser the .text() returns a string\n                  // rather then the element.\n                  (element = optionTemplate.clone())\n                      .val(option.id)\n                      .attr('selected', option.selected)\n                      .text(option.label);\n                }\n\n                existingOptions.push(existingOption = {\n                    element: element,\n                    label: option.label,\n                    id: option.id,\n                    selected: option.selected\n                });\n                if (lastElement) {\n                  lastElement.after(element);\n                } else {\n                  existingParent.element.append(element);\n                }\n                lastElement = element;\n              }\n            }\n            // remove any excessive OPTIONs in a group\n            index++; // increment since the existingOptions[0] is parent element not OPTION\n            while(existingOptions.length > index) {\n              existingOptions.pop().element.remove();\n            }\n          }\n          // remove any excessive OPTGROUPs from select\n          while(optionGroupsCache.length > groupIndex) {\n            optionGroupsCache.pop()[0].element.remove();\n          }\n        }\n      }\n    }\n  }\n}];\n\nvar optionDirective = ['$interpolate', function($interpolate) {\n  var nullSelectCtrl = {\n    addOption: noop,\n    removeOption: noop\n  };\n\n  return {\n    restrict: 'E',\n    priority: 100,\n    compile: function(element, attr) {\n      if (isUndefined(attr.value)) {\n        var interpolateFn = $interpolate(element.text(), true);\n        if (!interpolateFn) {\n          attr.$set('value', element.text());\n        }\n      }\n\n      return function (scope, element, attr) {\n        var selectCtrlName = '$selectController',\n            parent = element.parent(),\n            selectCtrl = parent.data(selectCtrlName) ||\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\n        if (selectCtrl && selectCtrl.databound) {\n          // For some reason Opera defaults to true and if not overridden this messes up the repeater.\n          // We don't want the view to drive the initialization of the model anyway.\n          element.prop('selected', false);\n        } else {\n          selectCtrl = nullSelectCtrl;\n        }\n\n        if (interpolateFn) {\n          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\n            attr.$set('value', newVal);\n            if (newVal !== oldVal) selectCtrl.removeOption(oldVal);\n            selectCtrl.addOption(newVal);\n          });\n        } else {\n          selectCtrl.addOption(attr.value);\n        }\n\n        element.bind('$destroy', function() {\n          selectCtrl.removeOption(attr.value);\n        });\n      };\n    }\n  }\n}];\n\nvar styleDirective = valueFn({\n  restrict: 'E',\n  terminal: true\n});\n\n  //try to bind to jquery now so that one can write angular.element().read()\n  //but we will rebind on bootstrap again.\n  bindJQuery();\n\n  publishExternalAPI(angular);\n\n  jqLite(document).ready(function() {\n    angularInit(document, bootstrap);\n  });\n\n})(window, document);\nangular.element(document).find('head').append('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak{display:none;}ng\\\\:form{display:block;}</style>');","// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function (con) {\n  'use strict';\n  var prop, method;\n  var empty = {};\n  var dummy = function() {};\n  var properties = 'memory'.split(',');\n  var methods = ('assert,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,' +\n     'time,timeEnd,trace,warn').split(',');\n  while (prop = properties.pop()) con[prop] = con[prop] || empty;\n  while (method = methods.pop()) con[method] = con[method] || dummy;\n})(window.console = window.console || {});\n","/*!\n * jQuery JavaScript Library v2.0.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-07-03T13:30Z\n */\n(function( window, undefined ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\"use strict\";\nvar\n\t// A central reference to the root jQuery(document)\n\trootjQuery,\n\n\t// The deferred used on DOM ready\n\treadyList,\n\n\t// Support: IE9\n\t// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`\n\tcore_strundefined = typeof undefined,\n\n\t// Use the correct document accordingly with window argument (sandbox)\n\tlocation = window.location,\n\tdocument = window.document,\n\tdocElem = document.documentElement,\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$,\n\n\t// [[Class]] -> type pairs\n\tclass2type = {},\n\n\t// List of deleted data cache ids, so we can reuse them\n\tcore_deletedIds = [],\n\n\tcore_version = \"2.0.3\",\n\n\t// Save a reference to some core methods\n\tcore_concat = core_deletedIds.concat,\n\tcore_push = core_deletedIds.push,\n\tcore_slice = core_deletedIds.slice,\n\tcore_indexOf = core_deletedIds.indexOf,\n\tcore_toString = class2type.toString,\n\tcore_hasOwn = class2type.hasOwnProperty,\n\tcore_trim = core_version.trim,\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\n\t},\n\n\t// Used for matching numbers\n\tcore_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n\n\t// Used for splitting on whitespace\n\tcore_rnotwhite = /\\S+/g,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\t// Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t},\n\n\t// The ready event handler and self cleanup method\n\tcompleted = function() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\t\twindow.removeEventListener( \"load\", completed, false );\n\t\tjQuery.ready();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: core_version,\n\n\tconstructor: jQuery,\n\tinit: function( selector, context, rootjQuery ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn rootjQuery.ready( selector );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t},\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn core_slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num == null ?\n\n\t\t\t// Return a 'clean' array\n\t\t\tthis.toArray() :\n\n\t\t\t// Return just the object\n\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tready: function( fn ) {\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done( fn );\n\n\t\treturn this;\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( core_slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: core_push,\n\tsort: [].sort,\n\tsplice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length === i ) {\n\t\ttarget = this;\n\t\t--i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( core_version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\tnoConflict: function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\n\t\treturn jQuery;\n\t},\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.trigger ) {\n\t\t\tjQuery( document ).trigger(\"ready\").off(\"ready\");\n\t\t}\n\t},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\treturn !isNaN( parseFloat(obj) ) && isFinite( obj );\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn String( obj );\n\t\t}\n\t\t// Support: Safari <= 5.1 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ core_toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Support: Firefox <20\n\t\t// The try/catch suppresses exceptions thrown when attempting to access\n\t\t// the \"constructor\" property of certain host objects, ie. |window.location|\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n\t\ttry {\n\t\t\tif ( obj.constructor &&\n\t\t\t\t\t!core_hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\t// data: string of html\n\t// context (optional): If specified, the fragment will be created in this context, defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tparseHTML: function( data, context, keepScripts ) {\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\tcontext = context || document;\n\n\t\tvar parsed = rsingleTag.exec( data ),\n\t\t\tscripts = !keepScripts && [];\n\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[1] ) ];\n\t\t}\n\n\t\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\t\tif ( scripts ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t},\n\n\tparseJSON: JSON.parse,\n\n\t// Cross-browser xml parsing\n\tparseXML: function( data ) {\n\t\tvar xml, tmp;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Support: IE9\n\t\ttry {\n\t\t\ttmp = new DOMParser();\n\t\t\txml = tmp.parseFromString( data , \"text/xml\" );\n\t\t} catch ( e ) {\n\t\t\txml = undefined;\n\t\t}\n\n\t\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t},\n\n\tnoop: function() {},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\ttrim: function( text ) {\n\t\treturn text == null ? \"\" : core_trim.call( text );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcore_push.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : core_indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar l = second.length,\n\t\t\ti = first.length,\n\t\t\tj = 0;\n\n\t\tif ( typeof l === \"number\" ) {\n\t\t\tfor ( ; j < l; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\t} else {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, inv ) {\n\t\tvar retVal,\n\t\t\tret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length;\n\t\tinv = !!inv;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tretVal = !!callback( elems[ i ], i );\n\t\t\tif ( inv !== retVal ) {\n\t\t\t\tret.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn core_concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = core_slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\taccess: function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlength = elems.length,\n\t\t\tbulk = key == null;\n\n\t\t// Sets many values\n\t\tif ( jQuery.type( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t\t}\n\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\n\t\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\n\t\t\tif ( bulk ) {\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn chainable ?\n\t\t\telems :\n\n\t\t\t// Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call( elems ) :\n\t\t\t\tlength ? fn( elems[0], key ) : emptyGet;\n\t},\n\n\tnow: Date.now,\n\n\t// A method for quickly swapping in/out CSS properties to get correct calculations.\n\t// Note: this method belongs to the css module but it's needed here for the support module.\n\t// If support gets modularized, this method should be moved back to the css module.\n\tswap: function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\n\t\tret = callback.apply( elem, args || [] );\n\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\n\t\treturn ret;\n\t}\n});\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || type !== \"function\" &&\n\t\t( length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\n}\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n/*!\n * Sizzle CSS Selector Engine v1.9.4-pre\n * http://sizzlejs.com/\n *\n * Copyright 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-06-03\n */\n(function( window, undefined ) {\n\nvar i,\n\tsupport,\n\tcachedruns,\n\tExpr,\n\tgetText,\n\tisXML,\n\tcompile,\n\toutermostContext,\n\tsortInput,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + -(new Date()),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\thasDuplicate = false,\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tstrundefined = typeof undefined,\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf if we can't use a native one\n\tindexOf = arr.indexOf || function( elem ) {\n\t\tvar i = 0,\n\t\t\tlen = this.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( this[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\n\t\t\"*(?:([*^$|!~]?=)\" + whitespace + \"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\n\n\t// Prefer arguments quoted,\n\t//   then not containing pseudos/brackets,\n\t//   then attribute selectors/non-parenthetical expressions,\n\t//   then anything else\n\t// These preferences are here to reduce the number of selectors\n\t//   needing tokenize in the PSEUDO preFilter\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes.replace( 3, 8 ) + \")*)|.*)\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trsibling = new RegExp( whitespace + \"*[+~]\" ),\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\t// BMP codepoint\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\n\tif ( documentIsHTML && !seed ) {\n\n\t\t// Shortcuts\n\t\tif ( (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType === 9 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && context.parentNode || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key += \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect xml\n * @param {Element|Object} elem An element or a document\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar doc = node ? node.ownerDocument || node : preferredDoc,\n\t\tparent = doc.defaultView;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\n\t// Support tests\n\tdocumentIsHTML = !isXML( doc );\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent.attachEvent && parent !== parent.top ) {\n\t\tparent.attachEvent( \"onbeforeunload\", function() {\n\t\t\tsetDocument();\n\t\t});\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Check if getElementsByClassName can be trusted\n\tsupport.getElementsByClassName = assert(function( div ) {\n\t\tdiv.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n\n\t\t// Support: Safari<4\n\t\t// Catch class over-caching\n\t\tdiv.firstChild.className = \"i\";\n\t\t// Support: Opera<10\n\t\t// Catch gEBCN failure to find non-leading classes\n\t\treturn div.getElementsByClassName(\"i\").length === 2;\n\t});\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [m] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\t\t\t}\n\t\t} :\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdiv.innerHTML = \"<select><option selected=''></option></select>\";\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\n\t\t\t// Support: Opera 10-12/IE8\n\t\t\t// ^= $= *= and empty values\n\t\t\t// Should not select anything\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type attribute is restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"t\", \"\" );\n\n\t\t\tif ( div.querySelectorAll(\"[t^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = docElem.compareDocumentPosition ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );\n\n\t\tif ( compare ) {\n\t\t\t// Disconnected nodes\n\t\t\tif ( compare & 1 ||\n\t\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t\tif ( a === doc || contains(preferredDoc, a) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === doc || contains(preferredDoc, b) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\t// Maintain original order\n\t\t\t\treturn sortInput ?\n\t\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\t\t}\n\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t}\n\n\t\t// Not directly comparable, sort on existence of method\n\t\treturn a.compareDocumentPosition ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\t} else if ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch(e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [elem] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val === undefined ?\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull :\n\t\tval;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\tfor ( ; (node = elem[i]); i++ ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (see #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[5] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] && match[4] !== undefined ) {\n\t\t\t\tmatch[2] = match[4];\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\n\t\t\t//   not comment, processing instructions, or others\n\t\t\t// Thanks to Diego Perini for the nodeName shortcut\n\t\t\t//   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeName > \"@\" || elem.nodeType === 3 || elem.nodeType === 4 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\t// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n\t\t\t// use getAttribute instead to test this case\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === elem.type );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\nfunction tokenize( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( tokens = [] );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n}\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar data, cache, outerCache,\n\t\t\t\tdirkey = dirruns + \" \" + doneName;\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {\n\t\t\t\t\t\t\tif ( (data = cache[1]) === true || data === cachedruns ) {\n\t\t\t\t\t\t\t\treturn data === true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcache = outerCache[ dir ] = [ dirkey ];\n\t\t\t\t\t\t\tcache[1] = matcher( elem, context, xml ) || cachedruns;\n\t\t\t\t\t\t\tif ( cache[1] === true ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t// A counter to specify which element is currently being matched\n\tvar matcherCachedRuns = 0,\n\t\tbySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, expandContext ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tsetMatched = [],\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\toutermost = expandContext != null,\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t\tcachedruns = matcherCachedRuns;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\tcachedruns = ++matcherCachedRuns;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !group ) {\n\t\t\tgroup = tokenize( selector );\n\t\t}\n\t\ti = group.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( group[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t}\n\treturn cached;\n};\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction select( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tmatch = tokenize( selector );\n\n\tif ( !seed ) {\n\t\t// Try to minimize operations if there is only one group\n\t\tif ( match.length === 1 ) {\n\n\t\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && context.parentNode || context\n\t\t\t\t\t)) ) {\n\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\tcompile( selector, match )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector )\n\t);\n\treturn results;\n}\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome<14\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn (val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\telem[ name ] === true ? name.toLowerCase() : null;\n\t\t}\n\t});\n}\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n})( window );\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar action = tuple[ 0 ],\n\t\t\t\t\t\t\t\tfn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ action + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = core_slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\n\t\t\t\t\tif( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\njQuery.support = (function( support ) {\n\tvar input = document.createElement(\"input\"),\n\t\tfragment = document.createDocumentFragment(),\n\t\tdiv = document.createElement(\"div\"),\n\t\tselect = document.createElement(\"select\"),\n\t\topt = select.appendChild( document.createElement(\"option\") );\n\n\t// Finish early in limited environments\n\tif ( !input.type ) {\n\t\treturn support;\n\t}\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// Check the default checkbox/radio value (\"\" on old WebKit; \"on\" elsewhere)\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Must access the parent to make an option select properly\n\t// Support: IE9, IE10\n\tsupport.optSelected = opt.selected;\n\n\t// Will be defined later\n\tsupport.reliableMarginRight = true;\n\tsupport.boxSizingReliable = true;\n\tsupport.pixelPosition = false;\n\n\t// Make sure checked status is properly cloned\n\t// Support: IE9, IE10\n\tinput.checked = true;\n\tsupport.noCloneChecked = input.cloneNode( true ).checked;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Check if an input maintains its value after becoming a radio\n\t// Support: IE9, IE10\n\tinput = document.createElement(\"input\");\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\tinput.setAttribute( \"checked\", \"t\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tfragment.appendChild( input );\n\n\t// Support: Safari 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: Firefox, Chrome, Safari\n\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\n\tsupport.focusinBubbles = \"onfocusin\" in window;\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\t// Run tests that need a body at doc ready\n\tjQuery(function() {\n\t\tvar container, marginDiv,\n\t\t\t// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).\n\t\t\tdivReset = \"padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box\",\n\t\t\tbody = document.getElementsByTagName(\"body\")[ 0 ];\n\n\t\tif ( !body ) {\n\t\t\t// Return for frameset docs that don't have a body\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer = document.createElement(\"div\");\n\t\tcontainer.style.cssText = \"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\";\n\n\t\t// Check box-sizing and margin behavior.\n\t\tbody.appendChild( container ).appendChild( div );\n\t\tdiv.innerHTML = \"\";\n\t\t// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).\n\t\tdiv.style.cssText = \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%\";\n\n\t\t// Workaround failing boxSizing test due to offsetWidth returning wrong value\n\t\t// with some non-1 values of body zoom, ticket #13543\n\t\tjQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {\n\t\t\tsupport.boxSizing = div.offsetWidth === 4;\n\t\t});\n\n\t\t// Use window.getComputedStyle because jsdom on node.js will break without it.\n\t\tif ( window.getComputedStyle ) {\n\t\t\tsupport.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\n\t\t\tsupport.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\tmarginDiv = div.appendChild( document.createElement(\"div\") );\n\t\t\tmarginDiv.style.cssText = div.style.cssText = divReset;\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\n\t\t\tsupport.reliableMarginRight =\n\t\t\t\t!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\n\t\t}\n\n\t\tbody.removeChild( container );\n\t});\n\n\treturn support;\n})( {} );\n\n/*\n\tImplementation Summary\n\n\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t2. Improve the module's maintainability by reducing the storage\n\t\tpaths to a single mechanism.\n\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n*/\nvar data_user, data_priv,\n\trbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction Data() {\n\t// Support: Android < 4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Math.random();\n}\n\nData.uid = 1;\n\nData.accepts = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType ?\n\t\towner.nodeType === 1 || owner.nodeType === 9 : true;\n};\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android < 4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( core_rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\n\n// These may be used throughout the jQuery core codebase\ndata_user = new Data();\ndata_priv = new Data();\n\n\njQuery.extend({\n\tacceptData: Data.accepts,\n\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar attrs, name,\n\t\t\telem = this[ 0 ],\n\t\t\ti = 0,\n\t\t\tdata = null;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\tattrs = elem.attributes;\n\t\t\t\t\tfor ( ; i < attrs.length; i++ ) {\n\t\t\t\t\t\tname = attrs[ i ].name;\n\n\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? JSON.parse( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tdelay: function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t};\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar nodeHook, boolHook,\n\trclass = /[\\t\\r\\n\\f]/g,\n\trreturn = /\\r/g,\n\trfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t},\n\n\tprop: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t},\n\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = jQuery.trim( cur );\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( core_rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === core_strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map(val, function ( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// attributes.value is undefined in Blackberry 4.7 but\n\t\t\t\t// uses .value. See #6932\n\t\t\t\tvar val = elem.attributes.value;\n\t\t\t\treturn !val || val.specified ? elem.value : elem.text;\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t},\n\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === core_strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( core_rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;\n\n\tjQuery.expr.attrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar fn = jQuery.expr.attrHandle[ name ],\n\t\t\tret = isXML ?\n\t\t\t\tundefined :\n\t\t\t\t/* jshint eqeqeq: false */\n\t\t\t\t// Temporarily disable this handler to check existence\n\t\t\t\t(jQuery.expr.attrHandle[ name ] = undefined) !=\n\t\t\t\t\tgetter( elem, name, isXML ) ?\n\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\n\t\t// Restore handler\n\t\tjQuery.expr.attrHandle[ name ] = fn;\n\n\t\treturn ret;\n\t};\n});\n\n// Support: IE9+\n// Selectedness for an option in an optgroup can be inaccurate\nif ( !jQuery.support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !jQuery.support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t// Support: Webkit\n\t\t\t// \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\nvar rkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n\t\t\t\t\tundefined;\n\t\t\t};\n\t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n\t\t\teventHandle.elem = elem;\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = core_hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = core_hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = core_slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome < 28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = ( src.defaultPrevented ||\n\t\t\tsrc.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Create \"bubbling\" focus and blur events\n// Support: Firefox, Chrome, Safari\nif ( !jQuery.support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler while someone wants focusin/focusout\n\t\tvar attaches = 0,\n\t\t\thandler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tif ( attaches++ === 0 ) {\n\t\t\t\t\tdocument.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tif ( --attaches === 0 ) {\n\t\t\t\t\tdocument.removeEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\nvar isSimple = /^.[^:#\\[\\.,]*$/,\n\trparentsprev = /^(?:parents|prev(?:Until|All))/,\n\trneedsContext = jQuery.expr.match.needsContext,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tret = [],\n\t\t\tself = this,\n\t\t\tlen = self.length;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = ( rneedsContext.test( selectors ) || typeof selectors !== \"string\" ) ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tcur = matched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn core_indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn core_indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\tvar set = typeof selector === \"string\" ?\n\t\t\t\tjQuery( selector, context ) :\n\t\t\t\tjQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\n\t\t\tall = jQuery.merge( this.get(), set );\n\n\t\treturn this.pushStack( jQuery.unique(all) );\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\n\njQuery.extend({\n\tfilter: function( expr, elems, not ) {\n\t\tvar elem = elems[ 0 ];\n\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\n\t\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\t\treturn elem.nodeType === 1;\n\t\t\t}));\n\t},\n\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( isSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( core_indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\nvar rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\tmanipulation_rcheckableType = /^(?:checkbox|radio)$/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE 9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE 9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().append( ( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value ) );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\t// keepData is for internal use only--do not document\n\tremove: function( selector, keepData ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function () {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar\n\t\t\t// Snapshot the DOM in case .domManip sweeps something relevant into its fragment\n\t\t\targs = jQuery.map( this, function( elem ) {\n\t\t\t\treturn [ elem.nextSibling, elem.parentNode ];\n\t\t\t}),\n\t\t\ti = 0;\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\tvar next = args[ i++ ],\n\t\t\t\tparent = args[ i++ ];\n\n\t\t\tif ( parent ) {\n\t\t\t\t// Don't use the snapshot next if it has moved (#13810)\n\t\t\t\tif ( next && next.parentNode !== parent ) {\n\t\t\t\t\tnext = this.nextSibling;\n\t\t\t\t}\n\t\t\t\tjQuery( this ).remove();\n\t\t\t\tparent.insertBefore( elem, next );\n\t\t\t}\n\t\t// Allow new content to include elements from the context set\n\t\t}, true );\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn i ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback, allowIntersection ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = core_concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction || !( l <= 1 || typeof value !== \"string\" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback, allowIntersection );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Hope ajax is available...\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because core_push.apply(_, arraylike) throws\n\t\t\tcore_push.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Support: IE >= 9\n\t\t// Fix Cloning issues\n\t\tif ( !jQuery.support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\ti = 0,\n\t\t\tl = elems.length,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [];\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [\"\", \"\"] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Fixes #12346\n\t\t\t\t\t// Support: Webkit, IE\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, events, type, key, j,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( Data.accepts( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tevents = Object.keys( data.events || {} );\n\t\t\t\t\tif ( events.length ) {\n\t\t\t\t\t\tfor ( j = 0; (type = events[j]) !== undefined; j++ ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t},\n\n\t_evalUrl: function( url ) {\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"script\",\n\t\t\tasync: false,\n\t\t\tglobal: false,\n\t\t\t\"throws\": true\n\t\t});\n\t}\n});\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar l = elems.length,\n\t\ti = 0;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Support: IE >= 9\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && manipulation_rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\nvar curCSS, iframe,\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trmargin = /^margin/,\n\trnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\n\trnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + core_pnum + \")\", \"i\" ),\n\telemdisplay = { BODY: \"block\" },\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: 0,\n\t\tfontWeight: 400\n\t},\n\n\tcssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name.charAt(0).toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction isHidden( elem, el ) {\n\t// isHidden might be called from jQuery#filter function;\n\t// in that case, element will be second argument\n\telem = el || elem;\n\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n}\n\n// NOTE: we've included the \"window\" in window.getComputedStyle\n// because jsdom on node.js will break without it.\nfunction getStyles( elem ) {\n\treturn window.getComputedStyle( elem, null );\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\n\t\t\tif ( !values[ index ] ) {\n\t\t\t\thidden = isHidden( elem );\n\n\t\t\t\tif ( display && display !== \"none\" || !hidden ) {\n\t\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn jQuery.access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that NaN and null values aren't set. See: #7116\n\t\t\tif ( value == null || type === \"number\" && isNaN( value ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !jQuery.support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\ncurCSS = function( elem, name, _computed ) {\n\tvar width, minWidth, maxWidth,\n\t\tcomputed = _computed || getStyles( elem ),\n\n\t\t// Support: IE9\n\t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,\n\t\tstyle = elem.style;\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: Safari 5.1\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\n// Try to determine the default display value of an element\nfunction css_defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe ||\n\t\t\t\tjQuery(\"<iframe frameborder='0' width='0' height='0'/>\")\n\t\t\t\t.css( \"cssText\", \"display:block !important\" )\n\t\t\t).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;\n\t\t\tdoc.write(\"<!doctype html><html><body>\");\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\n// Called ONLY from within css_defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\t\tdisplay = jQuery.css( elem[0], \"display\" );\n\telem.remove();\n\treturn display;\n}\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, \"display\" ) ) ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// These hooks cannot be added until DOM ready because the support test\n// for it is not run until after DOM ready\njQuery(function() {\n\t// Support: Android 2.3\n\tif ( !jQuery.support.reliableMarginRight ) {\n\t\tjQuery.cssHooks.marginRight = {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// Support: Android 2.3\n\t\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// getComputedStyle returns percent when specified for top/left/bottom/right\n\t// rather than make the css module depend on the offset module, we just check for it here\n\tif ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\n\t\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\t\tjQuery.cssHooks[ prop ] = {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\t\tcomputed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n});\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.hidden = function( elem ) {\n\t\t// Support: Opera <= 12.12\n\t\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n\t};\n\n\tjQuery.expr.filters.visible = function( elem ) {\n\t\treturn !jQuery.expr.filters.hidden( elem );\n\t};\n}\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\tvar type = this.type;\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !manipulation_rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ){\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ){\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n//Serialize an array of form elements or a set of\n//key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\n\tajax_nonce = jQuery.now(),\n\n\tajax_rquery = /\\?/,\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t// Keep a copy of the old load method\n\t_load = jQuery.fn.load,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = url.slice( off );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ){\n\tjQuery.fn[ type ] = function( fn ){\n\t\treturn this.on( type, fn );\n\t};\n});\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( core_rnotwhite ) || [\"\"];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\tfireGlobals = s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + ajax_nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ajax_nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( ajax_nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( ajax_rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrSupported = jQuery.ajaxSettings.xhr(),\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\t// Support: IE9\n\t// We need to keep track of outbound xhr and abort them manually\n\t// because IE is not smart enough to do it all by itself\n\txhrId = 0,\n\txhrCallbacks = {};\n\nif ( window.ActiveXObject ) {\n\tjQuery( window ).on( \"unload\", function() {\n\t\tfor( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t\txhrCallbacks = undefined;\n\t});\n}\n\njQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\njQuery.support.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( jQuery.support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i, id,\n\t\t\t\t\txhr = options.xhr();\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file protocol always yields status 0, assume 404\n\t\t\t\t\t\t\t\t\txhr.status || 404,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// #11426: When requesting binary data, IE9 will throw an exception\n\t\t\t\t\t\t\t\t\t// on any attempt to access responseText\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[( id = xhrId++ )] = callback(\"abort\");\n\t\t\t\t// Do send the request\n\t\t\t\t// This may raise an exception which is actually\n\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar fxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t}]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tif ( jQuery.css( elem, \"display\" ) === \"inline\" &&\n\t\t\t\tjQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\tattrs = { height: type },\n\t\ti = 0;\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth? 1 : 0;\n\tfor( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p*Math.PI ) / 2;\n\t}\n};\n\njQuery.timers = [];\njQuery.fx = Tween.prototype.init;\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ttimers = jQuery.timers,\n\t\ti = 0;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tif ( timer() && jQuery.timers.push( timer ) ) {\n\t\tjQuery.fx.start();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.animated = function( elem ) {\n\t\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t}).length;\n\t};\n}\njQuery.fn.offset = function( options ) {\n\tif ( arguments.length ) {\n\t\treturn options === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t}\n\n\tvar docElem, win,\n\t\telem = this[ 0 ],\n\t\tbox = { top: 0, left: 0 },\n\t\tdoc = elem && elem.ownerDocument;\n\n\tif ( !doc ) {\n\t\treturn;\n\t}\n\n\tdocElem = doc.documentElement;\n\n\t// Make sure it's not a disconnected DOM node\n\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\treturn box;\n\t}\n\n\t// If we don't have gBCR, just use 0,0 rather than error\n\t// BlackBerry 5, iOS 3 (original iPhone)\n\tif ( typeof elem.getBoundingClientRect !== core_strundefined ) {\n\t\tbox = elem.getBoundingClientRect();\n\t}\n\twin = getWindow( doc );\n\treturn {\n\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t};\n};\n\njQuery.offset = {\n\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && ( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\n\njQuery.fn.extend({\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// We assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\") === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n\n// Create scrollLeft and scrollTop methods\njQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn jQuery.access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n// Limit scope pollution from any deprecated API\n// (function() {\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n// })();\nif ( typeof module === \"object\" && module && typeof module.exports === \"object\" ) {\n\t// Expose jQuery as module.exports in loaders that implement the Node\n\t// module pattern (including browserify). Do not create the global, since\n\t// the user will be storing it themselves locally, and globals are frowned\n\t// upon in the Node module world.\n\tmodule.exports = jQuery;\n} else {\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( \"jquery\", [], function () { return jQuery; } );\n\t}\n}\n\n// If there is a window object, that at least has a document property,\n// define jQuery and $ identifiers\nif ( typeof window === \"object\" && typeof window.document === \"object\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n})( window );\n","angular.module(\"ui.bootstrap\", [\"ui.bootstrap.tpls\", \"ui.bootstrap.transition\",\"ui.bootstrap.collapse\",\"ui.bootstrap.accordion\",\"ui.bootstrap.alert\",\"ui.bootstrap.buttons\",\"ui.bootstrap.carousel\",\"ui.bootstrap.datepicker\",\"ui.bootstrap.dialog\",\"ui.bootstrap.dropdownToggle\",\"ui.bootstrap.modal\",\"ui.bootstrap.pagination\",\"ui.bootstrap.position\",\"ui.bootstrap.tooltip\",\"ui.bootstrap.popover\",\"ui.bootstrap.progressbar\",\"ui.bootstrap.rating\",\"ui.bootstrap.tabs\",\"ui.bootstrap.timepicker\",\"ui.bootstrap.typeahead\"]);\nangular.module(\"ui.bootstrap.tpls\", [\"template/accordion/accordion-group.html\",\"template/accordion/accordion.html\",\"template/alert/alert.html\",\"template/carousel/carousel.html\",\"template/carousel/slide.html\",\"template/datepicker/datepicker.html\",\"template/dialog/message.html\",\"template/pagination/pager.html\",\"template/pagination/pagination.html\",\"template/tooltip/tooltip-html-unsafe-popup.html\",\"template/tooltip/tooltip-popup.html\",\"template/popover/popover.html\",\"template/progressbar/bar.html\",\"template/progressbar/progress.html\",\"template/rating/rating.html\",\"template/tabs/tab.html\",\"template/tabs/tabset.html\",\"template/timepicker/timepicker.html\",\"template/typeahead/typeahead.html\"]);\nangular.module('ui.bootstrap.transition', [])\n\n/**\n * $transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.\n * @param  {DOMElement} element  The DOMElement that will be animated.\n * @param  {string|object|function} trigger  The thing that will cause the transition to start:\n *   - As a string, it represents the css class to be added to the element.\n *   - As an object, it represents a hash of style attributes to be applied to the element.\n *   - As a function, it represents a function to be called that will cause the transition to occur.\n * @return {Promise}  A promise that is resolved when the transition finishes.\n */\n.factory('$transition', ['$q', '$timeout', '$rootScope', function($q, $timeout, $rootScope) {\n\n  var $transition = function(element, trigger, options) {\n    options = options || {};\n    var deferred = $q.defer();\n    var endEventName = $transition[options.animation ? \"animationEndEventName\" : \"transitionEndEventName\"];\n\n    var transitionEndHandler = function(event) {\n      $rootScope.$apply(function() {\n        element.unbind(endEventName, transitionEndHandler);\n        deferred.resolve(element);\n      });\n    };\n\n    if (endEventName) {\n      element.bind(endEventName, transitionEndHandler);\n    }\n\n    // Wrap in a timeout to allow the browser time to update the DOM before the transition is to occur\n    $timeout(function() {\n      if ( angular.isString(trigger) ) {\n        element.addClass(trigger);\n      } else if ( angular.isFunction(trigger) ) {\n        trigger(element);\n      } else if ( angular.isObject(trigger) ) {\n        element.css(trigger);\n      }\n      //If browser does not support transitions, instantly resolve\n      if ( !endEventName ) {\n        deferred.resolve(element);\n      }\n    });\n\n    // Add our custom cancel function to the promise that is returned\n    // We can call this if we are about to run a new transition, which we know will prevent this transition from ending,\n    // i.e. it will therefore never raise a transitionEnd event for that transition\n    deferred.promise.cancel = function() {\n      if ( endEventName ) {\n        element.unbind(endEventName, transitionEndHandler);\n      }\n      deferred.reject('Transition cancelled');\n    };\n\n    return deferred.promise;\n  };\n\n  // Work out the name of the transitionEnd event\n  var transElement = document.createElement('trans');\n  var transitionEndEventNames = {\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'transition': 'transitionend'\n  };\n  var animationEndEventNames = {\n    'WebkitTransition': 'webkitAnimationEnd',\n    'MozTransition': 'animationend',\n    'OTransition': 'oAnimationEnd',\n    'transition': 'animationend'\n  };\n  function findEndEventName(endEventNames) {\n    for (var name in endEventNames){\n      if (transElement.style[name] !== undefined) {\n        return endEventNames[name];\n      }\n    }\n  }\n  $transition.transitionEndEventName = findEndEventName(transitionEndEventNames);\n  $transition.animationEndEventName = findEndEventName(animationEndEventNames);\n  return $transition;\n}]);\n\nangular.module('ui.bootstrap.collapse',['ui.bootstrap.transition'])\n\n// The collapsible directive indicates a block of html that will expand and collapse\n.directive('collapse', ['$transition', function($transition) {\n  // CSS transitions don't work with height: auto, so we have to manually change the height to a\n  // specific value and then once the animation completes, we can reset the height to auto.\n  // Unfortunately if you do this while the CSS transitions are specified (i.e. in the CSS class\n  // \"collapse\") then you trigger a change to height 0 in between.\n  // The fix is to remove the \"collapse\" CSS class while changing the height back to auto - phew!\n  var fixUpHeight = function(scope, element, height) {\n    // We remove the collapse CSS class to prevent a transition when we change to height: auto\n    element.removeClass('collapse');\n    element.css({ height: height });\n    // It appears that  reading offsetWidth makes the browser realise that we have changed the\n    // height already :-/\n    var x = element[0].offsetWidth;\n    element.addClass('collapse');\n  };\n\n  return {\n    link: function(scope, element, attrs) {\n\n      var isCollapsed;\n      var initialAnimSkip = true;\n      scope.$watch(function (){ return element[0].scrollHeight; }, function (value) {\n        //The listener is called when scollHeight changes\n        //It actually does on 2 scenarios: \n        // 1. Parent is set to display none\n        // 2. angular bindings inside are resolved\n        //When we have a change of scrollHeight we are setting again the correct height if the group is opened\n        if (element[0].scrollHeight !== 0) {\n          if (!isCollapsed) {\n            if (initialAnimSkip) {\n              fixUpHeight(scope, element, element[0].scrollHeight + 'px');\n            } else {\n              fixUpHeight(scope, element, 'auto');\n            }\n          }\n        }\n      });\n      \n      scope.$watch(attrs.collapse, function(value) {\n        if (value) {\n          collapse();\n        } else {\n          expand();\n        }\n      });\n      \n\n      var currentTransition;\n      var doTransition = function(change) {\n        if ( currentTransition ) {\n          currentTransition.cancel();\n        }\n        currentTransition = $transition(element,change);\n        currentTransition.then(\n          function() { currentTransition = undefined; },\n          function() { currentTransition = undefined; }\n        );\n        return currentTransition;\n      };\n\n      var expand = function() {\n        if (initialAnimSkip) {\n          initialAnimSkip = false;\n          if ( !isCollapsed ) {\n            fixUpHeight(scope, element, 'auto');\n          }\n        } else {\n          doTransition({ height : element[0].scrollHeight + 'px' })\n          .then(function() {\n            // This check ensures that we don't accidentally update the height if the user has closed\n            // the group while the animation was still running\n            if ( !isCollapsed ) {\n              fixUpHeight(scope, element, 'auto');\n            }\n          });\n        }\n        isCollapsed = false;\n      };\n      \n      var collapse = function() {\n        isCollapsed = true;\n        if (initialAnimSkip) {\n          initialAnimSkip = false;\n          fixUpHeight(scope, element, 0);\n        } else {\n          fixUpHeight(scope, element, element[0].scrollHeight + 'px');\n          doTransition({'height':'0'});\n        }\n      };\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse'])\n\n.constant('accordionConfig', {\n  closeOthers: true\n})\n\n.controller('AccordionController', ['$scope', '$attrs', 'accordionConfig', function ($scope, $attrs, accordionConfig) {\n  \n  // This array keeps track of the accordion groups\n  this.groups = [];\n\n  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n  this.closeOthers = function(openGroup) {\n    var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n    if ( closeOthers ) {\n      angular.forEach(this.groups, function (group) {\n        if ( group !== openGroup ) {\n          group.isOpen = false;\n        }\n      });\n    }\n  };\n  \n  // This is called from the accordion-group directive to add itself to the accordion\n  this.addGroup = function(groupScope) {\n    var that = this;\n    this.groups.push(groupScope);\n\n    groupScope.$on('$destroy', function (event) {\n      that.removeGroup(groupScope);\n    });\n  };\n\n  // This is called from the accordion-group directive when to remove itself\n  this.removeGroup = function(group) {\n    var index = this.groups.indexOf(group);\n    if ( index !== -1 ) {\n      this.groups.splice(this.groups.indexOf(group), 1);\n    }\n  };\n\n}])\n\n// The accordion directive simply sets up the directive controller\n// and adds an accordion CSS class to itself element.\n.directive('accordion', function () {\n  return {\n    restrict:'EA',\n    controller:'AccordionController',\n    transclude: true,\n    replace: false,\n    templateUrl: 'template/accordion/accordion.html'\n  };\n})\n\n// The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n.directive('accordionGroup', ['$parse', '$transition', '$timeout', function($parse, $transition, $timeout) {\n  return {\n    require:'^accordion',         // We need this directive to be inside an accordion\n    restrict:'EA',\n    transclude:true,              // It transcludes the contents of the directive into the template\n    replace: true,                // The element containing the directive will be replaced with the template\n    templateUrl:'template/accordion/accordion-group.html',\n    scope:{ heading:'@' },        // Create an isolated scope and interpolate the heading attribute onto this scope\n    controller: ['$scope', function($scope) {\n      this.setHeading = function(element) {\n        this.heading = element;\n      };\n    }],\n    link: function(scope, element, attrs, accordionCtrl) {\n      var getIsOpen, setIsOpen;\n\n      accordionCtrl.addGroup(scope);\n\n      scope.isOpen = false;\n      \n      if ( attrs.isOpen ) {\n        getIsOpen = $parse(attrs.isOpen);\n        setIsOpen = getIsOpen.assign;\n\n        scope.$watch(\n          function watchIsOpen() { return getIsOpen(scope.$parent); },\n          function updateOpen(value) { scope.isOpen = value; }\n        );\n        \n        scope.isOpen = getIsOpen ? getIsOpen(scope.$parent) : false;\n      }\n\n      scope.$watch('isOpen', function(value) {\n        if ( value ) {\n          accordionCtrl.closeOthers(scope);\n        }\n        if ( setIsOpen ) {\n          setIsOpen(scope.$parent, value);\n        }\n      });\n    }\n  };\n}])\n\n// Use accordion-heading below an accordion-group to provide a heading containing HTML\n// <accordion-group>\n//   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n// </accordion-group>\n.directive('accordionHeading', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,   // Grab the contents to be used as the heading\n    template: '',       // In effect remove this element!\n    replace: true,\n    require: '^accordionGroup',\n    compile: function(element, attr, transclude) {\n      return function link(scope, element, attr, accordionGroupCtrl) {\n        // Pass the heading to the accordion-group controller\n        // so that it can be transcluded into the right place in the template\n        // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n        accordionGroupCtrl.setHeading(transclude(scope, function() {}));\n      };\n    }\n  };\n})\n\n// Use in the accordion-group template to indicate where you want the heading to be transcluded\n// You must provide the property on the accordion-group controller that will hold the transcluded element\n// <div class=\"accordion-group\">\n//   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n//   ...\n// </div>\n.directive('accordionTransclude', function() {\n  return {\n    require: '^accordionGroup',\n    link: function(scope, element, attr, controller) {\n      scope.$watch(function() { return controller[attr.accordionTransclude]; }, function(heading) {\n        if ( heading ) {\n          element.html('');\n          element.append(heading);\n        }\n      });\n    }\n  };\n});\n\nangular.module(\"ui.bootstrap.alert\", []).directive('alert', function () {\n  return {\n    restrict:'EA',\n    templateUrl:'template/alert/alert.html',\n    transclude:true,\n    replace:true,\n    scope: {\n      type: '=',\n      close: '&'\n    },\n    link: function(scope, iElement, iAttrs, controller) {\n      scope.closeable = \"close\" in iAttrs;\n    }\n  };\n});\n\nangular.module('ui.bootstrap.buttons', [])\n\n  .constant('buttonConfig', {\n    activeClass:'active',\n    toggleEvent:'click'\n  })\n\n  .directive('btnRadio', ['buttonConfig', function (buttonConfig) {\n  var activeClass = buttonConfig.activeClass || 'active';\n  var toggleEvent = buttonConfig.toggleEvent || 'click';\n\n  return {\n\n    require:'ngModel',\n    link:function (scope, element, attrs, ngModelCtrl) {\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n      };\n\n      //ui->model\n      element.bind(toggleEvent, function () {\n        if (!element.hasClass(activeClass)) {\n          scope.$apply(function () {\n            ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n    }\n  };\n}])\n\n  .directive('btnCheckbox', ['buttonConfig', function (buttonConfig) {\n\n  var activeClass = buttonConfig.activeClass || 'active';\n  var toggleEvent = buttonConfig.toggleEvent || 'click';\n\n  return {\n    require:'ngModel',\n    link:function (scope, element, attrs, ngModelCtrl) {\n\n      var trueValue = scope.$eval(attrs.btnCheckboxTrue);\n      var falseValue = scope.$eval(attrs.btnCheckboxFalse);\n\n      trueValue = angular.isDefined(trueValue) ? trueValue : true;\n      falseValue = angular.isDefined(falseValue) ? falseValue : false;\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, trueValue));\n      };\n\n      //ui->model\n      element.bind(toggleEvent, function () {\n        scope.$apply(function () {\n          ngModelCtrl.$setViewValue(element.hasClass(activeClass) ? falseValue : trueValue);\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n}]);\n/**\n* @ngdoc overview\n* @name ui.bootstrap.carousel\n* \n* @description\n* AngularJS version of an image carousel.\n*\n*/\nangular.module('ui.bootstrap.carousel', ['ui.bootstrap.transition'])\n.controller('CarouselController', ['$scope', '$timeout', '$transition', '$q', function ($scope, $timeout, $transition, $q) {\n  var self = this,\n    slides = self.slides = [],\n    currentIndex = -1,\n    currentTimeout, isPlaying;\n  self.currentSlide = null;\n\n  /* direction: \"prev\" or \"next\" */\n  self.select = function(nextSlide, direction) {\n    var nextIndex = slides.indexOf(nextSlide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > currentIndex ? \"next\" : \"prev\";\n    }\n    if (nextSlide && nextSlide !== self.currentSlide) {\n      if ($scope.$currentTransition) {\n        $scope.$currentTransition.cancel();\n        //Timeout so ng-class in template has time to fix classes for finished slide\n        $timeout(goNext);\n      } else {\n        goNext();\n      }\n    }\n    function goNext() {\n      //If we have a slide to transition from and we have a transition type and we're allowed, go\n      if (self.currentSlide && angular.isString(direction) && !$scope.noTransition && nextSlide.$element) { \n        //We shouldn't do class manip in here, but it's the same weird thing bootstrap does. need to fix sometime\n        nextSlide.$element.addClass(direction);\n        nextSlide.$element[0].offsetWidth = nextSlide.$element[0].offsetWidth; //force reflow\n\n        //Set all other slides to stop doing their stuff for the new transition\n        angular.forEach(slides, function(slide) {\n          angular.extend(slide, {direction: '', entering: false, leaving: false, active: false});\n        });\n        angular.extend(nextSlide, {direction: direction, active: true, entering: true});\n        angular.extend(self.currentSlide||{}, {direction: direction, leaving: true});\n\n        $scope.$currentTransition = $transition(nextSlide.$element, {});\n        //We have to create new pointers inside a closure since next & current will change\n        (function(next,current) {\n          $scope.$currentTransition.then(\n            function(){ transitionDone(next, current); },\n            function(){ transitionDone(next, current); }\n          );\n        }(nextSlide, self.currentSlide));\n      } else {\n        transitionDone(nextSlide, self.currentSlide);\n      }\n      self.currentSlide = nextSlide;\n      currentIndex = nextIndex;\n      //every time you change slides, reset the timer\n      restartTimer();\n    }\n    function transitionDone(next, current) {\n      angular.extend(next, {direction: '', active: true, leaving: false, entering: false});\n      angular.extend(current||{}, {direction: '', active: false, leaving: false, entering: false});\n      $scope.$currentTransition = null;\n    }\n  };\n\n  /* Allow outside people to call indexOf on slides array */\n  self.indexOfSlide = function(slide) {\n    return slides.indexOf(slide);\n  };\n\n  $scope.next = function() {\n    var newIndex = (currentIndex + 1) % slides.length;\n    \n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(slides[newIndex], 'next');\n    }\n  };\n\n  $scope.prev = function() {\n    var newIndex = currentIndex - 1 < 0 ? slides.length - 1 : currentIndex - 1;\n    \n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(slides[newIndex], 'prev');\n    }\n  };\n\n  $scope.select = function(slide) {\n    self.select(slide);\n  };\n\n  $scope.isActive = function(slide) {\n     return self.currentSlide === slide;\n  };\n\n  $scope.slides = function() {\n    return slides;\n  };\n\n  $scope.$watch('interval', restartTimer);\n  function restartTimer() {\n    if (currentTimeout) {\n      $timeout.cancel(currentTimeout);\n    }\n    function go() {\n      if (isPlaying) {\n        $scope.next();\n        restartTimer();\n      } else {\n        $scope.pause();\n      }\n    }\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval>=0) {\n      currentTimeout = $timeout(go, interval);\n    }\n  }\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      if (currentTimeout) {\n        $timeout.cancel(currentTimeout);\n      }\n    }\n  };\n\n  self.addSlide = function(slide, element) {\n    slide.$element = element;\n    slides.push(slide);\n    //if this is the first slide or the slide is set to active, select it\n    if(slides.length === 1 || slide.active) {\n      self.select(slides[slides.length-1]);\n      if (slides.length == 1) {\n        $scope.play();\n      }\n    } else {\n      slide.active = false;\n    }\n  };\n\n  self.removeSlide = function(slide) {\n    //get the index of the slide inside the carousel\n    var index = slides.indexOf(slide);\n    slides.splice(index, 1);\n    if (slides.length > 0 && slide.active) {\n      if (index >= slides.length) {\n        self.select(slides[index-1]);\n      } else {\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:carousel\n * @restrict EA\n *\n * @description\n * Carousel is the outer container for a set of image 'slides' to showcase.\n *\n * @param {number=} interval The time, in milliseconds, that it will take the carousel to go to the next slide.\n * @param {boolean=} noTransition Whether to disable transitions on the carousel.\n * @param {boolean=} noPause Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <carousel>\n      <slide>\n        <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>Beautiful!</p>\n        </div>\n      </slide>\n      <slide>\n        <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>D'aww!</p>\n        </div>\n      </slide>\n    </carousel>\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n */\n.directive('carousel', [function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    controller: 'CarouselController',\n    require: 'carousel',\n    templateUrl: 'template/carousel/carousel.html',\n    scope: {\n      interval: '=',\n      noTransition: '=',\n      noPause: '='\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:slide\n * @restrict EA\n *\n * @description\n * Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.\n *\n * @param {boolean=} active Model binding, whether or not this slide is currently active.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n  <carousel>\n    <slide ng-repeat=\"slide in slides\" active=\"slide.active\">\n      <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n      <div class=\"carousel-caption\">\n        <h4>Slide {{$index}}</h4>\n        <p>{{slide.text}}</p>\n      </div>\n    </slide>\n  </carousel>\n  <div class=\"row-fluid\">\n    <div class=\"span6\">\n      <ul>\n        <li ng-repeat=\"slide in slides\">\n          <button class=\"btn btn-mini\" ng-class=\"{'btn-info': !slide.active, 'btn-success': slide.active}\" ng-disabled=\"slide.active\" ng-click=\"slide.active = true\">select</button>\n          {{$index}}: {{slide.text}}\n        </li>\n      </ul>\n      <a class=\"btn\" ng-click=\"addSlide()\">Add Slide</a>\n    </div>\n    <div class=\"span6\">\n      Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n      <br />Enter a negative number to stop the interval.\n    </div>\n  </div>\n</div>\n  </file>\n  <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n  $scope.myInterval = 5000;\n  var slides = $scope.slides = [];\n  $scope.addSlide = function() {\n    var newWidth = 200 + ((slides.length + (25 * slides.length)) % 150);\n    slides.push({\n      image: 'http://placekitten.com/' + newWidth + '/200',\n      text: ['More','Extra','Lots of','Surplus'][slides.length % 4] + ' '\n        ['Cats', 'Kittys', 'Felines', 'Cutes'][slides.length % 4]\n    });\n  };\n  for (var i=0; i<4; i++) $scope.addSlide();\n}\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n*/\n\n.directive('slide', ['$parse', function($parse) {\n  return {\n    require: '^carousel',\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    templateUrl: 'template/carousel/slide.html',\n    scope: {\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      //Set up optional 'active' = binding\n      if (attrs.active) {\n        var getActive = $parse(attrs.active);\n        var setActive = getActive.assign;\n        var lastValue = scope.active = getActive(scope.$parent);\n        scope.$watch(function parentActiveWatch() {\n          var parentActive = getActive(scope.$parent);\n          \n          if (parentActive !== scope.active) {\n            // we are out of sync and need to copy\n            if (parentActive !== lastValue) {\n              // parent changed and it has precedence\n              lastValue = scope.active = parentActive;\n            } else {\n              // if the parent can be assigned then do so\n              setActive(scope.$parent, parentActive = lastValue = scope.active);\n            }\n          }\n          return parentActive;\n        });\n      }\n\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        if (active) {\n          carouselCtrl.select(scope);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.datepicker', [])\n\n.constant('datepickerConfig', {\n  dayFormat: 'dd',\n  monthFormat: 'MMMM',\n  yearFormat: 'yyyy',\n  dayHeaderFormat: 'EEE',\n  dayTitleFormat: 'MMMM yyyy',\n  monthTitleFormat: 'yyyy',\n  showWeeks: true,\n  startingDay: 0,\n  yearRange: 20\n})\n\n.directive( 'datepicker', ['dateFilter', '$parse', 'datepickerConfig', function (dateFilter, $parse, datepickerConfig) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: {\n      model: '=ngModel',\n      dateDisabled: '&'\n    },\n    templateUrl: 'template/datepicker/datepicker.html',\n    link: function(scope, element, attrs) {\n      scope.mode = 'day'; // Initial mode\n\n      // Configuration parameters\n      var selected = new Date(), showWeeks, minDate, maxDate, format = {};\n      format.day   = angular.isDefined(attrs.dayFormat) ? scope.$eval(attrs.dayFormat) : datepickerConfig.dayFormat;\n      format.month = angular.isDefined(attrs.monthFormat) ? scope.$eval(attrs.monthFormat) : datepickerConfig.monthFormat;\n      format.year  = angular.isDefined(attrs.yearFormat) ? scope.$eval(attrs.yearFormat) : datepickerConfig.yearFormat;\n      format.dayHeader  = angular.isDefined(attrs.dayHeaderFormat) ? scope.$eval(attrs.dayHeaderFormat) : datepickerConfig.dayHeaderFormat;\n      format.dayTitle   = angular.isDefined(attrs.dayTitleFormat) ? scope.$eval(attrs.dayTitleFormat) : datepickerConfig.dayTitleFormat;\n      format.monthTitle = angular.isDefined(attrs.monthTitleFormat) ? scope.$eval(attrs.monthTitleFormat) : datepickerConfig.monthTitleFormat;\n      var startingDay   = angular.isDefined(attrs.startingDay) ? scope.$eval(attrs.startingDay) : datepickerConfig.startingDay;\n      var yearRange = angular.isDefined(attrs.yearRange) ? scope.$eval(attrs.yearRange) : datepickerConfig.yearRange;\n\n      if (attrs.showWeeks) {\n        scope.$parent.$watch($parse(attrs.showWeeks), function(value) {\n          showWeeks = !! value;\n          updateShowWeekNumbers();\n        });\n      } else {\n        showWeeks = datepickerConfig.showWeeks;\n        updateShowWeekNumbers();\n      }\n\n      if (attrs.min) {\n        scope.$parent.$watch($parse(attrs.min), function(value) {\n          minDate = new Date(value);\n          refill();\n        });\n      }\n      if (attrs.max) {\n        scope.$parent.$watch($parse(attrs.max), function(value) {\n          maxDate = new Date(value);\n          refill();\n        });\n      }\n\n      function updateCalendar (rows, labels, title) {\n        scope.rows = rows;\n        scope.labels = labels;\n        scope.title = title;\n      }\n\n      // Define whether the week number are visible\n      function updateShowWeekNumbers() {\n        scope.showWeekNumbers = ( scope.mode === 'day' && showWeeks );\n      }\n\n      function compare( date1, date2 ) {\n        if ( scope.mode === 'year') {\n          return date2.getFullYear() - date1.getFullYear();\n        } else if ( scope.mode === 'month' ) {\n          return new Date( date2.getFullYear(), date2.getMonth() ) - new Date( date1.getFullYear(), date1.getMonth() );\n        } else if ( scope.mode === 'day' ) {\n          return (new Date( date2.getFullYear(), date2.getMonth(), date2.getDate() ) - new Date( date1.getFullYear(), date1.getMonth(), date1.getDate() ) );\n        }\n      }\n\n      function isDisabled(date) {\n        return ((minDate && compare(date, minDate) > 0) || (maxDate && compare(date, maxDate) < 0) || (scope.dateDisabled && scope.dateDisabled({ date: date, mode: scope.mode })));\n      }\n\n      // Split array into smaller arrays\n      var split = function(a, size) {\n        var arrays = [];\n        while (a.length > 0) {\n          arrays.push(a.splice(0, size));\n        }\n        return arrays;\n      };\n      var getDaysInMonth = function( year, month ) {\n        return new Date(year, month + 1, 0).getDate();\n      };\n\n      var fill = {\n        day: function() {\n          var days = [], labels = [], lastDate = null;\n\n          function addDays( dt, n, isCurrentMonth ) {\n            for (var i =0; i < n; i ++) {\n              days.push( {date: new Date(dt), isCurrent: isCurrentMonth, isSelected: isSelected(dt), label: dateFilter(dt, format.day), disabled: isDisabled(dt) } );\n              dt.setDate( dt.getDate() + 1 );\n            }\n            lastDate = dt;\n          }\n\n          var d = new Date(selected);\n          d.setDate(1);\n\n          var difference = startingDay - d.getDay();\n          var numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : - difference;\n\n          if ( numDisplayedFromPreviousMonth > 0 ) {\n            d.setDate( - numDisplayedFromPreviousMonth + 1 );\n            addDays(d, numDisplayedFromPreviousMonth, false);\n          }\n          addDays(lastDate || d, getDaysInMonth(selected.getFullYear(), selected.getMonth()), true);\n          addDays(lastDate, (7 - days.length % 7) % 7, false);\n\n          // Day labels\n          for (i = 0; i < 7; i++) {\n            labels.push(  dateFilter(days[i].date, format.dayHeader) );\n          }\n          updateCalendar( split( days, 7 ), labels, dateFilter(selected, format.dayTitle) );\n        },\n        month: function() {\n          var months = [], i = 0, year = selected.getFullYear();\n          while ( i < 12 ) {\n            var dt = new Date(year, i++, 1);\n            months.push( {date: dt, isCurrent: true, isSelected: isSelected(dt), label: dateFilter(dt, format.month), disabled: isDisabled(dt)} );\n          }\n          updateCalendar( split( months, 3 ), [], dateFilter(selected, format.monthTitle) );\n        },\n        year: function() {\n          var years = [], year = parseInt((selected.getFullYear() - 1) / yearRange, 10) * yearRange + 1;\n          for ( var i = 0; i < yearRange; i++ ) {\n            var dt = new Date(year + i, 0, 1);\n            years.push( {date: dt, isCurrent: true, isSelected: isSelected(dt), label: dateFilter(dt, format.year), disabled: isDisabled(dt)} );\n          }\n          var title = years[0].label + ' - ' + years[years.length - 1].label;\n          updateCalendar( split( years, 5 ), [], title );\n        }\n      };\n      var refill = function() {\n        fill[scope.mode]();\n      };\n      var isSelected = function( dt ) {\n        if ( scope.model && scope.model.getFullYear() === dt.getFullYear() ) {\n          if ( scope.mode === 'year' ) {\n            return true;\n          }\n          if ( scope.model.getMonth() === dt.getMonth() ) {\n            return ( scope.mode === 'month' || (scope.mode === 'day' && scope.model.getDate() === dt.getDate()) );\n          }\n        }\n        return false;\n      };\n\n      scope.$watch('model', function ( dt, olddt ) {\n        if ( angular.isDate(dt) ) {\n          selected = angular.copy(dt);\n        }\n\n        if ( ! angular.equals(dt, olddt) ) {\n          refill();\n        }\n      });\n      scope.$watch('mode', function() {\n        updateShowWeekNumbers();\n        refill();\n      });\n\n      scope.select = function( dt ) {\n        selected = new Date(dt);\n\n        if ( scope.mode === 'year' ) {\n          scope.mode = 'month';\n          selected.setFullYear( dt.getFullYear() );\n        } else if ( scope.mode === 'month' ) {\n          scope.mode = 'day';\n          selected.setMonth( dt.getMonth() );\n        } else if ( scope.mode === 'day' ) {\n          scope.model = new Date(selected);\n        }\n      };\n      scope.move = function(step) {\n        if (scope.mode === 'day') {\n          selected.setMonth( selected.getMonth() + step );\n        } else if (scope.mode === 'month') {\n          selected.setFullYear( selected.getFullYear() + step );\n        } else if (scope.mode === 'year') {\n          selected.setFullYear( selected.getFullYear() + step * yearRange );\n        }\n        refill();\n      };\n      scope.toggleMode = function() {\n        scope.mode = ( scope.mode === 'day' ) ? 'month' : ( scope.mode === 'month' ) ? 'year' : 'day';\n      };\n      scope.getWeekNumber = function(row) {\n        if ( scope.mode !== 'day' || ! scope.showWeekNumbers || row.length !== 7 ) {\n          return;\n        }\n\n        var index = ( startingDay > 4 ) ? 11 - startingDay : 4 - startingDay; // Thursday\n        var d = new Date( row[ index ].date );\n        d.setHours(0, 0, 0);\n        return Math.ceil((((d - new Date(d.getFullYear(), 0, 1)) / 86400000) + 1) / 7); // 86400000 = 1000*60*60*24;\n      };\n    }\n  };\n}]);\n// The `$dialogProvider` can be used to configure global defaults for your\n// `$dialog` service.\nvar dialogModule = angular.module('ui.bootstrap.dialog', ['ui.bootstrap.transition']);\n\ndialogModule.controller('MessageBoxController', ['$scope', 'dialog', 'model', function($scope, dialog, model){\n  $scope.title = model.title;\n  $scope.message = model.message;\n  $scope.buttons = model.buttons;\n  $scope.close = function(res){\n    dialog.close(res);\n  };\n}]);\n\ndialogModule.provider(\"$dialog\", function(){\n\n  // The default options for all dialogs.\n  var defaults = {\n    backdrop: true,\n    dialogClass: 'modal',\n    backdropClass: 'modal-backdrop',\n    transitionClass: 'fade',\n    triggerClass: 'in',\n    resolve:{},\n    backdropFade: false,\n    dialogFade:false,\n    keyboard: true, // close with esc key\n    backdropClick: true // only in conjunction with backdrop=true\n    /* other options: template, templateUrl, controller */\n\t};\n\n\tvar globalOptions = {};\n\n  var activeBackdrops = {value : 0};\n\n  // The `options({})` allows global configuration of all dialogs in the application.\n  //\n  //      var app = angular.module('App', ['ui.bootstrap.dialog'], function($dialogProvider){\n  //        // don't close dialog when backdrop is clicked by default\n  //        $dialogProvider.options({backdropClick: false});\n  //      });\n\tthis.options = function(value){\n\t\tglobalOptions = value;\n\t};\n\n  // Returns the actual `$dialog` service that is injected in controllers\n\tthis.$get = [\"$http\", \"$document\", \"$compile\", \"$rootScope\", \"$controller\", \"$templateCache\", \"$q\", \"$transition\", \"$injector\",\n  function ($http, $document, $compile, $rootScope, $controller, $templateCache, $q, $transition, $injector) {\n\n\t\tvar body = $document.find('body');\n\n\t\tfunction createElement(clazz) {\n\t\t\tvar el = angular.element(\"<div>\");\n\t\t\tel.addClass(clazz);\n\t\t\treturn el;\n\t\t}\n\n    // The `Dialog` class represents a modal dialog. The dialog class can be invoked by providing an options object\n    // containing at lest template or templateUrl and controller:\n    //\n    //     var d = new Dialog({templateUrl: 'foo.html', controller: 'BarController'});\n    //\n    // Dialogs can also be created using templateUrl and controller as distinct arguments:\n    //\n    //     var d = new Dialog('path/to/dialog.html', MyDialogController);\n\t\tfunction Dialog(opts) {\n\n      var self = this, options = this.options = angular.extend({}, defaults, globalOptions, opts);\n      this._open = false;\n\n      this.backdropEl = createElement(options.backdropClass);\n      if(options.backdropFade){\n        this.backdropEl.addClass(options.transitionClass);\n        this.backdropEl.removeClass(options.triggerClass);\n      }\n\n      this.modalEl = createElement(options.dialogClass);\n      if(options.dialogFade){\n        this.modalEl.addClass(options.transitionClass);\n        this.modalEl.removeClass(options.triggerClass);\n      }\n\n      this.handledEscapeKey = function(e) {\n        if (e.which === 27) {\n          self.close();\n          e.preventDefault();\n          self.$scope.$apply();\n        }\n      };\n\n      this.handleBackDropClick = function(e) {\n        self.close();\n        e.preventDefault();\n        self.$scope.$apply();\n      };\n\n      this.handleLocationChange = function() {\n        self.close();\n      };\n    }\n\n    // The `isOpen()` method returns wether the dialog is currently visible.\n    Dialog.prototype.isOpen = function(){\n      return this._open;\n    };\n\n    // The `open(templateUrl, controller)` method opens the dialog.\n    // Use the `templateUrl` and `controller` arguments if specifying them at dialog creation time is not desired.\n    Dialog.prototype.open = function(templateUrl, controller){\n      var self = this, options = this.options;\n\n      if(templateUrl){\n        options.templateUrl = templateUrl;\n      }\n      if(controller){\n        options.controller = controller;\n      }\n\n      if(!(options.template || options.templateUrl)) {\n        throw new Error('Dialog.open expected template or templateUrl, neither found. Use options or open method to specify them.');\n      }\n\n      this._loadResolves().then(function(locals) {\n        var $scope = locals.$scope = self.$scope = locals.$scope ? locals.$scope : $rootScope.$new();\n\n        self.modalEl.html(locals.$template);\n\n        if (self.options.controller) {\n          var ctrl = $controller(self.options.controller, locals);\n          self.modalEl.children().data('ngControllerController', ctrl);\n        }\n\n        $compile(self.modalEl)($scope);\n        self._addElementsToDom();\n\n        // trigger tranisitions\n        setTimeout(function(){\n          if(self.options.dialogFade){ self.modalEl.addClass(self.options.triggerClass); }\n          if(self.options.backdropFade){ self.backdropEl.addClass(self.options.triggerClass); }\n        });\n\n        self._bindEvents();\n      });\n\n      this.deferred = $q.defer();\n      return this.deferred.promise;\n    };\n\n    // closes the dialog and resolves the promise returned by the `open` method with the specified result.\n    Dialog.prototype.close = function(result){\n      var self = this;\n      var fadingElements = this._getFadingElements();\n\n      if(fadingElements.length > 0){\n        for (var i = fadingElements.length - 1; i >= 0; i--) {\n          $transition(fadingElements[i], removeTriggerClass).then(onCloseComplete);\n        }\n        return;\n      }\n\n      this._onCloseComplete(result);\n\n      function removeTriggerClass(el){\n        el.removeClass(self.options.triggerClass);\n      }\n\n      function onCloseComplete(){\n        if(self._open){\n          self._onCloseComplete(result);\n        }\n      }\n    };\n\n    Dialog.prototype._getFadingElements = function(){\n      var elements = [];\n      if(this.options.dialogFade){\n        elements.push(this.modalEl);\n      }\n      if(this.options.backdropFade){\n        elements.push(this.backdropEl);\n      }\n\n      return elements;\n    };\n\n    Dialog.prototype._bindEvents = function() {\n      if(this.options.keyboard){ body.bind('keydown', this.handledEscapeKey); }\n      if(this.options.backdrop && this.options.backdropClick){ this.backdropEl.bind('click', this.handleBackDropClick); }\n    };\n\n    Dialog.prototype._unbindEvents = function() {\n      if(this.options.keyboard){ body.unbind('keydown', this.handledEscapeKey); }\n      if(this.options.backdrop && this.options.backdropClick){ this.backdropEl.unbind('click', this.handleBackDropClick); }\n    };\n\n    Dialog.prototype._onCloseComplete = function(result) {\n      this._removeElementsFromDom();\n      this._unbindEvents();\n\n      this.deferred.resolve(result);\n    };\n\n    Dialog.prototype._addElementsToDom = function(){\n      body.append(this.modalEl);\n\n      if(this.options.backdrop) { \n        if (activeBackdrops.value === 0) {\n          body.append(this.backdropEl); \n        }\n        activeBackdrops.value++;\n      }\n\n      this._open = true;\n    };\n\n    Dialog.prototype._removeElementsFromDom = function(){\n      this.modalEl.remove();\n\n      if(this.options.backdrop) { \n        activeBackdrops.value--;\n        if (activeBackdrops.value === 0) {\n          this.backdropEl.remove(); \n        }\n      }\n      this._open = false;\n    };\n\n    // Loads all `options.resolve` members to be used as locals for the controller associated with the dialog.\n    Dialog.prototype._loadResolves = function(){\n      var values = [], keys = [], templatePromise, self = this;\n\n      if (this.options.template) {\n        templatePromise = $q.when(this.options.template);\n      } else if (this.options.templateUrl) {\n        templatePromise = $http.get(this.options.templateUrl, {cache:$templateCache})\n        .then(function(response) { return response.data; });\n      }\n\n      angular.forEach(this.options.resolve || [], function(value, key) {\n        keys.push(key);\n        values.push(angular.isString(value) ? $injector.get(value) : $injector.invoke(value));\n      });\n\n      keys.push('$template');\n      values.push(templatePromise);\n\n      return $q.all(values).then(function(values) {\n        var locals = {};\n        angular.forEach(values, function(value, index) {\n          locals[keys[index]] = value;\n        });\n        locals.dialog = self;\n        return locals;\n      });\n    };\n\n    // The actual `$dialog` service that is injected in controllers.\n    return {\n      // Creates a new `Dialog` with the specified options.\n      dialog: function(opts){\n        return new Dialog(opts);\n      },\n      // creates a new `Dialog` tied to the default message box template and controller.\n      //\n      // Arguments `title` and `message` are rendered in the modal header and body sections respectively.\n      // The `buttons` array holds an object with the following members for each button to include in the\n      // modal footer section:\n      //\n      // * `result`: the result to pass to the `close` method of the dialog when the button is clicked\n      // * `label`: the label of the button\n      // * `cssClass`: additional css class(es) to apply to the button for styling\n      messageBox: function(title, message, buttons){\n        return new Dialog({templateUrl: 'template/dialog/message.html', controller: 'MessageBoxController', resolve:\n          {model: function() {\n            return {\n              title: title,\n              message: message,\n              buttons: buttons\n            };\n          }\n        }});\n      }\n    };\n  }];\n});\n\n/*\n * dropdownToggle - Provides dropdown menu functionality in place of bootstrap js\n * @restrict class or attribute\n * @example:\n   <li class=\"dropdown\">\n     <a class=\"dropdown-toggle\">My Dropdown Menu</a>\n     <ul class=\"dropdown-menu\">\n       <li ng-repeat=\"choice in dropChoices\">\n         <a ng-href=\"{{choice.href}}\">{{choice.text}}</a>\n       </li>\n     </ul>\n   </li>\n */\n\nangular.module('ui.bootstrap.dropdownToggle', []).directive('dropdownToggle', ['$document', '$location', function ($document, $location) {\n  var openElement = null,\n      closeMenu   = angular.noop;\n  return {\n    restrict: 'CA',\n    link: function(scope, element, attrs) {\n      scope.$watch('$location.path', function() { closeMenu(); });\n      element.parent().bind('click', function() { closeMenu(); });\n      element.bind('click', function (event) {\n\n        var elementWasOpen = (element === openElement);\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!!openElement) {\n          closeMenu();\n        }\n\n        if (!elementWasOpen) {\n          element.parent().addClass('open');\n          openElement = element;\n          closeMenu = function (event) {\n            if (event) {\n              event.preventDefault();\n              event.stopPropagation();\n            }\n            $document.unbind('click', closeMenu);\n            element.parent().removeClass('open');\n            closeMenu = angular.noop;\n            openElement = null;\n          };\n          $document.bind('click', closeMenu);\n        }\n      });\n    }\n  };\n}]);\nangular.module('ui.bootstrap.modal', ['ui.bootstrap.dialog'])\n.directive('modal', ['$parse', '$dialog', function($parse, $dialog) {\n  return {\n    restrict: 'EA',\n    terminal: true,\n    link: function(scope, elm, attrs) {\n      var opts = angular.extend({}, scope.$eval(attrs.uiOptions || attrs.bsOptions || attrs.options));\n      var shownExpr = attrs.modal || attrs.show;\n      var setClosed;\n\n      // Create a dialog with the template as the contents of the directive\n      // Add the current scope as the resolve in order to make the directive scope as a dialog controller scope\n      opts = angular.extend(opts, {\n        template: elm.html(), \n        resolve: { $scope: function() { return scope; } }\n      });\n      var dialog = $dialog.dialog(opts);\n\n      elm.remove();\n\n      if (attrs.close) {\n        setClosed = function() {\n          $parse(attrs.close)(scope);\n        };\n      } else {\n        setClosed = function() {         \n          if (angular.isFunction($parse(shownExpr).assign)) {\n            $parse(shownExpr).assign(scope, false); \n          }\n        };\n      }\n\n      scope.$watch(shownExpr, function(isShown, oldShown) {\n        if (isShown) {\n          dialog.open().then(function(){\n            setClosed();\n          });\n        } else {\n          //Make sure it is not opened\n          if (dialog.isOpen()){\n            dialog.close();\n          }\n        }\n      });\n    }\n  };\n}]);\nangular.module('ui.bootstrap.pagination', [])\n\n.controller('PaginationController', ['$scope', function (scope) {\n\n  scope.noPrevious = function() {\n    return scope.currentPage === 1;\n  };\n  scope.noNext = function() {\n    return scope.currentPage === scope.numPages;\n  };\n\n  scope.isActive = function(page) {\n    return scope.currentPage === page;\n  };\n\n  scope.selectPage = function(page) {\n    if ( ! scope.isActive(page) && page > 0 && page <= scope.numPages) {\n      scope.currentPage = page;\n      scope.onSelectPage({ page: page });\n    }\n  };\n}])\n\n.constant('paginationConfig', {\n  boundaryLinks: false,\n  directionLinks: true,\n  firstText: 'First',\n  previousText: 'Previous',\n  nextText: 'Next',\n  lastText: 'Last',\n  rotate: true\n})\n\n.directive('pagination', ['paginationConfig', function(paginationConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      numPages: '=',\n      currentPage: '=',\n      maxSize: '=',\n      onSelectPage: '&'\n    },\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pagination.html',\n    replace: true,\n    link: function(scope, element, attrs) {\n\n      // Setup configuration parameters\n      var boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n      var directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n      var firstText = angular.isDefined(attrs.firstText) ? scope.$parent.$eval(attrs.firstText) : paginationConfig.firstText;\n      var previousText = angular.isDefined(attrs.previousText) ? scope.$parent.$eval(attrs.previousText) : paginationConfig.previousText;\n      var nextText = angular.isDefined(attrs.nextText) ? scope.$parent.$eval(attrs.nextText) : paginationConfig.nextText;\n      var lastText = angular.isDefined(attrs.lastText) ? scope.$parent.$eval(attrs.lastText) : paginationConfig.lastText;\n      var rotate = angular.isDefined(attrs.rotate) ? scope.$eval(attrs.rotate) : paginationConfig.rotate;\n\n      // Create page object used in template\n      function makePage(number, text, isActive, isDisabled) {\n        return {\n          number: number,\n          text: text,\n          active: isActive,\n          disabled: isDisabled\n        };\n      }\n\n      scope.$watch('numPages + currentPage + maxSize', function() {\n        scope.pages = [];\n        \n        // Default page limits\n        var startPage = 1, endPage = scope.numPages;\n        var isMaxSized = ( angular.isDefined(scope.maxSize) && scope.maxSize < scope.numPages );\n\n        // recompute if maxSize\n        if ( isMaxSized ) {\n          if ( rotate ) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(scope.currentPage - Math.floor(scope.maxSize/2), 1);\n            endPage   = startPage + scope.maxSize - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > scope.numPages) {\n              endPage   = scope.numPages;\n              startPage = endPage - scope.maxSize + 1;\n            }\n          } else {\n            // Visible pages are paginated with maxSize\n            startPage = ((Math.ceil(scope.currentPage / scope.maxSize) - 1) * scope.maxSize) + 1;\n\n            // Adjust last page if limit is exceeded\n            endPage = Math.min(startPage + scope.maxSize - 1, scope.numPages);\n          }\n        }\n\n        // Add page number links\n        for (var number = startPage; number <= endPage; number++) {\n          var page = makePage(number, number, scope.isActive(number), false);\n          scope.pages.push(page);\n        }\n\n        // Add links to move between page sets\n        if ( isMaxSized && ! rotate ) {\n          if ( startPage > 1 ) {\n            var previousPageSet = makePage(startPage - 1, '...', false, false);\n            scope.pages.unshift(previousPageSet);\n          }\n\n          if ( endPage < scope.numPages ) {\n            var nextPageSet = makePage(endPage + 1, '...', false, false);\n            scope.pages.push(nextPageSet);\n          }\n        }\n\n        // Add previous & next links\n        if (directionLinks) {\n          var previousPage = makePage(scope.currentPage - 1, previousText, false, scope.noPrevious());\n          scope.pages.unshift(previousPage);\n\n          var nextPage = makePage(scope.currentPage + 1, nextText, false, scope.noNext());\n          scope.pages.push(nextPage);\n        }\n\n        // Add first & last links\n        if (boundaryLinks) {\n          var firstPage = makePage(1, firstText, false, scope.noPrevious());\n          scope.pages.unshift(firstPage);\n\n          var lastPage = makePage(scope.numPages, lastText, false, scope.noNext());\n          scope.pages.push(lastPage);\n        }\n\n        if ( scope.currentPage > scope.numPages ) {\n          scope.selectPage(scope.numPages);\n        }\n      });\n    }\n  };\n}])\n\n.constant('pagerConfig', {\n  previousText: '« Previous',\n  nextText: 'Next »',\n  align: true\n})\n\n.directive('pager', ['pagerConfig', function(config) {\n  return {\n    restrict: 'EA',\n    scope: {\n      numPages: '=',\n      currentPage: '=',\n      onSelectPage: '&'\n    },\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pager.html',\n    replace: true,\n    link: function(scope, element, attrs, paginationCtrl) {\n\n      // Setup configuration parameters\n      var previousText = angular.isDefined(attrs.previousText) ? scope.$parent.$eval(attrs.previousText) : config.previousText;\n      var nextText = angular.isDefined(attrs.nextText) ? scope.$parent.$eval(attrs.nextText) : config.nextText;\n      var align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : config.align;\n\n      // Create page object used in template\n      function makePage(number, text, isDisabled, isPrevious, isNext) {\n        return {\n          number: number,\n          text: text,\n          disabled: isDisabled,\n          previous: ( align && isPrevious ),\n          next: ( align && isNext )\n        };\n      }\n\n      scope.$watch('numPages + currentPage', function() {\n        scope.pages = [];\n\n        // Add previous & next links\n        var previousPage = makePage(scope.currentPage - 1, previousText, scope.noPrevious(), true, false);\n        scope.pages.unshift(previousPage);\n\n        var nextPage = makePage(scope.currentPage + 1, nextText, scope.noNext(), false, true);\n        scope.pages.push(nextPage);\n\n        if ( scope.currentPage > scope.numPages ) {\n          scope.selectPage(scope.numPages);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods that can be use to retrieve position of DOM elements.\n * It is meant to be used where we need to absolute-position DOM elements in\n * relation to other, existing elements (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$position', ['$document', '$window', function ($document, $window) {\n\n    var mouseX, mouseY;\n\n    $document.bind('mousemove', function mouseMoved(event) {\n      mouseX = event.pageX;\n      mouseY = event.pageY;\n    });\n\n    function getStyle(el, cssprop) {\n      if (el.currentStyle) { //IE\n        return el.currentStyle[cssprop];\n      } else if ($window.getComputedStyle) {\n        return $window.getComputedStyle(el)[cssprop];\n      }\n      // finally try and get inline style\n      return el.style[cssprop];\n    }\n\n    /**\n     * Checks if a given element is statically positioned\n     * @param element - raw DOM element\n     */\n    function isStaticPositioned(element) {\n      return (getStyle(element, \"position\") || 'static' ) === 'static';\n    }\n\n    /**\n     * returns the closest, non-statically positioned parentOffset of a given element\n     * @param element\n     */\n    var parentOffsetEl = function (element) {\n      var docDomEl = $document[0];\n      var offsetParent = element.offsetParent || docDomEl;\n      while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent) ) {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docDomEl;\n    };\n\n    return {\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/\n       */\n      position: function (element) {\n        var elBCR = this.offset(element);\n        var offsetParentBCR = { top: 0, left: 0 };\n        var offsetParentEl = parentOffsetEl(element[0]);\n        if (offsetParentEl != $document[0]) {\n          offsetParentBCR = this.offset(angular.element(offsetParentEl));\n          offsetParentBCR.top += offsetParentEl.clientTop;\n          offsetParentBCR.left += offsetParentEl.clientLeft;\n        }\n\n        return {\n          width: element.prop('offsetWidth'),\n          height: element.prop('offsetHeight'),\n          top: elBCR.top - offsetParentBCR.top,\n          left: elBCR.left - offsetParentBCR.left\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/\n       */\n      offset: function (element) {\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: element.prop('offsetWidth'),\n          height: element.prop('offsetHeight'),\n          top: boundingClientRect.top + ($window.pageYOffset || $document[0].body.scrollTop),\n          left: boundingClientRect.left + ($window.pageXOffset || $document[0].body.scrollLeft)\n        };\n      },\n\n      /**\n       * Provides the coordinates of the mouse\n       */\n      mouse: function () {\n        return {x: mouseX, y: mouseY};\n      }\n    };\n  }]);\n\n/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module( 'ui.bootstrap.tooltip', [ 'ui.bootstrap.position' ] )\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider( '$tooltip', function () {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    animation: true,\n    popupDelay: 0\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'focus': 'blur'\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n  \n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function( value ) {\n\t\tangular.extend( globalOptions, value );\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n   */\n  this.setTriggers = function setTriggers ( triggers ) {\n    angular.extend( triggerMap, triggers );\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake-case.\n   */\n  function snake_case(name){\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = [ '$window', '$compile', '$timeout', '$parse', '$document', '$position', '$interpolate', function ( $window, $compile, $timeout, $parse, $document, $position, $interpolate ) {\n    return function $tooltip ( type, prefix, defaultTriggerShow ) {\n      var options = angular.extend( {}, defaultOptions, globalOptions );\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function setTriggers ( trigger ) {\n        var show, hide;\n       \n        show = trigger || options.trigger || defaultTriggerShow;\n        if ( angular.isDefined ( options.trigger ) ) {\n          hide = triggerMap[options.trigger] || show;\n        } else {\n          hide = triggerMap[show] || show;\n        }\n\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case( type );\n      var triggers = setTriggers( undefined );\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template = \n        '<'+ directiveName +'-popup '+\n          'title=\"'+startSym+'tt_title'+endSym+'\" '+\n          'content=\"'+startSym+'tt_content'+endSym+'\" '+\n          'placement=\"'+startSym+'tt_placement'+endSym+'\" '+\n          'animation=\"tt_animation()\" '+\n          'is-open=\"tt_isOpen\"'+\n          '>'+\n        '</'+ directiveName +'-popup>';\n\n      return {\n        restrict: 'EA',\n        scope: true,\n        link: function link ( scope, element, attrs ) {\n          var tooltip = $compile( template )( scope );\n          var transitionTimeout;\n          var popupTimeout;\n          var $body;\n          var appendToBody = angular.isDefined( options.appendToBody ) ? options.appendToBody : false;\n\n          // By default, the tooltip is not open.\n          // TODO add ability to start tooltip opened\n          scope.tt_isOpen = false;\n\n          function toggleTooltipBind () {\n            if ( ! scope.tt_isOpen ) {\n              showTooltipBind();\n            } else {\n              hideTooltipBind();\n            }\n          }\n          \n          // Show the tooltip with delay if specified, otherwise show it immediately\n          function showTooltipBind() {\n            if ( scope.tt_popupDelay ) {\n              popupTimeout = $timeout( show, scope.tt_popupDelay );\n            } else {\n              scope.$apply( show );\n            }\n          }\n\n          function hideTooltipBind () {\n            scope.$apply(function () {\n              hide();\n            });\n          }\n          \n          // Show the tooltip popup element.\n          function show() {\n            var position,\n                ttWidth,\n                ttHeight,\n                ttPosition;\n\n            // Don't show empty tooltips.\n            if ( ! scope.tt_content ) {\n              return;\n            }\n\n            // If there is a pending remove transition, we must cancel it, lest the\n            // tooltip be mysteriously removed.\n            if ( transitionTimeout ) {\n              $timeout.cancel( transitionTimeout );\n            }\n            \n            // Set the initial positioning.\n            tooltip.css({ top: 0, left: 0, display: 'block' });\n            \n            // Now we add it to the DOM because need some info about it. But it's not \n            // visible yet anyway.\n            if ( appendToBody ) {\n                $body = $body || $document.find( 'body' );\n                $body.append( tooltip );\n            } else {\n              element.after( tooltip );\n            }\n\n            // Get the position of the directive element.\n            position = options.appendToBody ? $position.offset( element ) : $position.position( element );\n\n            // Get the height and width of the tooltip so we can center it.\n            ttWidth = tooltip.prop( 'offsetWidth' );\n            ttHeight = tooltip.prop( 'offsetHeight' );\n            \n            // Calculate the tooltip's top and left coordinates to center it with\n            // this directive.\n            switch ( scope.tt_placement ) {\n              case 'mouse':\n                var mousePos = $position.mouse();\n                ttPosition = {\n                  top: mousePos.y,\n                  left: mousePos.x\n                };\n                break;\n              case 'right':\n                ttPosition = {\n                  top: position.top + position.height / 2 - ttHeight / 2,\n                  left: position.left + position.width\n                };\n                break;\n              case 'bottom':\n                ttPosition = {\n                  top: position.top + position.height,\n                  left: position.left + position.width / 2 - ttWidth / 2\n                };\n                break;\n              case 'left':\n                ttPosition = {\n                  top: position.top + position.height / 2 - ttHeight / 2,\n                  left: position.left - ttWidth\n                };\n                break;\n              default:\n                ttPosition = {\n                  top: position.top - ttHeight,\n                  left: position.left + position.width / 2 - ttWidth / 2\n                };\n                break;\n            }\n\n            ttPosition.top += 'px';\n            ttPosition.left += 'px';\n\n            // Now set the calculated positioning.\n            tooltip.css( ttPosition );\n              \n            // And show the tooltip.\n            scope.tt_isOpen = true;\n          }\n          \n          // Hide the tooltip popup element.\n          function hide() {\n            // First things first: we don't show it anymore.\n            scope.tt_isOpen = false;\n\n            //if tooltip is going to be shown after delay, we must cancel this\n            $timeout.cancel( popupTimeout );\n            \n            // And now we remove it from the DOM. However, if we have animation, we \n            // need to wait for it to expire beforehand.\n            // FIXME: this is a placeholder for a port of the transitions library.\n            if ( angular.isDefined( scope.tt_animation ) && scope.tt_animation() ) {\n              transitionTimeout = $timeout( function () { tooltip.remove(); }, 500 );\n            } else {\n              tooltip.remove();\n            }\n          }\n\n          /**\n           * Observe the relevant attributes.\n           */\n          attrs.$observe( type, function ( val ) {\n            scope.tt_content = val;\n          });\n\n          attrs.$observe( prefix+'Title', function ( val ) {\n            scope.tt_title = val;\n          });\n\n          attrs.$observe( prefix+'Placement', function ( val ) {\n            scope.tt_placement = angular.isDefined( val ) ? val : options.placement;\n          });\n\n          attrs.$observe( prefix+'Animation', function ( val ) {\n            scope.tt_animation = angular.isDefined( val ) ? $parse( val ) : function(){ return options.animation; };\n          });\n\n          attrs.$observe( prefix+'PopupDelay', function ( val ) {\n            var delay = parseInt( val, 10 );\n            scope.tt_popupDelay = ! isNaN(delay) ? delay : options.popupDelay;\n          });\n\n          attrs.$observe( prefix+'Trigger', function ( val ) {\n            element.unbind( triggers.show );\n            element.unbind( triggers.hide );\n\n            triggers = setTriggers( val );\n\n            if ( triggers.show === triggers.hide ) {\n              element.bind( triggers.show, toggleTooltipBind );\n            } else {\n              element.bind( triggers.show, showTooltipBind );\n              element.bind( triggers.hide, hideTooltipBind );\n            }\n          });\n\n          attrs.$observe( prefix+'AppendToBody', function ( val ) {\n            appendToBody = angular.isDefined( val ) ? $parse( val )( scope ) : appendToBody;\n          });\n\n          // if a tooltip is attached to <body> we need to remove it on\n          // location change as its parent scope will probably not be destroyed\n          // by the change.\n          if ( appendToBody ) {\n            scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess () {\n            if ( scope.tt_isOpen ) {\n              hide();\n            }\n          });\n          }\n\n          // Make sure tooltip is destroyed and removed.\n          scope.$on('$destroy', function onDestroyTooltip() {\n            if ( scope.tt_isOpen ) {\n              hide();\n            } else {\n              tooltip.remove();\n            }\n          });\n        }\n      };\n    };\n  }];\n})\n\n.directive( 'tooltipPopup', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: { content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-popup.html'\n  };\n})\n\n.directive( 'tooltip', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltip', 'tooltip', 'mouseenter' );\n}])\n\n.directive( 'tooltipHtmlUnsafePopup', function () {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: { content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n  };\n})\n\n.directive( 'tooltipHtmlUnsafe', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltipHtmlUnsafe', 'tooltip', 'mouseenter' );\n}]);\n\n/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html popovers, and selector delegatation.\n */\nangular.module( 'ui.bootstrap.popover', [ 'ui.bootstrap.tooltip' ] )\n.directive( 'popoverPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { title: '@', content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover.html'\n  };\n})\n.directive( 'popover', [ '$compile', '$timeout', '$parse', '$window', '$tooltip', function ( $compile, $timeout, $parse, $window, $tooltip ) {\n  return $tooltip( 'popover', 'popover', 'click' );\n}]);\n\n\nangular.module('ui.bootstrap.progressbar', ['ui.bootstrap.transition'])\n\n.constant('progressConfig', {\n  animate: true,\n  autoType: false,\n  stackedTypes: ['success', 'info', 'warning', 'danger']\n})\n\n.controller('ProgressBarController', ['$scope', '$attrs', 'progressConfig', function($scope, $attrs, progressConfig) {\n\n    // Whether bar transitions should be animated\n    var animate = angular.isDefined($attrs.animate) ? $scope.$eval($attrs.animate) : progressConfig.animate;\n    var autoType = angular.isDefined($attrs.autoType) ? $scope.$eval($attrs.autoType) : progressConfig.autoType;\n    var stackedTypes = angular.isDefined($attrs.stackedTypes) ? $scope.$eval('[' + $attrs.stackedTypes + ']') : progressConfig.stackedTypes;\n\n    // Create bar object\n    this.makeBar = function(newBar, oldBar, index) {\n        var newValue = (angular.isObject(newBar)) ? newBar.value : (newBar || 0);\n        var oldValue =  (angular.isObject(oldBar)) ? oldBar.value : (oldBar || 0);\n        var type = (angular.isObject(newBar) && angular.isDefined(newBar.type)) ? newBar.type : (autoType) ? getStackedType(index || 0) : null;\n\n        return {\n            from: oldValue,\n            to: newValue,\n            type: type,\n            animate: animate\n        };\n    };\n\n    function getStackedType(index) {\n        return stackedTypes[index];\n    }\n\n    this.addBar = function(bar) {\n        $scope.bars.push(bar);\n        $scope.totalPercent += bar.to;\n    };\n\n    this.clearBars = function() {\n        $scope.bars = [];\n        $scope.totalPercent = 0;\n    };\n    this.clearBars();\n}])\n\n.directive('progress', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        controller: 'ProgressBarController',\n        scope: {\n            value: '=percent',\n            onFull: '&',\n            onEmpty: '&'\n        },\n        templateUrl: 'template/progressbar/progress.html',\n        link: function(scope, element, attrs, controller) {\n            scope.$watch('value', function(newValue, oldValue) {\n                controller.clearBars();\n\n                if (angular.isArray(newValue)) {\n                    // Stacked progress bar\n                    for (var i=0, n=newValue.length; i < n; i++) {\n                        controller.addBar(controller.makeBar(newValue[i], oldValue[i], i));\n                    }\n                } else {\n                    // Simple bar\n                    controller.addBar(controller.makeBar(newValue, oldValue));\n                }\n            }, true);\n\n            // Total percent listeners\n            scope.$watch('totalPercent', function(value) {\n              if (value >= 100) {\n                scope.onFull();\n              } else if (value <= 0) {\n                scope.onEmpty();\n              }\n            }, true);\n        }\n    };\n})\n\n.directive('progressbar', ['$transition', function($transition) {\n    return {\n        restrict: 'EA',\n        replace: true,\n        scope: {\n            width: '=',\n            old: '=',\n            type: '=',\n            animate: '='\n        },\n        templateUrl: 'template/progressbar/bar.html',\n        link: function(scope, element) {\n            scope.$watch('width', function(value) {\n                if (scope.animate) {\n                    element.css('width', scope.old + '%');\n                    $transition(element, {width: value + '%'});\n                } else {\n                    element.css('width', value + '%');\n                }\n            });\n        }\n    };\n}]);\nangular.module('ui.bootstrap.rating', [])\n\n.constant('ratingConfig', {\n  max: 5\n})\n\n.directive('rating', ['ratingConfig', '$parse', function(ratingConfig, $parse) {\n  return {\n    restrict: 'EA',\n    scope: {\n      value: '='\n    },\n    templateUrl: 'template/rating/rating.html',\n    replace: true,\n    link: function(scope, element, attrs) {\n\n      var maxRange = angular.isDefined(attrs.max) ? scope.$eval(attrs.max) : ratingConfig.max;\n\n      scope.range = [];\n      for (var i = 1; i <= maxRange; i++) {\n          scope.range.push(i);\n      }\n\n      scope.rate = function(value) {\n          if ( ! scope.readonly ) {\n              scope.value = value;\n          }\n      };\n\n      scope.enter = function(value) {\n          if ( ! scope.readonly ) {\n              scope.val = value;\n          }\n      };\n\n      scope.reset = function() {\n          scope.val = angular.copy(scope.value);\n      };\n      scope.reset();\n\n      scope.$watch('value', function(value) {\n          scope.val = value;\n      });\n\n      scope.readonly = false;\n      if (attrs.readonly) {\n          scope.$parent.$watch($parse(attrs.readonly), function(value) {\n              scope.readonly = !!value;\n          });\n      }\n    }\n  };\n}]);\n\n/**\n * @ngdoc overview\n * @name ui.bootstrap.tabs\n *\n * @description\n * AngularJS version of the tabs directive.\n */\n\nangular.module('ui.bootstrap.tabs', [])\n\n.directive('tabs', function() {\n  return function() {\n    throw new Error(\"The `tabs` directive is deprecated, please migrate to `tabset`. Instructions can be found at http://github.com/angular-ui/bootstrap/tree/master/CHANGELOG.md\");\n  };\n})\n\n.controller('TabsetController', ['$scope', '$element', \nfunction TabsetCtrl($scope, $element) {\n  var ctrl = this,\n    tabs = ctrl.tabs = $scope.tabs = [];\n\n  ctrl.select = function(tab) {\n    angular.forEach(tabs, function(tab) {\n      tab.active = false;\n    });  \n    tab.active = true;\n  };\n\n  ctrl.addTab = function addTab(tab) {\n    tabs.push(tab);\n    if (tabs.length == 1) {\n      ctrl.select(tab);\n    }\n  };\n\n  ctrl.removeTab = function removeTab(tab) { \n    var index = tabs.indexOf(tab);\n    //Select a new tab if the tab to be removed is selected\n    if (tab.active && tabs.length > 1) {\n      //If this is the last tab, select the previous tab. else, the next tab.\n      var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n      ctrl.select(tabs[newActiveIndex]);\n    }\n    tabs.splice(index, 1);\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabset\n * @restrict EA\n *\n * @description\n * Tabset is the outer container for the tabs directive\n *\n * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab heading=\"Vertical Tab 1\"><b>First</b> Content!</tab>\n      <tab heading=\"Vertical Tab 2\"><i>Second</i> Content!</tab>\n    </tabset>\n    <hr />\n    <tabset vertical=\"true\">\n      <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n      <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tabset', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    scope: {},\n    controller: 'TabsetController',\n    templateUrl: 'template/tabs/tabset.html',\n    link: function(scope, element, attrs) {\n      scope.vertical = angular.isDefined(attrs.vertical) ? scope.$eval(attrs.vertical) : false;\n      scope.type = angular.isDefined(attrs.type) ? scope.$parent.$eval(attrs.type) : 'tabs';\n    }\n  };\n})\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tab\n * @restrict EA\n *\n * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.\n * @param {string=} select An expression to evaluate when the tab is selected.\n * @param {boolean=} active A binding, telling whether or not this tab is selected.\n * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n *\n * @description \n * Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <div ng-controller=\"TabsDemoCtrl\">\n      <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n        Select item 1, using active binding\n      </button>\n      <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n        Enable/disable item 2, using disabled binding\n      </button>\n      <br />\n      <tabset>\n        <tab heading=\"Tab 1\">First Tab</tab>\n        <tab select=\"alertMe()\">\n          <tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n          Second Tab, with alert callback and html heading!\n        </tab>\n        <tab ng-repeat=\"item in items\"\n          heading=\"{{item.title}}\"\n          disabled=\"item.disabled\"\n          active=\"item.active\">\n          {{item.content}}\n        </tab>\n      </tabset>\n    </div>\n  </file>\n  <file name=\"script.js\">\n    function TabsDemoCtrl($scope) {\n      $scope.items = [\n        { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n        { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n      ];\n\n      $scope.alertMe = function() {\n        setTimeout(function() {\n          alert(\"You've selected the alert tab!\");\n        });\n      };\n    };\n  </file>\n</example>\n */\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabHeading\n * @restrict EA\n *\n * @description\n * Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab>\n        <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n        And some content, too!\n      </tab>\n      <tab>\n        <tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n        That's right.\n      </tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tab', ['$parse', '$http', '$templateCache', '$compile',\nfunction($parse, $http, $templateCache, $compile) {\n  return {\n    require: '^tabset',\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/tabs/tab.html',\n    transclude: true,\n    scope: {\n      heading: '@',\n      onSelect: '&select' //This callback is called in contentHeadingTransclude\n                          //once it inserts the tab's content into the dom\n    },\n    controller: function() {\n      //Empty controller so other directives can require being 'under' a tab\n    },\n    compile: function(elm, attrs, transclude) {\n      return function postLink(scope, elm, attrs, tabsetCtrl) {\n        var getActive, setActive;\n        scope.active = false; // default value\n        if (attrs.active) {\n          getActive = $parse(attrs.active);\n          setActive = getActive.assign;\n          scope.$parent.$watch(getActive, function updateActive(value) {\n            if ( !!value && scope.disabled ) {\n              setActive(scope.$parent, false); // Prevent active assignment\n            } else {\n              scope.active = !!value;\n            }\n          });\n        } else {\n          setActive = getActive = angular.noop;\n        }\n\n        scope.$watch('active', function(active) {\n          setActive(scope.$parent, active);\n          if (active) {\n            tabsetCtrl.select(scope);\n            scope.onSelect();\n          }\n        });\n\n        scope.disabled = false;\n        if ( attrs.disabled ) {\n          scope.$parent.$watch($parse(attrs.disabled), function(value) {\n            scope.disabled = !! value;\n          });\n        }\n\n        scope.select = function() {\n          if ( ! scope.disabled ) {\n            scope.active = true;\n          }\n        };\n\n        tabsetCtrl.addTab(scope);\n        scope.$on('$destroy', function() {\n          tabsetCtrl.removeTab(scope);\n        });\n        //If the tabset sets this tab to active, set the parent scope's active\n        //binding too.  We do this so the watch for the parent's initial active\n        //value won't overwrite what is initially set by the tabset\n        if (scope.active) {\n          setActive(scope.$parent, true);\n        } \n\n        //Transclude the collection of sibling elements. Use forEach to find\n        //the heading if it exists. We don't use a directive for tab-heading\n        //because it is problematic. Discussion @ http://git.io/MSNPwQ\n        transclude(scope.$parent, function(clone) {\n          //Look at every element in the clone collection. If it's tab-heading,\n          //mark it as that.  If it's not tab-heading, mark it as tab contents\n          var contents = [], heading;\n          angular.forEach(clone, function(el) {\n            //See if it's a tab-heading attr or element directive\n            //First make sure it's a normal element, one that has a tagName\n            if (el.tagName &&\n                (el.hasAttribute(\"tab-heading\") || \n                 el.hasAttribute(\"data-tab-heading\") ||\n                 el.tagName.toLowerCase() == \"tab-heading\" ||\n                 el.tagName.toLowerCase() == \"data-tab-heading\"\n                )) {\n              heading = el;\n            } else {\n              contents.push(el);\n            }\n          });\n          //Share what we found on the scope, so our tabHeadingTransclude and\n          //tabContentTransclude directives can find out what the heading and\n          //contents are.\n          if (heading) { \n            scope.headingElement = angular.element(heading);\n          }\n          scope.contentElement = angular.element(contents);\n        });\n      };\n    }\n  };\n}])\n\n.directive('tabHeadingTransclude', [function() {\n  return {\n    restrict: 'A',\n    require: '^tab', \n    link: function(scope, elm, attrs, tabCtrl) {\n      scope.$watch('headingElement', function updateHeadingElement(heading) {\n        if (heading) {\n          elm.html('');\n          elm.append(heading);\n        }\n      });\n    }\n  };\n}])\n\n.directive('tabContentTransclude', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    require: '^tabset',\n    link: function(scope, elm, attrs, tabsetCtrl) {\n      scope.$watch($parse(attrs.tabContentTransclude), function(tab) {\n        elm.html('');\n        if (tab) {\n          elm.append(tab.contentElement);\n        }\n      });\n    }\n  };\n}])\n\n;\n\n\nangular.module('ui.bootstrap.timepicker', [])\n\n.filter('pad', function() {\n  return function(input) {\n    if ( angular.isDefined(input) && input.toString().length < 2 ) {\n      input = '0' + input;\n    }\n    return input;\n  };\n})\n\n.constant('timepickerConfig', {\n  hourStep: 1,\n  minuteStep: 1,\n  showMeridian: true,\n  meridians: ['AM', 'PM'],\n  readonlyInput: false,\n  mousewheel: true\n})\n\n.directive('timepicker', ['padFilter', '$parse', 'timepickerConfig', function (padFilter, $parse, timepickerConfig) {\n  return {\n    restrict: 'EA',\n    require:'ngModel',\n    replace: true,\n    templateUrl: 'template/timepicker/timepicker.html',\n    scope: {\n        model: '=ngModel'\n    },\n    link: function(scope, element, attrs, ngModelCtrl) {\n      var selected = new Date(), meridians = timepickerConfig.meridians;\n\n      var hourStep = timepickerConfig.hourStep;\n      if (attrs.hourStep) {\n        scope.$parent.$watch($parse(attrs.hourStep), function(value) {\n          hourStep = parseInt(value, 10);\n        });\n      }\n\n      var minuteStep = timepickerConfig.minuteStep;\n      if (attrs.minuteStep) {\n        scope.$parent.$watch($parse(attrs.minuteStep), function(value) {\n          minuteStep = parseInt(value, 10);\n        });\n      }\n\n      // 12H / 24H mode\n      scope.showMeridian = timepickerConfig.showMeridian;\n      if (attrs.showMeridian) {\n        scope.$parent.$watch($parse(attrs.showMeridian), function(value) {\n          scope.showMeridian = !! value;\n\n          if ( ! scope.model ) {\n            // Reset\n            var dt = new Date( selected );\n            var hours = getScopeHours();\n            if (angular.isDefined( hours )) {\n              dt.setHours( hours );\n            }\n            scope.model = new Date( dt );\n          } else {\n            refreshTemplate();\n          }\n        });\n      }\n\n      // Get scope.hours in 24H mode if valid\n      function getScopeHours ( ) {\n        var hours = parseInt( scope.hours, 10 );\n        var valid = ( scope.showMeridian ) ? (hours > 0 && hours < 13) : (hours >= 0 && hours < 24);\n        if ( !valid ) {\n          return;\n        }\n\n        if ( scope.showMeridian ) {\n          if ( hours === 12 ) {\n            hours = 0;\n          }\n          if ( scope.meridian === meridians[1] ) {\n            hours = hours + 12;\n          }\n        }\n        return hours;\n      }\n\n      // Input elements\n      var inputs = element.find('input');\n      var hoursInputEl = inputs.eq(0), minutesInputEl = inputs.eq(1);\n\n      // Respond on mousewheel spin\n      var mousewheel = (angular.isDefined(attrs.mousewheel)) ? scope.$eval(attrs.mousewheel) : timepickerConfig.mousewheel;\n      if ( mousewheel ) {\n\n        var isScrollingUp = function(e) {\n          if (e.originalEvent) {\n            e = e.originalEvent;\n          }\n          return (e.detail || e.wheelDelta > 0);\n        };\n\n        hoursInputEl.bind('mousewheel', function(e) {\n          scope.$apply( (isScrollingUp(e)) ? scope.incrementHours() : scope.decrementHours() );\n          e.preventDefault();\n        });\n\n        minutesInputEl.bind('mousewheel', function(e) {\n          scope.$apply( (isScrollingUp(e)) ? scope.incrementMinutes() : scope.decrementMinutes() );\n          e.preventDefault();\n        });\n      }\n\n      var keyboardChange = false;\n      scope.readonlyInput = (angular.isDefined(attrs.readonlyInput)) ? scope.$eval(attrs.readonlyInput) : timepickerConfig.readonlyInput;\n      if ( ! scope.readonlyInput ) {\n        scope.updateHours = function() {\n          var hours = getScopeHours();\n\n          if ( angular.isDefined(hours) ) {\n              keyboardChange = 'h';\n              if ( scope.model === null ) {\n                 scope.model = new Date( selected );\n              }\n              scope.model.setHours( hours );\n          } else {\n              scope.model = null;\n              scope.validHours = false;\n          }\n        };\n\n        hoursInputEl.bind('blur', function(e) {\n          if ( scope.validHours && scope.hours < 10) {\n            scope.$apply( function() {\n              scope.hours = padFilter( scope.hours );\n            });\n          }\n        });\n\n        scope.updateMinutes = function() {\n          var minutes = parseInt(scope.minutes, 10);\n          if ( minutes >= 0 && minutes < 60 ) {\n            keyboardChange = 'm';\n            if ( scope.model === null ) {\n              scope.model = new Date( selected );\n            }\n            scope.model.setMinutes( minutes );\n          } else {\n            scope.model = null;\n            scope.validMinutes = false;\n          }\n        };\n\n        minutesInputEl.bind('blur', function(e) {\n          if ( scope.validMinutes && scope.minutes < 10 ) {\n            scope.$apply( function() {\n              scope.minutes = padFilter( scope.minutes );\n            });\n          }\n        });\n      } else {\n        scope.updateHours = angular.noop;\n        scope.updateMinutes = angular.noop;\n      }\n\n      scope.$watch( function getModelTimestamp() {\n        return +scope.model;\n      }, function( timestamp ) {\n        if ( !isNaN( timestamp ) && timestamp > 0 ) {\n          selected = new Date( timestamp );\n          refreshTemplate();\n        }\n      });\n\n      function refreshTemplate() {\n        var hours = selected.getHours();\n        if ( scope.showMeridian ) {\n          // Convert 24 to 12 hour system\n          hours = ( hours === 0 || hours === 12 ) ? 12 : hours % 12;\n        }\n        scope.hours =  ( keyboardChange === 'h' ) ? hours : padFilter(hours);\n        scope.validHours = true;\n\n        var minutes = selected.getMinutes();\n        scope.minutes = ( keyboardChange === 'm' ) ? minutes : padFilter(minutes);\n        scope.validMinutes = true;\n\n        scope.meridian = ( scope.showMeridian ) ? (( selected.getHours() < 12 ) ? meridians[0] : meridians[1]) : '';\n\n        keyboardChange = false;\n      }\n\n      function addMinutes( minutes ) {\n        var dt = new Date( selected.getTime() + minutes * 60000 );\n        if ( dt.getDate() !== selected.getDate()) {\n          dt.setDate( dt.getDate() - 1 );\n        }\n        selected.setTime( dt.getTime() );\n        scope.model = new Date( selected );\n      }\n\n      scope.incrementHours = function() {\n        addMinutes( hourStep * 60 );\n      };\n      scope.decrementHours = function() {\n        addMinutes( - hourStep * 60 );\n      };\n      scope.incrementMinutes = function() {\n        addMinutes( minuteStep );\n      };\n      scope.decrementMinutes = function() {\n        addMinutes( - minuteStep );\n      };\n      scope.toggleMeridian = function() {\n        addMinutes( 12 * 60 * (( selected.getHours() < 12 ) ? 1 : -1) );\n      };\n    }\n  };\n}]);\nangular.module('ui.bootstrap.typeahead', ['ui.bootstrap.position'])\n\n/**\n * A helper service that can parse typeahead's syntax (string provided by users)\n * Extracted to a separate service for ease of unit testing\n */\n  .factory('typeaheadParser', ['$parse', function ($parse) {\n\n  //                      00000111000000000000022200000000000000003333333333333330000000000044000\n  var TYPEAHEAD_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+(.*)$/;\n\n  return {\n    parse:function (input) {\n\n      var match = input.match(TYPEAHEAD_REGEXP), modelMapper, viewMapper, source;\n      if (!match) {\n        throw new Error(\n          \"Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_'\" +\n            \" but got '\" + input + \"'.\");\n      }\n\n      return {\n        itemName:match[3],\n        source:$parse(match[4]),\n        viewMapper:$parse(match[2] || match[1]),\n        modelMapper:$parse(match[1])\n      };\n    }\n  };\n}])\n\n  .directive('typeahead', ['$compile', '$parse', '$q', '$timeout', '$document', '$position', 'typeaheadParser', function ($compile, $parse, $q, $timeout, $document, $position, typeaheadParser) {\n\n  var HOT_KEYS = [9, 13, 27, 38, 40];\n\n  return {\n    require:'ngModel',\n    link:function (originalScope, element, attrs, modelCtrl) {\n\n      var selected;\n\n      //minimal no of characters that needs to be entered before typeahead kicks-in\n      var minSearch = originalScope.$eval(attrs.typeaheadMinLength) || 1;\n\n      //minimal wait time after last character typed before typehead kicks-in\n      var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n      //expressions used by typeahead\n      var parserResult = typeaheadParser.parse(attrs.typeahead);\n\n      //should it restrict model values to the ones selected from the popup only?\n      var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n      var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n      var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n      //pop-up element used to display matches\n      var popUpEl = angular.element('<typeahead-popup></typeahead-popup>');\n      popUpEl.attr({\n        matches: 'matches',\n        active: 'activeIdx',\n        select: 'select(activeIdx)',\n        query: 'query',\n        position: 'position'\n      });\n\n      //create a child scope for the typeahead directive so we are not polluting original scope\n      //with typeahead-specific data (matches, query etc.)\n      var scope = originalScope.$new();\n      originalScope.$on('$destroy', function(){\n        scope.$destroy();\n      });\n\n      var resetMatches = function() {\n        scope.matches = [];\n        scope.activeIdx = -1;\n      };\n\n      var getMatchesAsync = function(inputValue) {\n\n        var locals = {$viewValue: inputValue};\n        isLoadingSetter(originalScope, true);\n        $q.when(parserResult.source(scope, locals)).then(function(matches) {\n\n          //it might happen that several async queries were in progress if a user were typing fast\n          //but we are interested only in responses that correspond to the current view value\n          if (inputValue === modelCtrl.$viewValue) {\n            if (matches.length > 0) {\n\n              scope.activeIdx = 0;\n              scope.matches.length = 0;\n\n              //transform labels\n              for(var i=0; i<matches.length; i++) {\n                locals[parserResult.itemName] = matches[i];\n                scope.matches.push({\n                  label: parserResult.viewMapper(scope, locals),\n                  model: matches[i]\n                });\n              }\n\n              scope.query = inputValue;\n              //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n              //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n              //due to other elements being rendered\n              scope.position = $position.position(element);\n              scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n            } else {\n              resetMatches();\n            }\n            isLoadingSetter(originalScope, false);\n          }\n        }, function(){\n          resetMatches();\n          isLoadingSetter(originalScope, false);\n        });\n      };\n\n      resetMatches();\n\n      //we need to propagate user's query so we can higlight matches\n      scope.query = undefined;\n\n      //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n      //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n      modelCtrl.$parsers.push(function (inputValue) {\n\n        var timeoutId;\n\n        resetMatches();\n        if (selected) {\n          return inputValue;\n        } else {\n          if (inputValue && inputValue.length >= minSearch) {\n            if (waitTime > 0) {\n              if (timeoutId) {\n                $timeout.cancel(timeoutId);//cancel previous timeout\n              }\n              timeoutId = $timeout(function () {\n                getMatchesAsync(inputValue);\n              }, waitTime);\n            } else {\n              getMatchesAsync(inputValue);\n            }\n          }\n        }\n\n        return isEditable ? inputValue : undefined;\n      });\n\n      modelCtrl.$render = function () {\n        var locals = {};\n        locals[parserResult.itemName] = selected || modelCtrl.$viewValue;\n        element.val(parserResult.viewMapper(scope, locals) || modelCtrl.$viewValue);\n        selected = undefined;\n      };\n\n      scope.select = function (activeIdx) {\n        //called from within the $digest() cycle\n        var locals = {};\n        var model, item;\n        locals[parserResult.itemName] = item = selected = scope.matches[activeIdx].model;\n\n        model = parserResult.modelMapper(scope, locals);\n        modelCtrl.$setViewValue(model);\n        modelCtrl.$render();\n        onSelectCallback(scope, {\n          $item: item,\n          $model: model,\n          $label: parserResult.viewMapper(scope, locals)\n        });\n\n        element[0].focus();\n      };\n\n      //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n      element.bind('keydown', function (evt) {\n\n        //typeahead is open and an \"interesting\" key was pressed\n        if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n          return;\n        }\n\n        evt.preventDefault();\n\n        if (evt.which === 40) {\n          scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n          scope.$digest();\n\n        } else if (evt.which === 38) {\n          scope.activeIdx = (scope.activeIdx ? scope.activeIdx : scope.matches.length) - 1;\n          scope.$digest();\n\n        } else if (evt.which === 13 || evt.which === 9) {\n          scope.$apply(function () {\n            scope.select(scope.activeIdx);\n          });\n\n        } else if (evt.which === 27) {\n          evt.stopPropagation();\n\n          resetMatches();\n          scope.$digest();\n        }\n      });\n\n      $document.bind('click', function(){\n        resetMatches();\n        scope.$digest();\n      });\n\n      element.after($compile(popUpEl)(scope));\n    }\n  };\n\n}])\n\n  .directive('typeaheadPopup', function () {\n    return {\n      restrict:'E',\n      scope:{\n        matches:'=',\n        query:'=',\n        active:'=',\n        position:'=',\n        select:'&'\n      },\n      replace:true,\n      templateUrl:'template/typeahead/typeahead.html',\n      link:function (scope, element, attrs) {\n\n        scope.isOpen = function () {\n          return scope.matches.length > 0;\n        };\n\n        scope.isActive = function (matchIdx) {\n          return scope.active == matchIdx;\n        };\n\n        scope.selectActive = function (matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function (activeIdx) {\n          scope.select({activeIdx:activeIdx});\n        };\n      }\n    };\n  })\n\n  .filter('typeaheadHighlight', function() {\n\n    function escapeRegexp(queryToEscape) {\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n    }\n\n    return function(matchItem, query) {\n      return query ? matchItem.replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : query;\n    };\n  });\n\nangular.module(\"template/accordion/accordion-group.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion-group.html\",\n    \"<div class=\\\"accordion-group\\\">\\n\" +\n    \"  <div class=\\\"accordion-heading\\\" ><a class=\\\"accordion-toggle\\\" ng-click=\\\"isOpen = !isOpen\\\" accordion-transclude=\\\"heading\\\">{{heading}}</a></div>\\n\" +\n    \"  <div class=\\\"accordion-body\\\" collapse=\\\"!isOpen\\\">\\n\" +\n    \"    <div class=\\\"accordion-inner\\\" ng-transclude></div>  </div>\\n\" +\n    \"</div>\");\n}]);\n\nangular.module(\"template/accordion/accordion.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion.html\",\n    \"<div class=\\\"accordion\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/alert/alert.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/alert/alert.html\",\n    \"<div class='alert' ng-class='type && \\\"alert-\\\" + type'>\\n\" +\n    \"    <button ng-show='closeable' type='button' class='close' ng-click='close()'>&times;</button>\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/carousel.html\",\n    \"<div ng-mouseenter=\\\"pause()\\\" ng-mouseleave=\\\"play()\\\" class=\\\"carousel\\\">\\n\" +\n    \"    <ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides().length > 1\\\">\\n\" +\n    \"        <li ng-repeat=\\\"slide in slides()\\\" ng-class=\\\"{active: isActive(slide)}\\\" ng-click=\\\"select(slide)\\\"></li>\\n\" +\n    \"    </ol>\\n\" +\n    \"    <div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"    <a ng-click=\\\"prev()\\\" class=\\\"carousel-control left\\\" ng-show=\\\"slides().length > 1\\\">&lsaquo;</a>\\n\" +\n    \"    <a ng-click=\\\"next()\\\" class=\\\"carousel-control right\\\" ng-show=\\\"slides().length > 1\\\">&rsaquo;</a>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/slide.html\",\n    \"<div ng-class=\\\"{\\n\" +\n    \"    'active': leaving || (active && !entering),\\n\" +\n    \"    'prev': (next || active) && direction=='prev',\\n\" +\n    \"    'next': (next || active) && direction=='next',\\n\" +\n    \"    'right': direction=='prev',\\n\" +\n    \"    'left': direction=='next'\\n\" +\n    \"  }\\\" class=\\\"item\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/datepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/datepicker.html\",\n    \"<table class=\\\"well well-large\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr class=\\\"text-center\\\">\\n\" +\n    \"      <th><button class=\\\"btn pull-left\\\" ng-click=\\\"move(-1)\\\"><i class=\\\"icon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th colspan=\\\"{{rows[0].length - 2 + showWeekNumbers}}\\\"><button class=\\\"btn btn-block\\\" ng-click=\\\"toggleMode()\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button class=\\\"btn pull-right\\\" ng-click=\\\"move(1)\\\"><i class=\\\"icon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr class=\\\"text-center\\\" ng-show=\\\"labels.length > 0\\\">\\n\" +\n    \"      <th ng-show=\\\"showWeekNumbers\\\">#</th>\\n\" +\n    \"      <th ng-repeat=\\\"label in labels\\\">{{label}}</th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows\\\">\\n\" +\n    \"      <td ng-show=\\\"showWeekNumbers\\\" class=\\\"text-center\\\"><em>{{ getWeekNumber(row) }}</em></td>\\n\" +\n    \"      <td ng-repeat=\\\"dt in row\\\" class=\\\"text-center\\\">\\n\" +\n    \"        <button style=\\\"width:100%;\\\" class=\\\"btn\\\" ng-class=\\\"{'btn-info': dt.isSelected}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\"><span ng-class=\\\"{muted: ! dt.isCurrent}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/dialog/message.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/dialog/message.html\",\n    \"<div class=\\\"modal-header\\\">\\n\" +\n    \"\t<h3>{{ title }}</h3>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-body\\\">\\n\" +\n    \"\t<p>{{ message }}</p>\\n\" +\n    \"</div>\\n\" +\n    \"<div class=\\\"modal-footer\\\">\\n\" +\n    \"\t<button ng-repeat=\\\"btn in buttons\\\" ng-click=\\\"close(btn.result)\\\" class=\\\"btn\\\" ng-class=\\\"btn.cssClass\\\">{{ btn.label }}</button>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/modal/backdrop.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/backdrop.html\",\n    \"<div class=\\\"modal-backdrop\\\"></div>\");\n}]);\n\nangular.module(\"template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/window.html\",\n    \"<div class=\\\"modal in\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/pagination/pager.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pager.html\",\n    \"<div class=\\\"pager\\\">\\n\" +\n    \"  <ul>\\n\" +\n    \"    <li ng-repeat=\\\"page in pages\\\" ng-class=\\\"{disabled: page.disabled, previous: page.previous, next: page.next}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n\" +\n    \"  </ul>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/pagination/pagination.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pagination.html\",\n    \"<div class=\\\"pagination\\\"><ul>\\n\" +\n    \"  <li ng-repeat=\\\"page in pages\\\" ng-class=\\\"{active: page.active, disabled: page.disabled}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n\" +\n    \"  </ul>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-html-unsafe-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\",\n    \"<div class=\\\"tooltip {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind-html-unsafe=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-popup.html\",\n    \"<div class=\\\"tooltip {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/popover/popover.html\",\n    \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"popover-inner\\\">\\n\" +\n    \"      <h3 class=\\\"popover-title\\\" ng-bind=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n    \"      <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/progressbar/bar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/bar.html\",\n    \"<div class=\\\"bar\\\" ng-class='type && \\\"bar-\\\" + type'></div>\");\n}]);\n\nangular.module(\"template/progressbar/progress.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/progress.html\",\n    \"<div class=\\\"progress\\\"><progressbar ng-repeat=\\\"bar in bars\\\" width=\\\"bar.to\\\" old=\\\"bar.from\\\" animate=\\\"bar.animate\\\" type=\\\"bar.type\\\"></progressbar></div>\");\n}]);\n\nangular.module(\"template/rating/rating.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/rating/rating.html\",\n    \"<span ng-mouseleave=\\\"reset()\\\">\\n\" +\n    \"\t<i ng-repeat=\\\"number in range\\\" ng-mouseenter=\\\"enter(number)\\\" ng-click=\\\"rate(number)\\\" ng-class=\\\"{'icon-star': number <= val, 'icon-star-empty': number > val}\\\"></i>\\n\" +\n    \"</span>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/pane.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/pane.html\",\n    \"<div class=\\\"tab-pane\\\" ng-class=\\\"{active: selected}\\\" ng-show=\\\"selected\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tab.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tab.html\",\n    \"<li ng-class=\\\"{active: active, disabled: disabled}\\\">\\n\" +\n    \"  <a ng-click=\\\"select()\\\" tab-heading-transclude>{{heading}}</a>\\n\" +\n    \"</li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tabs.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tabs.html\",\n    \"<div class=\\\"tabbable\\\">\\n\" +\n    \"  <ul class=\\\"nav nav-tabs\\\">\\n\" +\n    \"    <li ng-repeat=\\\"pane in panes\\\" ng-class=\\\"{active:pane.selected}\\\">\\n\" +\n    \"      <a ng-click=\\\"select(pane)\\\">{{pane.heading}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"  </ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\" ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tabset.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tabset.html\",\n    \"\\n\" +\n    \"<div class=\\\"tabbable\\\">\\n\" +\n    \"  <ul class=\\\"nav {{type && 'nav-' + type}}\\\" ng-class=\\\"{'nav-stacked': vertical}\\\" ng-transclude>\\n\" +\n    \"  </ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\">\\n\" +\n    \"    <div class=\\\"tab-pane\\\" \\n\" +\n    \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n    \"         ng-class=\\\"{active: tab.active}\\\"\\n\" +\n    \"         tab-content-transclude=\\\"tab\\\" tt=\\\"tab\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/timepicker/timepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/timepicker/timepicker.html\",\n    \"<table class=\\\"form-inline\\\">\\n\" +\n    \"\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t<td><a ng-click=\\\"incrementHours()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-up\\\"></i></a></td>\\n\" +\n    \"\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t<td><a ng-click=\\\"incrementMinutes()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-up\\\"></i></a></td>\\n\" +\n    \"\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t</tr>\\n\" +\n    \"\t<tr>\\n\" +\n    \"\t\t<td class=\\\"control-group\\\" ng-class=\\\"{'error': !validHours}\\\"><input type=\\\"text\\\" ng-model=\\\"hours\\\" ng-change=\\\"updateHours()\\\" class=\\\"span1 text-center\\\" ng-mousewheel=\\\"incrementHours()\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\" /></td>\\n\" +\n    \"\t\t<td>:</td>\\n\" +\n    \"\t\t<td class=\\\"control-group\\\" ng-class=\\\"{'error': !validMinutes}\\\"><input type=\\\"text\\\" ng-model=\\\"minutes\\\" ng-change=\\\"updateMinutes()\\\" class=\\\"span1 text-center\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\"></td>\\n\" +\n    \"\t\t<td ng-show=\\\"showMeridian\\\"><button ng-click=\\\"toggleMeridian()\\\" class=\\\"btn text-center\\\">{{meridian}}</button></td>\\n\" +\n    \"\t</tr>\\n\" +\n    \"\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t<td><a ng-click=\\\"decrementHours()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-down\\\"></i></a></td>\\n\" +\n    \"\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t<td><a ng-click=\\\"decrementMinutes()\\\" class=\\\"btn btn-link\\\"><i class=\\\"icon-chevron-down\\\"></i></a></td>\\n\" +\n    \"\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t</tr>\\n\" +\n    \"</table>\");\n}]);\n\nangular.module(\"template/typeahead/typeahead.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/typeahead/typeahead.html\",\n    \"<ul class=\\\"typeahead dropdown-menu\\\" ng-style=\\\"{display: isOpen()&&'block' || 'none', top: position.top+'px', left: position.left+'px'}\\\">\\n\" +\n    \"    <li ng-repeat=\\\"match in matches\\\" ng-class=\\\"{active: isActive($index) }\\\" ng-mouseenter=\\\"selectActive($index)\\\">\\n\" +\n    \"        <a tabindex=\\\"-1\\\" ng-click=\\\"selectMatch($index)\\\" ng-bind-html-unsafe=\\\"match.label | typeaheadHighlight:query\\\"></a>\\n\" +\n    \"    </li>\\n\" +\n    \"</ul>\");\n}]);\n","/**\n * @license AngularJS v1.0.7\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name ngSanitize\n * @description\n */\n\n/*\n * HTML Parser By Misko Hevery (misko@hevery.com)\n * based on:  HTML Parser By John Resig (ejohn.org)\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n *\n * // Use like so:\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n */\n\n\n/**\n * @ngdoc service\n * @name ngSanitize.$sanitize\n * @function\n *\n * @description\n *   The input is sanitized by parsing the html into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string, however, since our parser is more strict than a typical browser\n *   parser, it's possible that some obscure input, which would be recognized as valid HTML by a\n *   browser, won't make it through the sanitizer.\n *\n * @param {string} html Html input.\n * @returns {string} Sanitized html.\n *\n * @example\n   <doc:example module=\"ngSanitize\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.snippet =\n             '<p style=\"color:blue\">an html\\n' +\n             '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n             'snippet</p>';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n          Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n           <table>\n             <tr>\n               <td>Filter</td>\n               <td>Source</td>\n               <td>Rendered</td>\n             </tr>\n             <tr id=\"html-filter\">\n               <td>html filter</td>\n               <td>\n                 <pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre>\n               </td>\n               <td>\n                 <div ng-bind-html=\"snippet\"></div>\n               </td>\n             </tr>\n             <tr id=\"escaped-html\">\n               <td>no filter</td>\n               <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n               <td><div ng-bind=\"snippet\"></div></td>\n             </tr>\n             <tr id=\"html-unsafe-filter\">\n               <td>unsafe html filter</td>\n               <td><pre>&lt;div ng-bind-html-unsafe=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n               <td><div ng-bind-html-unsafe=\"snippet\"></div></td>\n             </tr>\n           </table>\n         </div>\n     </doc:source>\n     <doc:scenario>\n       it('should sanitize the html snippet ', function() {\n         expect(using('#html-filter').element('div').html()).\n           toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n       });\n\n       it('should escape snippet without any filter', function() {\n         expect(using('#escaped-html').element('div').html()).\n           toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n                \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n                \"snippet&lt;/p&gt;\");\n       });\n\n       it('should inline raw snippet if filtered as unsafe', function() {\n         expect(using('#html-unsafe-filter').element(\"div\").html()).\n           toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n                \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n                \"snippet</p>\");\n       });\n\n       it('should update', function() {\n         input('snippet').enter('new <b>text</b>');\n         expect(using('#html-filter').binding('snippet')).toBe('new <b>text</b>');\n         expect(using('#escaped-html').element('div').html()).toBe(\"new &lt;b&gt;text&lt;/b&gt;\");\n         expect(using('#html-unsafe-filter').binding(\"snippet\")).toBe('new <b>text</b>');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar $sanitize = function(html) {\n  var buf = [];\n    htmlParser(html, htmlSanitizeWriter(buf));\n    return buf.join('');\n};\n\n\n// Regular Expressions for parsing tags and attributes\nvar START_TAG_REGEXP = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/,\n  END_TAG_REGEXP = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/,\n  ATTR_REGEXP = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g,\n  BEGIN_TAG_REGEXP = /^</,\n  BEGING_END_TAGE_REGEXP = /^<\\s*\\//,\n  COMMENT_REGEXP = /<!--(.*?)-->/g,\n  CDATA_REGEXP = /<!\\[CDATA\\[(.*?)]]>/g,\n  URI_REGEXP = /^((ftp|https?):\\/\\/|mailto:|#)/,\n  NON_ALPHANUMERIC_REGEXP = /([^\\#-~| |!])/g; // Match everything outside of normal chars and \" (quote character)\n\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar voidElements = makeMap(\"area,br,col,hr,img,wbr\");\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar optionalEndTagBlockElements = makeMap(\"colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr\"),\n    optionalEndTagInlineElements = makeMap(\"rp,rt\"),\n    optionalEndTagElements = angular.extend({}, optionalEndTagInlineElements, optionalEndTagBlockElements);\n\n// Safe Block Elements - HTML5\nvar blockElements = angular.extend({}, optionalEndTagBlockElements, makeMap(\"address,article,aside,\" +\n        \"blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,\" +\n        \"header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul\"));\n\n// Inline Elements - HTML5\nvar inlineElements = angular.extend({}, optionalEndTagInlineElements, makeMap(\"a,abbr,acronym,b,bdi,bdo,\" +\n        \"big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,\" +\n        \"span,strike,strong,sub,sup,time,tt,u,var\"));\n\n\n// Special Elements (can contain anything)\nvar specialElements = makeMap(\"script,style\");\n\nvar validElements = angular.extend({}, voidElements, blockElements, inlineElements, optionalEndTagElements);\n\n//Attributes that have href and hence need to be sanitized\nvar uriAttrs = makeMap(\"background,cite,href,longdesc,src,usemap\");\nvar validAttrs = angular.extend({}, uriAttrs, makeMap(\n    'abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,'+\n    'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,'+\n    'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,'+\n    'scope,scrolling,shape,span,start,summary,target,title,type,'+\n    'valign,value,vspace,width'));\n\nfunction makeMap(str) {\n  var obj = {}, items = str.split(','), i;\n  for (i = 0; i < items.length; i++) obj[items[i]] = true;\n  return obj;\n}\n\n\n/**\n * @example\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * @param {string} html string\n * @param {object} handler\n */\nfunction htmlParser( html, handler ) {\n  var index, chars, match, stack = [], last = html;\n  stack.last = function() { return stack[ stack.length - 1 ]; };\n\n  while ( html ) {\n    chars = true;\n\n    // Make sure we're not in a script or style element\n    if ( !stack.last() || !specialElements[ stack.last() ] ) {\n\n      // Comment\n      if ( html.indexOf(\"<!--\") === 0 ) {\n        index = html.indexOf(\"-->\");\n\n        if ( index >= 0 ) {\n          if (handler.comment) handler.comment( html.substring( 4, index ) );\n          html = html.substring( index + 3 );\n          chars = false;\n        }\n\n      // end tag\n      } else if ( BEGING_END_TAGE_REGEXP.test(html) ) {\n        match = html.match( END_TAG_REGEXP );\n\n        if ( match ) {\n          html = html.substring( match[0].length );\n          match[0].replace( END_TAG_REGEXP, parseEndTag );\n          chars = false;\n        }\n\n      // start tag\n      } else if ( BEGIN_TAG_REGEXP.test(html) ) {\n        match = html.match( START_TAG_REGEXP );\n\n        if ( match ) {\n          html = html.substring( match[0].length );\n          match[0].replace( START_TAG_REGEXP, parseStartTag );\n          chars = false;\n        }\n      }\n\n      if ( chars ) {\n        index = html.indexOf(\"<\");\n\n        var text = index < 0 ? html : html.substring( 0, index );\n        html = index < 0 ? \"\" : html.substring( index );\n\n        if (handler.chars) handler.chars( decodeEntities(text) );\n      }\n\n    } else {\n      html = html.replace(new RegExp(\"(.*)<\\\\s*\\\\/\\\\s*\" + stack.last() + \"[^>]*>\", 'i'), function(all, text){\n        text = text.\n          replace(COMMENT_REGEXP, \"$1\").\n          replace(CDATA_REGEXP, \"$1\");\n\n        if (handler.chars) handler.chars( decodeEntities(text) );\n\n        return \"\";\n      });\n\n      parseEndTag( \"\", stack.last() );\n    }\n\n    if ( html == last ) {\n      throw \"Parse Error: \" + html;\n    }\n    last = html;\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function parseStartTag( tag, tagName, rest, unary ) {\n    tagName = angular.lowercase(tagName);\n    if ( blockElements[ tagName ] ) {\n      while ( stack.last() && inlineElements[ stack.last() ] ) {\n        parseEndTag( \"\", stack.last() );\n      }\n    }\n\n    if ( optionalEndTagElements[ tagName ] && stack.last() == tagName ) {\n      parseEndTag( \"\", tagName );\n    }\n\n    unary = voidElements[ tagName ] || !!unary;\n\n    if ( !unary )\n      stack.push( tagName );\n\n    var attrs = {};\n\n    rest.replace(ATTR_REGEXP, function(match, name, doubleQuotedValue, singleQoutedValue, unqoutedValue) {\n      var value = doubleQuotedValue\n        || singleQoutedValue\n        || unqoutedValue\n        || '';\n\n      attrs[name] = decodeEntities(value);\n    });\n    if (handler.start) handler.start( tagName, attrs, unary );\n  }\n\n  function parseEndTag( tag, tagName ) {\n    var pos = 0, i;\n    tagName = angular.lowercase(tagName);\n    if ( tagName )\n      // Find the closest opened tag of the same type\n      for ( pos = stack.length - 1; pos >= 0; pos-- )\n        if ( stack[ pos ] == tagName )\n          break;\n\n    if ( pos >= 0 ) {\n      // Close all the open elements, up the stack\n      for ( i = stack.length - 1; i >= pos; i-- )\n        if (handler.end) handler.end( stack[ i ] );\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n    }\n  }\n}\n\n/**\n * decodes all entities into regular string\n * @param value\n * @returns {string} A string with decoded entities.\n */\nvar hiddenPre=document.createElement(\"pre\");\nfunction decodeEntities(value) {\n  hiddenPre.innerHTML=value.replace(/</g,\"&lt;\");\n  return hiddenPre.innerText || hiddenPre.textContent || '';\n}\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n * @returns escaped text\n */\nfunction encodeEntities(value) {\n  return value.\n    replace(/&/g, '&amp;').\n    replace(NON_ALPHANUMERIC_REGEXP, function(value){\n      return '&#' + value.charCodeAt(0) + ';';\n    }).\n    replace(/</g, '&lt;').\n    replace(/>/g, '&gt;');\n}\n\n/**\n * create an HTML/XML writer which writes to buffer\n * @param {Array} buf use buf.jain('') to get out sanitized html string\n * @returns {object} in the form of {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * }\n */\nfunction htmlSanitizeWriter(buf){\n  var ignore = false;\n  var out = angular.bind(buf, buf.push);\n  return {\n    start: function(tag, attrs, unary){\n      tag = angular.lowercase(tag);\n      if (!ignore && specialElements[tag]) {\n        ignore = tag;\n      }\n      if (!ignore && validElements[tag] == true) {\n        out('<');\n        out(tag);\n        angular.forEach(attrs, function(value, key){\n          var lkey=angular.lowercase(key);\n          if (validAttrs[lkey]==true && (uriAttrs[lkey]!==true || value.match(URI_REGEXP))) {\n            out(' ');\n            out(key);\n            out('=\"');\n            out(encodeEntities(value));\n            out('\"');\n          }\n        });\n        out(unary ? '/>' : '>');\n      }\n    },\n    end: function(tag){\n        tag = angular.lowercase(tag);\n        if (!ignore && validElements[tag] == true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        if (tag == ignore) {\n          ignore = false;\n        }\n      },\n    chars: function(chars){\n        if (!ignore) {\n          out(encodeEntities(chars));\n        }\n      }\n  };\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', []).value('$sanitize', $sanitize);\n\n/**\n * @ngdoc directive\n * @name ngSanitize.directive:ngBindHtml\n *\n * @description\n * Creates a binding that will sanitize the result of evaluating the `expression` with the\n * {@link ngSanitize.$sanitize $sanitize} service and innerHTML the result into the current element.\n *\n * See {@link ngSanitize.$sanitize $sanitize} docs for examples.\n *\n * @element ANY\n * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\n */\nangular.module('ngSanitize').directive('ngBindHtml', ['$sanitize', function($sanitize) {\n  return function(scope, element, attr) {\n    element.addClass('ng-binding').data('$binding', attr.ngBindHtml);\n    scope.$watch(attr.ngBindHtml, function ngBindHtmlWatchAction(value) {\n      value = $sanitize(value);\n      element.html(value || '');\n    });\n  };\n}]);\n\n/**\n * @ngdoc filter\n * @name ngSanitize.filter:linky\n * @function\n *\n * @description\n *   Finds links in text input and turns them into html links. Supports http/https/ftp/mailto and\n *   plain email address links.\n *\n * @param {string} text Input text.\n * @returns {string} Html-linkified text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <doc:example module=\"ngSanitize\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n'+\n             'http://angularjs.org/,\\n'+\n             'mailto:us@somewhere.org,\\n'+\n             'another@somewhere.org,\\n'+\n             'and one more: ftp://127.0.0.1/.';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Filter</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </doc:source>\n     <doc:scenario>\n       it('should linkify the snippet with urls', function() {\n         expect(using('#linky-filter').binding('snippet | linky')).\n           toBe('Pretty text with some links:&#10;' +\n                '<a href=\"http://angularjs.org/\">http://angularjs.org/</a>,&#10;' +\n                '<a href=\"mailto:us@somewhere.org\">us@somewhere.org</a>,&#10;' +\n                '<a href=\"mailto:another@somewhere.org\">another@somewhere.org</a>,&#10;' +\n                'and one more: <a href=\"ftp://127.0.0.1/\">ftp://127.0.0.1/</a>.');\n       });\n\n       it ('should not linkify snippet without the linky filter', function() {\n         expect(using('#escaped-html').binding('snippet')).\n           toBe(\"Pretty text with some links:\\n\" +\n                \"http://angularjs.org/,\\n\" +\n                \"mailto:us@somewhere.org,\\n\" +\n                \"another@somewhere.org,\\n\" +\n                \"and one more: ftp://127.0.0.1/.\");\n       });\n\n       it('should update', function() {\n         input('snippet').enter('new http://link.');\n         expect(using('#linky-filter').binding('snippet | linky')).\n           toBe('new <a href=\"http://link\">http://link</a>.');\n         expect(using('#escaped-html').binding('snippet')).toBe('new http://link.');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nangular.module('ngSanitize').filter('linky', function() {\n  var LINKY_URL_REGEXP = /((ftp|https?):\\/\\/|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s\\.\\;\\,\\(\\)\\{\\}\\<\\>]/,\n      MAILTO_REGEXP = /^mailto:/;\n\n  return function(text) {\n    if (!text) return text;\n    var match;\n    var raw = text;\n    var html = [];\n    // TODO(vojta): use $sanitize instead\n    var writer = htmlSanitizeWriter(html);\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/mailto then assume mailto\n      if (match[2] == match[3]) url = 'mailto:' + url;\n      i = match.index;\n      writer.chars(raw.substr(0, i));\n      writer.start('a', {href:url});\n      writer.chars(match[0].replace(MAILTO_REGEXP, ''));\n      writer.end('a');\n      raw = raw.substring(i + match[0].length);\n    }\n    writer.chars(raw);\n    return html.join('');\n  };\n});\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.0.7\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name ngResource\n * @description\n */\n\n/**\n * @ngdoc object\n * @name ngResource.$resource\n * @requires $http\n *\n * @description\n * A factory which creates a resource object that lets you interact with\n * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.\n *\n * The returned resource object has action methods which provide high-level behaviors without\n * the need to interact with the low level {@link ng.$http $http} service.\n *\n * # Installation\n * To use $resource make sure you have included the `angular-resource.js` that comes in Angular \n * package. You can also find this file on Google CDN, bower as well as at\n * {@link http://code.angularjs.org/ code.angularjs.org}.\n *\n * Finally load the module in your application:\n *\n *        angular.module('app', ['ngResource']);\n *\n * and you are ready to get started!\n *\n * @param {string} url A parameterized URL template with parameters prefixed by `:` as in\n *   `/user/:username`. If you are using a URL with a port number (e.g. \n *   `http://example.com:8080/api`), you'll need to escape the colon character before the port\n *   number, like this: `$resource('http://example.com\\\\:8080/api')`.\n *\n * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in\n *   `actions` methods.\n *\n *   Each key value in the parameter object is first bound to url template if present and then any\n *   excess keys are appended to the url search query after the `?`.\n *\n *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in\n *   URL `/path/greet?salutation=Hello`.\n *\n *   If the parameter value is prefixed with `@` then the value of that parameter is extracted from\n *   the data object (useful for non-GET operations).\n *\n * @param {Object.<Object>=} actions Hash with declaration of custom action that should extend the\n *   default set of resource actions. The declaration should be created in the following format:\n *\n *       {action1: {method:?, params:?, isArray:?},\n *        action2: {method:?, params:?, isArray:?},\n *        ...}\n *\n *   Where:\n *\n *   - `action` – {string} – The name of action. This name becomes the name of the method on your\n *     resource object.\n *   - `method` – {string} – HTTP request method. Valid methods are: `GET`, `POST`, `PUT`, `DELETE`,\n *     and `JSONP`\n *   - `params` – {object=} – Optional set of pre-bound parameters for this action.\n *   - isArray – {boolean=} – If true then the returned object for this action is an array, see\n *     `returns` section.\n *\n * @returns {Object} A resource \"class\" object with methods for the default set of resource actions\n *   optionally extended with custom `actions`. The default set contains these actions:\n *\n *       { 'get':    {method:'GET'},\n *         'save':   {method:'POST'},\n *         'query':  {method:'GET', isArray:true},\n *         'remove': {method:'DELETE'},\n *         'delete': {method:'DELETE'} };\n *\n *   Calling these methods invoke an {@link ng.$http} with the specified http method,\n *   destination and parameters. When the data is returned from the server then the object is an\n *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it\n *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,\n *   read, update, delete) on server-side data like this:\n *   <pre>\n        var User = $resource('/user/:userId', {userId:'@id'});\n        var user = User.get({userId:123}, function() {\n          user.abc = true;\n          user.$save();\n        });\n     </pre>\n *\n *   It is important to realize that invoking a $resource object method immediately returns an\n *   empty reference (object or array depending on `isArray`). Once the data is returned from the\n *   server the existing reference is populated with the actual data. This is a useful trick since\n *   usually the resource is assigned to a model which is then rendered by the view. Having an empty\n *   object results in no rendering, once the data arrives from the server then the object is\n *   populated with the data and the view automatically re-renders itself showing the new data. This\n *   means that in most case one never has to write a callback function for the action methods.\n *\n *   The action methods on the class object or instance object can be invoked with the following\n *   parameters:\n *\n *   - HTTP GET \"class\" actions: `Resource.action([parameters], [success], [error])`\n *   - non-GET \"class\" actions: `Resource.action([parameters], postData, [success], [error])`\n *   - non-GET instance actions:  `instance.$action([parameters], [success], [error])`\n *\n *\n * @example\n *\n * # Credit card resource\n *\n * <pre>\n     // Define CreditCard class\n     var CreditCard = $resource('/user/:userId/card/:cardId',\n      {userId:123, cardId:'@id'}, {\n       charge: {method:'POST', params:{charge:true}}\n      });\n\n     // We can retrieve a collection from the server\n     var cards = CreditCard.query(function() {\n       // GET: /user/123/card\n       // server returns: [ {id:456, number:'1234', name:'Smith'} ];\n\n       var card = cards[0];\n       // each item is an instance of CreditCard\n       expect(card instanceof CreditCard).toEqual(true);\n       card.name = \"J. Smith\";\n       // non GET methods are mapped onto the instances\n       card.$save();\n       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}\n       // server returns: {id:456, number:'1234', name: 'J. Smith'};\n\n       // our custom method is mapped as well.\n       card.$charge({amount:9.99});\n       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}\n     });\n\n     // we can create an instance as well\n     var newCard = new CreditCard({number:'0123'});\n     newCard.name = \"Mike Smith\";\n     newCard.$save();\n     // POST: /user/123/card {number:'0123', name:'Mike Smith'}\n     // server returns: {id:789, number:'01234', name: 'Mike Smith'};\n     expect(newCard.id).toEqual(789);\n * </pre>\n *\n * The object returned from this function execution is a resource \"class\" which has \"static\" method\n * for each action in the definition.\n *\n * Calling these methods invoke `$http` on the `url` template with the given `method` and `params`.\n * When the data is returned from the server then the object is an instance of the resource type and\n * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD\n * operations (create, read, update, delete) on server-side data.\n\n   <pre>\n     var User = $resource('/user/:userId', {userId:'@id'});\n     var user = User.get({userId:123}, function() {\n       user.abc = true;\n       user.$save();\n     });\n   </pre>\n *\n * It's worth noting that the success callback for `get`, `query` and other method gets passed\n * in the response that came from the server as well as $http header getter function, so one\n * could rewrite the above example and get access to http headers as:\n *\n   <pre>\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123}, function(u, getResponseHeaders){\n       u.abc = true;\n       u.$save(function(u, putResponseHeaders) {\n         //u => saved user object\n         //putResponseHeaders => $http header getter\n       });\n     });\n   </pre>\n\n * # Buzz client\n\n   Let's look at what a buzz client created with the `$resource` service looks like:\n    <doc:example>\n      <doc:source jsfiddle=\"false\">\n       <script>\n         function BuzzController($resource) {\n           this.userId = 'googlebuzz';\n           this.Activity = $resource(\n             'https://www.googleapis.com/buzz/v1/activities/:userId/:visibility/:activityId/:comments',\n             {alt:'json', callback:'JSON_CALLBACK'},\n             {get:{method:'JSONP', params:{visibility:'@self'}}, replies: {method:'JSONP', params:{visibility:'@self', comments:'@comments'}}}\n           );\n         }\n\n         BuzzController.prototype = {\n           fetch: function() {\n             this.activities = this.Activity.get({userId:this.userId});\n           },\n           expandReplies: function(activity) {\n             activity.replies = this.Activity.replies({userId:this.userId, activityId:activity.id});\n           }\n         };\n         BuzzController.$inject = ['$resource'];\n       </script>\n\n       <div ng-controller=\"BuzzController\">\n         <input ng-model=\"userId\"/>\n         <button ng-click=\"fetch()\">fetch</button>\n         <hr/>\n         <div ng-repeat=\"item in activities.data.items\">\n           <h1 style=\"font-size: 15px;\">\n             <img src=\"{{item.actor.thumbnailUrl}}\" style=\"max-height:30px;max-width:30px;\"/>\n             <a href=\"{{item.actor.profileUrl}}\">{{item.actor.name}}</a>\n             <a href ng-click=\"expandReplies(item)\" style=\"float: right;\">Expand replies: {{item.links.replies[0].count}}</a>\n           </h1>\n           {{item.object.content | html}}\n           <div ng-repeat=\"reply in item.replies.data.items\" style=\"margin-left: 20px;\">\n             <img src=\"{{reply.actor.thumbnailUrl}}\" style=\"max-height:30px;max-width:30px;\"/>\n             <a href=\"{{reply.actor.profileUrl}}\">{{reply.actor.name}}</a>: {{reply.content | html}}\n           </div>\n         </div>\n       </div>\n      </doc:source>\n      <doc:scenario>\n      </doc:scenario>\n    </doc:example>\n */\nangular.module('ngResource', ['ng']).\n  factory('$resource', ['$http', '$parse', function($http, $parse) {\n    var DEFAULT_ACTIONS = {\n      'get':    {method:'GET'},\n      'save':   {method:'POST'},\n      'query':  {method:'GET', isArray:true},\n      'remove': {method:'DELETE'},\n      'delete': {method:'DELETE'}\n    };\n    var noop = angular.noop,\n        forEach = angular.forEach,\n        extend = angular.extend,\n        copy = angular.copy,\n        isFunction = angular.isFunction,\n        getter = function(obj, path) {\n          return $parse(path)(obj);\n        };\n\n    /**\n     * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n     * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n     * segments:\n     *    segment       = *pchar\n     *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     *    pct-encoded   = \"%\" HEXDIG HEXDIG\n     *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n     *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    function encodeUriSegment(val) {\n      return encodeUriQuery(val, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n\n\n    /**\n     * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n     * method becuase encodeURIComponent is too agressive and encodes stuff that doesn't have to be\n     * encoded per http://tools.ietf.org/html/rfc3986:\n     *    query       = *( pchar / \"/\" / \"?\" )\n     *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     *    pct-encoded   = \"%\" HEXDIG HEXDIG\n     *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n     *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    function encodeUriQuery(val, pctEncodeSpaces) {\n      return encodeURIComponent(val).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    }\n\n    function Route(template, defaults) {\n      this.template = template = template + '#';\n      this.defaults = defaults || {};\n      var urlParams = this.urlParams = {};\n      forEach(template.split(/\\W/), function(param){\n        if (param && (new RegExp(\"(^|[^\\\\\\\\]):\" + param + \"\\\\W\").test(template))) {\n          urlParams[param] = true;\n        }\n      });\n      this.template = template.replace(/\\\\:/g, ':');\n    }\n\n    Route.prototype = {\n      url: function(params) {\n        var self = this,\n            url = this.template,\n            val,\n            encodedVal;\n\n        params = params || {};\n        forEach(this.urlParams, function(_, urlParam){\n          val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];\n          if (angular.isDefined(val) && val !== null) {\n            encodedVal = encodeUriSegment(val);\n            url = url.replace(new RegExp(\":\" + urlParam + \"(\\\\W)\", \"g\"), encodedVal + \"$1\");\n          } else {\n            url = url.replace(new RegExp(\"(\\/?):\" + urlParam + \"(\\\\W)\", \"g\"), function(match,\n                leadingSlashes, tail) {\n              if (tail.charAt(0) == '/') {\n                return tail;\n              } else {\n                return leadingSlashes + tail;\n              }\n            });\n          }\n        });\n        url = url.replace(/\\/?#$/, '');\n        var query = [];\n        forEach(params, function(value, key){\n          if (!self.urlParams[key]) {\n            query.push(encodeUriQuery(key) + '=' + encodeUriQuery(value));\n          }\n        });\n        query.sort();\n        url = url.replace(/\\/*$/, '');\n        return url + (query.length ? '?' + query.join('&') : '');\n      }\n    };\n\n\n    function ResourceFactory(url, paramDefaults, actions) {\n      var route = new Route(url);\n\n      actions = extend({}, DEFAULT_ACTIONS, actions);\n\n      function extractParams(data, actionParams){\n        var ids = {};\n        actionParams = extend({}, paramDefaults, actionParams);\n        forEach(actionParams, function(value, key){\n          ids[key] = value.charAt && value.charAt(0) == '@' ? getter(data, value.substr(1)) : value;\n        });\n        return ids;\n      }\n\n      function Resource(value){\n        copy(value || {}, this);\n      }\n\n      forEach(actions, function(action, name) {\n        action.method = angular.uppercase(action.method);\n        var hasBody = action.method == 'POST' || action.method == 'PUT' || action.method == 'PATCH';\n        Resource[name] = function(a1, a2, a3, a4) {\n          var params = {};\n          var data;\n          var success = noop;\n          var error = null;\n          switch(arguments.length) {\n          case 4:\n            error = a4;\n            success = a3;\n            //fallthrough\n          case 3:\n          case 2:\n            if (isFunction(a2)) {\n              if (isFunction(a1)) {\n                success = a1;\n                error = a2;\n                break;\n              }\n\n              success = a2;\n              error = a3;\n              //fallthrough\n            } else {\n              params = a1;\n              data = a2;\n              success = a3;\n              break;\n            }\n          case 1:\n            if (isFunction(a1)) success = a1;\n            else if (hasBody) data = a1;\n            else params = a1;\n            break;\n          case 0: break;\n          default:\n            throw \"Expected between 0-4 arguments [params, data, success, error], got \" +\n              arguments.length + \" arguments.\";\n          }\n\n          var value = this instanceof Resource ? this : (action.isArray ? [] : new Resource(data));\n          $http({\n            method: action.method,\n            url: route.url(extend({}, extractParams(data, action.params || {}), params)),\n            data: data\n          }).then(function(response) {\n              var data = response.data;\n\n              if (data) {\n                if (action.isArray) {\n                  value.length = 0;\n                  forEach(data, function(item) {\n                    value.push(new Resource(item));\n                  });\n                } else {\n                  copy(data, value);\n                }\n              }\n              (success||noop)(value, response.headers);\n            }, error);\n\n          return value;\n        };\n\n\n        Resource.prototype['$' + name] = function(a1, a2, a3) {\n          var params = extractParams(this),\n              success = noop,\n              error;\n\n          switch(arguments.length) {\n          case 3: params = a1; success = a2; error = a3; break;\n          case 2:\n          case 1:\n            if (isFunction(a1)) {\n              success = a1;\n              error = a2;\n            } else {\n              params = a1;\n              success = a2 || noop;\n            }\n          case 0: break;\n          default:\n            throw \"Expected between 1-3 arguments [params, success, error], got \" +\n              arguments.length + \" arguments.\";\n          }\n          var data = hasBody ? this : undefined;\n          Resource[name].call(this, params, data, success, error);\n        };\n      });\n\n      Resource.bind = function(additionalParamDefaults){\n        return ResourceFactory(url, extend({}, paramDefaults, additionalParamDefaults), actions);\n      };\n\n      return Resource;\n    }\n\n    return ResourceFactory;\n  }]);\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.0.7\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name ngCookies\n */\n\n\nangular.module('ngCookies', ['ng']).\n  /**\n   * @ngdoc object\n   * @name ngCookies.$cookies\n   * @requires $browser\n   *\n   * @description\n   * Provides read/write access to browser's cookies.\n   *\n   * Only a simple Object is exposed and by adding or removing properties to/from\n   * this object, new cookies are created/deleted at the end of current $eval.\n   *\n   * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function ExampleController($cookies) {\n           // Retrieving a cookie\n           var favoriteCookie = $cookies.myFavorite;\n           // Setting a cookie\n           $cookies.myFavorite = 'oatmeal';\n         }\n       </script>\n     </doc:source>\n   </doc:example>\n   */\n   factory('$cookies', ['$rootScope', '$browser', function ($rootScope, $browser) {\n      var cookies = {},\n          lastCookies = {},\n          lastBrowserCookies,\n          runEval = false,\n          copy = angular.copy,\n          isUndefined = angular.isUndefined;\n\n      //creates a poller fn that copies all cookies from the $browser to service & inits the service\n      $browser.addPollFn(function() {\n        var currentCookies = $browser.cookies();\n        if (lastBrowserCookies != currentCookies) { //relies on browser.cookies() impl\n          lastBrowserCookies = currentCookies;\n          copy(currentCookies, lastCookies);\n          copy(currentCookies, cookies);\n          if (runEval) $rootScope.$apply();\n        }\n      })();\n\n      runEval = true;\n\n      //at the end of each eval, push cookies\n      //TODO: this should happen before the \"delayed\" watches fire, because if some cookies are not\n      //      strings or browser refuses to store some cookies, we update the model in the push fn.\n      $rootScope.$watch(push);\n\n      return cookies;\n\n\n      /**\n       * Pushes all the cookies from the service to the browser and verifies if all cookies were stored.\n       */\n      function push() {\n        var name,\n            value,\n            browserCookies,\n            updated;\n\n        //delete any cookies deleted in $cookies\n        for (name in lastCookies) {\n          if (isUndefined(cookies[name])) {\n            $browser.cookies(name, undefined);\n          }\n        }\n\n        //update all cookies updated in $cookies\n        for(name in cookies) {\n          value = cookies[name];\n          if (!angular.isString(value)) {\n            if (angular.isDefined(lastCookies[name])) {\n              cookies[name] = lastCookies[name];\n            } else {\n              delete cookies[name];\n            }\n          } else if (value !== lastCookies[name]) {\n            $browser.cookies(name, value);\n            updated = true;\n          }\n        }\n\n        //verify what was actually stored\n        if (updated){\n          updated = false;\n          browserCookies = $browser.cookies();\n\n          for (name in cookies) {\n            if (cookies[name] !== browserCookies[name]) {\n              //delete or reset all cookies that the browser dropped from $cookies\n              if (isUndefined(browserCookies[name])) {\n                delete cookies[name];\n              } else {\n                cookies[name] = browserCookies[name];\n              }\n              updated = true;\n            }\n          }\n        }\n      }\n    }]).\n\n\n  /**\n   * @ngdoc object\n   * @name ngCookies.$cookieStore\n   * @requires $cookies\n   *\n   * @description\n   * Provides a key-value (string-object) storage, that is backed by session cookies.\n   * Objects put or retrieved from this storage are automatically serialized or\n   * deserialized by angular's toJson/fromJson.\n   * @example\n   */\n   factory('$cookieStore', ['$cookies', function($cookies) {\n\n      return {\n        /**\n         * @ngdoc method\n         * @name ngCookies.$cookieStore#get\n         * @methodOf ngCookies.$cookieStore\n         *\n         * @description\n         * Returns the value of given cookie key\n         *\n         * @param {string} key Id to use for lookup.\n         * @returns {Object} Deserialized cookie value.\n         */\n        get: function(key) {\n          var value = $cookies[key];\n          return value ? angular.fromJson(value) : value;\n        },\n\n        /**\n         * @ngdoc method\n         * @name ngCookies.$cookieStore#put\n         * @methodOf ngCookies.$cookieStore\n         *\n         * @description\n         * Sets a value for given cookie key\n         *\n         * @param {string} key Id for the `value`.\n         * @param {Object} value Value to be stored.\n         */\n        put: function(key, value) {\n          $cookies[key] = angular.toJson(value);\n        },\n\n        /**\n         * @ngdoc method\n         * @name ngCookies.$cookieStore#remove\n         * @methodOf ngCookies.$cookieStore\n         *\n         * @description\n         * Remove given cookie\n         *\n         * @param {string} key Id of the key-value pair to delete.\n         */\n        remove: function(key) {\n          delete $cookies[key];\n        }\n      };\n\n    }]);\n\n\n})(window, window.angular);\n","/**\n * @description Google Chart Api Directive Module for AngularJS\n * @version 0.1\n * @author Nicolas Bouillon <nicolas@bouil.org>\n * @license MIT\n * @year 2013\n */\n(function () {\n    'use strict';\n\n    angular.module('googlechart.directives', []).directive('googleChart', ['$timeout', '$window', function ($timeout, $window) {\n        return {\n            restrict: 'A',\n            scope: {\n                chart: '=chart'\n            },\n            link: function ($scope, $elm, $attr) {\n                // Watches, to refresh the chart when its data, title or dimensions change\n                $scope.$watch('chart', function () {\n                    draw();\n                }, true); // true is for deep object equality checking\n\n                // Redraw the chart if the window is resized \n                angular.element($window).bind('resize', function () {\n                    draw();\n                });\n\n                function draw() {\n                    if (!draw.triggered && ($scope.chart != undefined)) {\n                        draw.triggered = true;\n                        $timeout(function () {\n                            draw.triggered = false;\n                            var dataTable = new google.visualization.DataTable($scope.chart.data, 0.5);\n\n                            var chartWrapperArgs = {\n                                chartType: $scope.chart.type,\n                                dataTable: dataTable,\n                                view: $scope.chart.view,\n                                options: $scope.chart.options,\n                                containerId: $elm[0]\n                            };\n\n                            if($scope.chartWrapper==null) {\n                            \t$scope.chartWrapper = new google.visualization.ChartWrapper(chartWrapperArgs);\n                                google.visualization.events.addListener($scope.chartWrapper, 'ready', function () {\n                                    $scope.chart.displayed = true;\n                                });\n                                google.visualization.events.addListener($scope.chartWrapper, 'error', function (err) {\n                                    console.log(\"Chart not displayed due to error: \" + err.message);\n                                });\n                            }\n                            else {\n                            \t$scope.chartWrapper.setChartType($scope.chart.type);\n                            \t$scope.chartWrapper.setDataTable(dataTable);\n                                $scope.chartWrapper.setView($scope.chart.view);\n                            \t$scope.chartWrapper.setOptions($scope.chart.options);\n                            }\n                            \t\n                            $timeout(function () {\n                            \t$scope.chartWrapper.draw();\n                            });\n                        }, 0, true);\n                    }\n                }\n\n            }\n        };\n    }]);\n})();\n"]}